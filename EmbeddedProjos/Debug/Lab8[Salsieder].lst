
Lab8[Salsieder].elf:     file format elf32-littlearm


Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000408 	.word	0x20000408
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08006e20 	.word	0x08006e20

080001f4 <frame_dummy>:
 80001f4:	4b0c      	ldr	r3, [pc, #48]	; (8000228 <frame_dummy+0x34>)
 80001f6:	b143      	cbz	r3, 800020a <frame_dummy+0x16>
 80001f8:	480c      	ldr	r0, [pc, #48]	; (800022c <frame_dummy+0x38>)
 80001fa:	490d      	ldr	r1, [pc, #52]	; (8000230 <frame_dummy+0x3c>)
 80001fc:	b510      	push	{r4, lr}
 80001fe:	f3af 8000 	nop.w
 8000202:	480c      	ldr	r0, [pc, #48]	; (8000234 <frame_dummy+0x40>)
 8000204:	6803      	ldr	r3, [r0, #0]
 8000206:	b923      	cbnz	r3, 8000212 <frame_dummy+0x1e>
 8000208:	bd10      	pop	{r4, pc}
 800020a:	480a      	ldr	r0, [pc, #40]	; (8000234 <frame_dummy+0x40>)
 800020c:	6803      	ldr	r3, [r0, #0]
 800020e:	b933      	cbnz	r3, 800021e <frame_dummy+0x2a>
 8000210:	4770      	bx	lr
 8000212:	4b09      	ldr	r3, [pc, #36]	; (8000238 <frame_dummy+0x44>)
 8000214:	2b00      	cmp	r3, #0
 8000216:	d0f7      	beq.n	8000208 <frame_dummy+0x14>
 8000218:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800021c:	4718      	bx	r3
 800021e:	4b06      	ldr	r3, [pc, #24]	; (8000238 <frame_dummy+0x44>)
 8000220:	2b00      	cmp	r3, #0
 8000222:	d0f5      	beq.n	8000210 <frame_dummy+0x1c>
 8000224:	4718      	bx	r3
 8000226:	bf00      	nop
 8000228:	00000000 	.word	0x00000000
 800022c:	08006e20 	.word	0x08006e20
 8000230:	2000040c 	.word	0x2000040c
 8000234:	20000408 	.word	0x20000408
 8000238:	00000000 	.word	0x00000000

0800023c <__aeabi_drsub>:
 800023c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000240:	e002      	b.n	8000248 <__adddf3>
 8000242:	bf00      	nop

08000244 <__aeabi_dsub>:
 8000244:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000248 <__adddf3>:
 8000248:	b530      	push	{r4, r5, lr}
 800024a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800024e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000252:	ea94 0f05 	teq	r4, r5
 8000256:	bf08      	it	eq
 8000258:	ea90 0f02 	teqeq	r0, r2
 800025c:	bf1f      	itttt	ne
 800025e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000262:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000266:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800026a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800026e:	f000 80e2 	beq.w	8000436 <__adddf3+0x1ee>
 8000272:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000276:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800027a:	bfb8      	it	lt
 800027c:	426d      	neglt	r5, r5
 800027e:	dd0c      	ble.n	800029a <__adddf3+0x52>
 8000280:	442c      	add	r4, r5
 8000282:	ea80 0202 	eor.w	r2, r0, r2
 8000286:	ea81 0303 	eor.w	r3, r1, r3
 800028a:	ea82 0000 	eor.w	r0, r2, r0
 800028e:	ea83 0101 	eor.w	r1, r3, r1
 8000292:	ea80 0202 	eor.w	r2, r0, r2
 8000296:	ea81 0303 	eor.w	r3, r1, r3
 800029a:	2d36      	cmp	r5, #54	; 0x36
 800029c:	bf88      	it	hi
 800029e:	bd30      	pophi	{r4, r5, pc}
 80002a0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002a4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002a8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002ac:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002b0:	d002      	beq.n	80002b8 <__adddf3+0x70>
 80002b2:	4240      	negs	r0, r0
 80002b4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002b8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002bc:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002c0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002c4:	d002      	beq.n	80002cc <__adddf3+0x84>
 80002c6:	4252      	negs	r2, r2
 80002c8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002cc:	ea94 0f05 	teq	r4, r5
 80002d0:	f000 80a7 	beq.w	8000422 <__adddf3+0x1da>
 80002d4:	f1a4 0401 	sub.w	r4, r4, #1
 80002d8:	f1d5 0e20 	rsbs	lr, r5, #32
 80002dc:	db0d      	blt.n	80002fa <__adddf3+0xb2>
 80002de:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002e2:	fa22 f205 	lsr.w	r2, r2, r5
 80002e6:	1880      	adds	r0, r0, r2
 80002e8:	f141 0100 	adc.w	r1, r1, #0
 80002ec:	fa03 f20e 	lsl.w	r2, r3, lr
 80002f0:	1880      	adds	r0, r0, r2
 80002f2:	fa43 f305 	asr.w	r3, r3, r5
 80002f6:	4159      	adcs	r1, r3
 80002f8:	e00e      	b.n	8000318 <__adddf3+0xd0>
 80002fa:	f1a5 0520 	sub.w	r5, r5, #32
 80002fe:	f10e 0e20 	add.w	lr, lr, #32
 8000302:	2a01      	cmp	r2, #1
 8000304:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000308:	bf28      	it	cs
 800030a:	f04c 0c02 	orrcs.w	ip, ip, #2
 800030e:	fa43 f305 	asr.w	r3, r3, r5
 8000312:	18c0      	adds	r0, r0, r3
 8000314:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000318:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800031c:	d507      	bpl.n	800032e <__adddf3+0xe6>
 800031e:	f04f 0e00 	mov.w	lr, #0
 8000322:	f1dc 0c00 	rsbs	ip, ip, #0
 8000326:	eb7e 0000 	sbcs.w	r0, lr, r0
 800032a:	eb6e 0101 	sbc.w	r1, lr, r1
 800032e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000332:	d31b      	bcc.n	800036c <__adddf3+0x124>
 8000334:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000338:	d30c      	bcc.n	8000354 <__adddf3+0x10c>
 800033a:	0849      	lsrs	r1, r1, #1
 800033c:	ea5f 0030 	movs.w	r0, r0, rrx
 8000340:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000344:	f104 0401 	add.w	r4, r4, #1
 8000348:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800034c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000350:	f080 809a 	bcs.w	8000488 <__adddf3+0x240>
 8000354:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000358:	bf08      	it	eq
 800035a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800035e:	f150 0000 	adcs.w	r0, r0, #0
 8000362:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000366:	ea41 0105 	orr.w	r1, r1, r5
 800036a:	bd30      	pop	{r4, r5, pc}
 800036c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000370:	4140      	adcs	r0, r0
 8000372:	eb41 0101 	adc.w	r1, r1, r1
 8000376:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800037a:	f1a4 0401 	sub.w	r4, r4, #1
 800037e:	d1e9      	bne.n	8000354 <__adddf3+0x10c>
 8000380:	f091 0f00 	teq	r1, #0
 8000384:	bf04      	itt	eq
 8000386:	4601      	moveq	r1, r0
 8000388:	2000      	moveq	r0, #0
 800038a:	fab1 f381 	clz	r3, r1
 800038e:	bf08      	it	eq
 8000390:	3320      	addeq	r3, #32
 8000392:	f1a3 030b 	sub.w	r3, r3, #11
 8000396:	f1b3 0220 	subs.w	r2, r3, #32
 800039a:	da0c      	bge.n	80003b6 <__adddf3+0x16e>
 800039c:	320c      	adds	r2, #12
 800039e:	dd08      	ble.n	80003b2 <__adddf3+0x16a>
 80003a0:	f102 0c14 	add.w	ip, r2, #20
 80003a4:	f1c2 020c 	rsb	r2, r2, #12
 80003a8:	fa01 f00c 	lsl.w	r0, r1, ip
 80003ac:	fa21 f102 	lsr.w	r1, r1, r2
 80003b0:	e00c      	b.n	80003cc <__adddf3+0x184>
 80003b2:	f102 0214 	add.w	r2, r2, #20
 80003b6:	bfd8      	it	le
 80003b8:	f1c2 0c20 	rsble	ip, r2, #32
 80003bc:	fa01 f102 	lsl.w	r1, r1, r2
 80003c0:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003c4:	bfdc      	itt	le
 80003c6:	ea41 010c 	orrle.w	r1, r1, ip
 80003ca:	4090      	lslle	r0, r2
 80003cc:	1ae4      	subs	r4, r4, r3
 80003ce:	bfa2      	ittt	ge
 80003d0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003d4:	4329      	orrge	r1, r5
 80003d6:	bd30      	popge	{r4, r5, pc}
 80003d8:	ea6f 0404 	mvn.w	r4, r4
 80003dc:	3c1f      	subs	r4, #31
 80003de:	da1c      	bge.n	800041a <__adddf3+0x1d2>
 80003e0:	340c      	adds	r4, #12
 80003e2:	dc0e      	bgt.n	8000402 <__adddf3+0x1ba>
 80003e4:	f104 0414 	add.w	r4, r4, #20
 80003e8:	f1c4 0220 	rsb	r2, r4, #32
 80003ec:	fa20 f004 	lsr.w	r0, r0, r4
 80003f0:	fa01 f302 	lsl.w	r3, r1, r2
 80003f4:	ea40 0003 	orr.w	r0, r0, r3
 80003f8:	fa21 f304 	lsr.w	r3, r1, r4
 80003fc:	ea45 0103 	orr.w	r1, r5, r3
 8000400:	bd30      	pop	{r4, r5, pc}
 8000402:	f1c4 040c 	rsb	r4, r4, #12
 8000406:	f1c4 0220 	rsb	r2, r4, #32
 800040a:	fa20 f002 	lsr.w	r0, r0, r2
 800040e:	fa01 f304 	lsl.w	r3, r1, r4
 8000412:	ea40 0003 	orr.w	r0, r0, r3
 8000416:	4629      	mov	r1, r5
 8000418:	bd30      	pop	{r4, r5, pc}
 800041a:	fa21 f004 	lsr.w	r0, r1, r4
 800041e:	4629      	mov	r1, r5
 8000420:	bd30      	pop	{r4, r5, pc}
 8000422:	f094 0f00 	teq	r4, #0
 8000426:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800042a:	bf06      	itte	eq
 800042c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000430:	3401      	addeq	r4, #1
 8000432:	3d01      	subne	r5, #1
 8000434:	e74e      	b.n	80002d4 <__adddf3+0x8c>
 8000436:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800043a:	bf18      	it	ne
 800043c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000440:	d029      	beq.n	8000496 <__adddf3+0x24e>
 8000442:	ea94 0f05 	teq	r4, r5
 8000446:	bf08      	it	eq
 8000448:	ea90 0f02 	teqeq	r0, r2
 800044c:	d005      	beq.n	800045a <__adddf3+0x212>
 800044e:	ea54 0c00 	orrs.w	ip, r4, r0
 8000452:	bf04      	itt	eq
 8000454:	4619      	moveq	r1, r3
 8000456:	4610      	moveq	r0, r2
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	ea91 0f03 	teq	r1, r3
 800045e:	bf1e      	ittt	ne
 8000460:	2100      	movne	r1, #0
 8000462:	2000      	movne	r0, #0
 8000464:	bd30      	popne	{r4, r5, pc}
 8000466:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800046a:	d105      	bne.n	8000478 <__adddf3+0x230>
 800046c:	0040      	lsls	r0, r0, #1
 800046e:	4149      	adcs	r1, r1
 8000470:	bf28      	it	cs
 8000472:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000476:	bd30      	pop	{r4, r5, pc}
 8000478:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800047c:	bf3c      	itt	cc
 800047e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000482:	bd30      	popcc	{r4, r5, pc}
 8000484:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000488:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800048c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000490:	f04f 0000 	mov.w	r0, #0
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049a:	bf1a      	itte	ne
 800049c:	4619      	movne	r1, r3
 800049e:	4610      	movne	r0, r2
 80004a0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004a4:	bf1c      	itt	ne
 80004a6:	460b      	movne	r3, r1
 80004a8:	4602      	movne	r2, r0
 80004aa:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004ae:	bf06      	itte	eq
 80004b0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004b4:	ea91 0f03 	teqeq	r1, r3
 80004b8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	bf00      	nop

080004c0 <__aeabi_ui2d>:
 80004c0:	f090 0f00 	teq	r0, #0
 80004c4:	bf04      	itt	eq
 80004c6:	2100      	moveq	r1, #0
 80004c8:	4770      	bxeq	lr
 80004ca:	b530      	push	{r4, r5, lr}
 80004cc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004d0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004d4:	f04f 0500 	mov.w	r5, #0
 80004d8:	f04f 0100 	mov.w	r1, #0
 80004dc:	e750      	b.n	8000380 <__adddf3+0x138>
 80004de:	bf00      	nop

080004e0 <__aeabi_i2d>:
 80004e0:	f090 0f00 	teq	r0, #0
 80004e4:	bf04      	itt	eq
 80004e6:	2100      	moveq	r1, #0
 80004e8:	4770      	bxeq	lr
 80004ea:	b530      	push	{r4, r5, lr}
 80004ec:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004f0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004f4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004f8:	bf48      	it	mi
 80004fa:	4240      	negmi	r0, r0
 80004fc:	f04f 0100 	mov.w	r1, #0
 8000500:	e73e      	b.n	8000380 <__adddf3+0x138>
 8000502:	bf00      	nop

08000504 <__aeabi_f2d>:
 8000504:	0042      	lsls	r2, r0, #1
 8000506:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800050a:	ea4f 0131 	mov.w	r1, r1, rrx
 800050e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000512:	bf1f      	itttt	ne
 8000514:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000518:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 800051c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000520:	4770      	bxne	lr
 8000522:	f092 0f00 	teq	r2, #0
 8000526:	bf14      	ite	ne
 8000528:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000534:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000538:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800053c:	e720      	b.n	8000380 <__adddf3+0x138>
 800053e:	bf00      	nop

08000540 <__aeabi_ul2d>:
 8000540:	ea50 0201 	orrs.w	r2, r0, r1
 8000544:	bf08      	it	eq
 8000546:	4770      	bxeq	lr
 8000548:	b530      	push	{r4, r5, lr}
 800054a:	f04f 0500 	mov.w	r5, #0
 800054e:	e00a      	b.n	8000566 <__aeabi_l2d+0x16>

08000550 <__aeabi_l2d>:
 8000550:	ea50 0201 	orrs.w	r2, r0, r1
 8000554:	bf08      	it	eq
 8000556:	4770      	bxeq	lr
 8000558:	b530      	push	{r4, r5, lr}
 800055a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800055e:	d502      	bpl.n	8000566 <__aeabi_l2d+0x16>
 8000560:	4240      	negs	r0, r0
 8000562:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000566:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800056a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800056e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000572:	f43f aedc 	beq.w	800032e <__adddf3+0xe6>
 8000576:	f04f 0203 	mov.w	r2, #3
 800057a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800057e:	bf18      	it	ne
 8000580:	3203      	addne	r2, #3
 8000582:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000586:	bf18      	it	ne
 8000588:	3203      	addne	r2, #3
 800058a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800058e:	f1c2 0320 	rsb	r3, r2, #32
 8000592:	fa00 fc03 	lsl.w	ip, r0, r3
 8000596:	fa20 f002 	lsr.w	r0, r0, r2
 800059a:	fa01 fe03 	lsl.w	lr, r1, r3
 800059e:	ea40 000e 	orr.w	r0, r0, lr
 80005a2:	fa21 f102 	lsr.w	r1, r1, r2
 80005a6:	4414      	add	r4, r2
 80005a8:	e6c1      	b.n	800032e <__adddf3+0xe6>
 80005aa:	bf00      	nop

080005ac <__aeabi_dmul>:
 80005ac:	b570      	push	{r4, r5, r6, lr}
 80005ae:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005b2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005b6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005ba:	bf1d      	ittte	ne
 80005bc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005c0:	ea94 0f0c 	teqne	r4, ip
 80005c4:	ea95 0f0c 	teqne	r5, ip
 80005c8:	f000 f8de 	bleq	8000788 <__aeabi_dmul+0x1dc>
 80005cc:	442c      	add	r4, r5
 80005ce:	ea81 0603 	eor.w	r6, r1, r3
 80005d2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005d6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005da:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005de:	bf18      	it	ne
 80005e0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005e4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005e8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005ec:	d038      	beq.n	8000660 <__aeabi_dmul+0xb4>
 80005ee:	fba0 ce02 	umull	ip, lr, r0, r2
 80005f2:	f04f 0500 	mov.w	r5, #0
 80005f6:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005fa:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005fe:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000602:	f04f 0600 	mov.w	r6, #0
 8000606:	fbe1 5603 	umlal	r5, r6, r1, r3
 800060a:	f09c 0f00 	teq	ip, #0
 800060e:	bf18      	it	ne
 8000610:	f04e 0e01 	orrne.w	lr, lr, #1
 8000614:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000618:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800061c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000620:	d204      	bcs.n	800062c <__aeabi_dmul+0x80>
 8000622:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000626:	416d      	adcs	r5, r5
 8000628:	eb46 0606 	adc.w	r6, r6, r6
 800062c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000630:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000634:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000638:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 800063c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000640:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000644:	bf88      	it	hi
 8000646:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800064a:	d81e      	bhi.n	800068a <__aeabi_dmul+0xde>
 800064c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000650:	bf08      	it	eq
 8000652:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000656:	f150 0000 	adcs.w	r0, r0, #0
 800065a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800065e:	bd70      	pop	{r4, r5, r6, pc}
 8000660:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000664:	ea46 0101 	orr.w	r1, r6, r1
 8000668:	ea40 0002 	orr.w	r0, r0, r2
 800066c:	ea81 0103 	eor.w	r1, r1, r3
 8000670:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000674:	bfc2      	ittt	gt
 8000676:	ebd4 050c 	rsbsgt	r5, r4, ip
 800067a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800067e:	bd70      	popgt	{r4, r5, r6, pc}
 8000680:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000684:	f04f 0e00 	mov.w	lr, #0
 8000688:	3c01      	subs	r4, #1
 800068a:	f300 80ab 	bgt.w	80007e4 <__aeabi_dmul+0x238>
 800068e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000692:	bfde      	ittt	le
 8000694:	2000      	movle	r0, #0
 8000696:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800069a:	bd70      	pople	{r4, r5, r6, pc}
 800069c:	f1c4 0400 	rsb	r4, r4, #0
 80006a0:	3c20      	subs	r4, #32
 80006a2:	da35      	bge.n	8000710 <__aeabi_dmul+0x164>
 80006a4:	340c      	adds	r4, #12
 80006a6:	dc1b      	bgt.n	80006e0 <__aeabi_dmul+0x134>
 80006a8:	f104 0414 	add.w	r4, r4, #20
 80006ac:	f1c4 0520 	rsb	r5, r4, #32
 80006b0:	fa00 f305 	lsl.w	r3, r0, r5
 80006b4:	fa20 f004 	lsr.w	r0, r0, r4
 80006b8:	fa01 f205 	lsl.w	r2, r1, r5
 80006bc:	ea40 0002 	orr.w	r0, r0, r2
 80006c0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006c8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006cc:	fa21 f604 	lsr.w	r6, r1, r4
 80006d0:	eb42 0106 	adc.w	r1, r2, r6
 80006d4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006d8:	bf08      	it	eq
 80006da:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006de:	bd70      	pop	{r4, r5, r6, pc}
 80006e0:	f1c4 040c 	rsb	r4, r4, #12
 80006e4:	f1c4 0520 	rsb	r5, r4, #32
 80006e8:	fa00 f304 	lsl.w	r3, r0, r4
 80006ec:	fa20 f005 	lsr.w	r0, r0, r5
 80006f0:	fa01 f204 	lsl.w	r2, r1, r4
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006fc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000700:	f141 0100 	adc.w	r1, r1, #0
 8000704:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000708:	bf08      	it	eq
 800070a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800070e:	bd70      	pop	{r4, r5, r6, pc}
 8000710:	f1c4 0520 	rsb	r5, r4, #32
 8000714:	fa00 f205 	lsl.w	r2, r0, r5
 8000718:	ea4e 0e02 	orr.w	lr, lr, r2
 800071c:	fa20 f304 	lsr.w	r3, r0, r4
 8000720:	fa01 f205 	lsl.w	r2, r1, r5
 8000724:	ea43 0302 	orr.w	r3, r3, r2
 8000728:	fa21 f004 	lsr.w	r0, r1, r4
 800072c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000730:	fa21 f204 	lsr.w	r2, r1, r4
 8000734:	ea20 0002 	bic.w	r0, r0, r2
 8000738:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 800073c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000740:	bf08      	it	eq
 8000742:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000746:	bd70      	pop	{r4, r5, r6, pc}
 8000748:	f094 0f00 	teq	r4, #0
 800074c:	d10f      	bne.n	800076e <__aeabi_dmul+0x1c2>
 800074e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000752:	0040      	lsls	r0, r0, #1
 8000754:	eb41 0101 	adc.w	r1, r1, r1
 8000758:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800075c:	bf08      	it	eq
 800075e:	3c01      	subeq	r4, #1
 8000760:	d0f7      	beq.n	8000752 <__aeabi_dmul+0x1a6>
 8000762:	ea41 0106 	orr.w	r1, r1, r6
 8000766:	f095 0f00 	teq	r5, #0
 800076a:	bf18      	it	ne
 800076c:	4770      	bxne	lr
 800076e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000772:	0052      	lsls	r2, r2, #1
 8000774:	eb43 0303 	adc.w	r3, r3, r3
 8000778:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 800077c:	bf08      	it	eq
 800077e:	3d01      	subeq	r5, #1
 8000780:	d0f7      	beq.n	8000772 <__aeabi_dmul+0x1c6>
 8000782:	ea43 0306 	orr.w	r3, r3, r6
 8000786:	4770      	bx	lr
 8000788:	ea94 0f0c 	teq	r4, ip
 800078c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000790:	bf18      	it	ne
 8000792:	ea95 0f0c 	teqne	r5, ip
 8000796:	d00c      	beq.n	80007b2 <__aeabi_dmul+0x206>
 8000798:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800079c:	bf18      	it	ne
 800079e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007a2:	d1d1      	bne.n	8000748 <__aeabi_dmul+0x19c>
 80007a4:	ea81 0103 	eor.w	r1, r1, r3
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ac:	f04f 0000 	mov.w	r0, #0
 80007b0:	bd70      	pop	{r4, r5, r6, pc}
 80007b2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007b6:	bf06      	itte	eq
 80007b8:	4610      	moveq	r0, r2
 80007ba:	4619      	moveq	r1, r3
 80007bc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007c0:	d019      	beq.n	80007f6 <__aeabi_dmul+0x24a>
 80007c2:	ea94 0f0c 	teq	r4, ip
 80007c6:	d102      	bne.n	80007ce <__aeabi_dmul+0x222>
 80007c8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007cc:	d113      	bne.n	80007f6 <__aeabi_dmul+0x24a>
 80007ce:	ea95 0f0c 	teq	r5, ip
 80007d2:	d105      	bne.n	80007e0 <__aeabi_dmul+0x234>
 80007d4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007d8:	bf1c      	itt	ne
 80007da:	4610      	movne	r0, r2
 80007dc:	4619      	movne	r1, r3
 80007de:	d10a      	bne.n	80007f6 <__aeabi_dmul+0x24a>
 80007e0:	ea81 0103 	eor.w	r1, r1, r3
 80007e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007e8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007ec:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f0:	f04f 0000 	mov.w	r0, #0
 80007f4:	bd70      	pop	{r4, r5, r6, pc}
 80007f6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007fa:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007fe:	bd70      	pop	{r4, r5, r6, pc}

08000800 <__aeabi_ddiv>:
 8000800:	b570      	push	{r4, r5, r6, lr}
 8000802:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000806:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800080a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800080e:	bf1d      	ittte	ne
 8000810:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000814:	ea94 0f0c 	teqne	r4, ip
 8000818:	ea95 0f0c 	teqne	r5, ip
 800081c:	f000 f8a7 	bleq	800096e <__aeabi_ddiv+0x16e>
 8000820:	eba4 0405 	sub.w	r4, r4, r5
 8000824:	ea81 0e03 	eor.w	lr, r1, r3
 8000828:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800082c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000830:	f000 8088 	beq.w	8000944 <__aeabi_ddiv+0x144>
 8000834:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000838:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 800083c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000840:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000844:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000848:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 800084c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000850:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000854:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000858:	429d      	cmp	r5, r3
 800085a:	bf08      	it	eq
 800085c:	4296      	cmpeq	r6, r2
 800085e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000862:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000866:	d202      	bcs.n	800086e <__aeabi_ddiv+0x6e>
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	1ab6      	subs	r6, r6, r2
 8000870:	eb65 0503 	sbc.w	r5, r5, r3
 8000874:	085b      	lsrs	r3, r3, #1
 8000876:	ea4f 0232 	mov.w	r2, r2, rrx
 800087a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800087e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000882:	ebb6 0e02 	subs.w	lr, r6, r2
 8000886:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088a:	bf22      	ittt	cs
 800088c:	1ab6      	subcs	r6, r6, r2
 800088e:	4675      	movcs	r5, lr
 8000890:	ea40 000c 	orrcs.w	r0, r0, ip
 8000894:	085b      	lsrs	r3, r3, #1
 8000896:	ea4f 0232 	mov.w	r2, r2, rrx
 800089a:	ebb6 0e02 	subs.w	lr, r6, r2
 800089e:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a2:	bf22      	ittt	cs
 80008a4:	1ab6      	subcs	r6, r6, r2
 80008a6:	4675      	movcs	r5, lr
 80008a8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008ac:	085b      	lsrs	r3, r3, #1
 80008ae:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b2:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ba:	bf22      	ittt	cs
 80008bc:	1ab6      	subcs	r6, r6, r2
 80008be:	4675      	movcs	r5, lr
 80008c0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ce:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d2:	bf22      	ittt	cs
 80008d4:	1ab6      	subcs	r6, r6, r2
 80008d6:	4675      	movcs	r5, lr
 80008d8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008dc:	ea55 0e06 	orrs.w	lr, r5, r6
 80008e0:	d018      	beq.n	8000914 <__aeabi_ddiv+0x114>
 80008e2:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008e6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008ea:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008ee:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008f2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008f6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008fa:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008fe:	d1c0      	bne.n	8000882 <__aeabi_ddiv+0x82>
 8000900:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000904:	d10b      	bne.n	800091e <__aeabi_ddiv+0x11e>
 8000906:	ea41 0100 	orr.w	r1, r1, r0
 800090a:	f04f 0000 	mov.w	r0, #0
 800090e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000912:	e7b6      	b.n	8000882 <__aeabi_ddiv+0x82>
 8000914:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000918:	bf04      	itt	eq
 800091a:	4301      	orreq	r1, r0
 800091c:	2000      	moveq	r0, #0
 800091e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000922:	bf88      	it	hi
 8000924:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000928:	f63f aeaf 	bhi.w	800068a <__aeabi_dmul+0xde>
 800092c:	ebb5 0c03 	subs.w	ip, r5, r3
 8000930:	bf04      	itt	eq
 8000932:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000936:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800093a:	f150 0000 	adcs.w	r0, r0, #0
 800093e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000942:	bd70      	pop	{r4, r5, r6, pc}
 8000944:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000948:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 800094c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000950:	bfc2      	ittt	gt
 8000952:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000956:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800095a:	bd70      	popgt	{r4, r5, r6, pc}
 800095c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000960:	f04f 0e00 	mov.w	lr, #0
 8000964:	3c01      	subs	r4, #1
 8000966:	e690      	b.n	800068a <__aeabi_dmul+0xde>
 8000968:	ea45 0e06 	orr.w	lr, r5, r6
 800096c:	e68d      	b.n	800068a <__aeabi_dmul+0xde>
 800096e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000972:	ea94 0f0c 	teq	r4, ip
 8000976:	bf08      	it	eq
 8000978:	ea95 0f0c 	teqeq	r5, ip
 800097c:	f43f af3b 	beq.w	80007f6 <__aeabi_dmul+0x24a>
 8000980:	ea94 0f0c 	teq	r4, ip
 8000984:	d10a      	bne.n	800099c <__aeabi_ddiv+0x19c>
 8000986:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800098a:	f47f af34 	bne.w	80007f6 <__aeabi_dmul+0x24a>
 800098e:	ea95 0f0c 	teq	r5, ip
 8000992:	f47f af25 	bne.w	80007e0 <__aeabi_dmul+0x234>
 8000996:	4610      	mov	r0, r2
 8000998:	4619      	mov	r1, r3
 800099a:	e72c      	b.n	80007f6 <__aeabi_dmul+0x24a>
 800099c:	ea95 0f0c 	teq	r5, ip
 80009a0:	d106      	bne.n	80009b0 <__aeabi_ddiv+0x1b0>
 80009a2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009a6:	f43f aefd 	beq.w	80007a4 <__aeabi_dmul+0x1f8>
 80009aa:	4610      	mov	r0, r2
 80009ac:	4619      	mov	r1, r3
 80009ae:	e722      	b.n	80007f6 <__aeabi_dmul+0x24a>
 80009b0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009b4:	bf18      	it	ne
 80009b6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009ba:	f47f aec5 	bne.w	8000748 <__aeabi_dmul+0x19c>
 80009be:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009c2:	f47f af0d 	bne.w	80007e0 <__aeabi_dmul+0x234>
 80009c6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009ca:	f47f aeeb 	bne.w	80007a4 <__aeabi_dmul+0x1f8>
 80009ce:	e712      	b.n	80007f6 <__aeabi_dmul+0x24a>

080009d0 <__aeabi_d2uiz>:
 80009d0:	004a      	lsls	r2, r1, #1
 80009d2:	d211      	bcs.n	80009f8 <__aeabi_d2uiz+0x28>
 80009d4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80009d8:	d211      	bcs.n	80009fe <__aeabi_d2uiz+0x2e>
 80009da:	d50d      	bpl.n	80009f8 <__aeabi_d2uiz+0x28>
 80009dc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 80009e0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80009e4:	d40e      	bmi.n	8000a04 <__aeabi_d2uiz+0x34>
 80009e6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80009ea:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80009ee:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80009f2:	fa23 f002 	lsr.w	r0, r3, r2
 80009f6:	4770      	bx	lr
 80009f8:	f04f 0000 	mov.w	r0, #0
 80009fc:	4770      	bx	lr
 80009fe:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a02:	d102      	bne.n	8000a0a <__aeabi_d2uiz+0x3a>
 8000a04:	f04f 30ff 	mov.w	r0, #4294967295
 8000a08:	4770      	bx	lr
 8000a0a:	f04f 0000 	mov.w	r0, #0
 8000a0e:	4770      	bx	lr

08000a10 <strlen>:
 8000a10:	4603      	mov	r3, r0
 8000a12:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a16:	2a00      	cmp	r2, #0
 8000a18:	d1fb      	bne.n	8000a12 <strlen+0x2>
 8000a1a:	1a18      	subs	r0, r3, r0
 8000a1c:	3801      	subs	r0, #1
 8000a1e:	4770      	bx	lr

08000a20 <memchr>:
 8000a20:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000a24:	2a10      	cmp	r2, #16
 8000a26:	db2b      	blt.n	8000a80 <memchr+0x60>
 8000a28:	f010 0f07 	tst.w	r0, #7
 8000a2c:	d008      	beq.n	8000a40 <memchr+0x20>
 8000a2e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000a32:	3a01      	subs	r2, #1
 8000a34:	428b      	cmp	r3, r1
 8000a36:	d02d      	beq.n	8000a94 <memchr+0x74>
 8000a38:	f010 0f07 	tst.w	r0, #7
 8000a3c:	b342      	cbz	r2, 8000a90 <memchr+0x70>
 8000a3e:	d1f6      	bne.n	8000a2e <memchr+0xe>
 8000a40:	b4f0      	push	{r4, r5, r6, r7}
 8000a42:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000a46:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8000a4a:	f022 0407 	bic.w	r4, r2, #7
 8000a4e:	f07f 0700 	mvns.w	r7, #0
 8000a52:	2300      	movs	r3, #0
 8000a54:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000a58:	3c08      	subs	r4, #8
 8000a5a:	ea85 0501 	eor.w	r5, r5, r1
 8000a5e:	ea86 0601 	eor.w	r6, r6, r1
 8000a62:	fa85 f547 	uadd8	r5, r5, r7
 8000a66:	faa3 f587 	sel	r5, r3, r7
 8000a6a:	fa86 f647 	uadd8	r6, r6, r7
 8000a6e:	faa5 f687 	sel	r6, r5, r7
 8000a72:	b98e      	cbnz	r6, 8000a98 <memchr+0x78>
 8000a74:	d1ee      	bne.n	8000a54 <memchr+0x34>
 8000a76:	bcf0      	pop	{r4, r5, r6, r7}
 8000a78:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000a7c:	f002 0207 	and.w	r2, r2, #7
 8000a80:	b132      	cbz	r2, 8000a90 <memchr+0x70>
 8000a82:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000a86:	3a01      	subs	r2, #1
 8000a88:	ea83 0301 	eor.w	r3, r3, r1
 8000a8c:	b113      	cbz	r3, 8000a94 <memchr+0x74>
 8000a8e:	d1f8      	bne.n	8000a82 <memchr+0x62>
 8000a90:	2000      	movs	r0, #0
 8000a92:	4770      	bx	lr
 8000a94:	3801      	subs	r0, #1
 8000a96:	4770      	bx	lr
 8000a98:	2d00      	cmp	r5, #0
 8000a9a:	bf06      	itte	eq
 8000a9c:	4635      	moveq	r5, r6
 8000a9e:	3803      	subeq	r0, #3
 8000aa0:	3807      	subne	r0, #7
 8000aa2:	f015 0f01 	tst.w	r5, #1
 8000aa6:	d107      	bne.n	8000ab8 <memchr+0x98>
 8000aa8:	3001      	adds	r0, #1
 8000aaa:	f415 7f80 	tst.w	r5, #256	; 0x100
 8000aae:	bf02      	ittt	eq
 8000ab0:	3001      	addeq	r0, #1
 8000ab2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000ab6:	3001      	addeq	r0, #1
 8000ab8:	bcf0      	pop	{r4, r5, r6, r7}
 8000aba:	3801      	subs	r0, #1
 8000abc:	4770      	bx	lr
 8000abe:	bf00      	nop

08000ac0 <__gedf2>:
 8000ac0:	f04f 3cff 	mov.w	ip, #4294967295
 8000ac4:	e006      	b.n	8000ad4 <__cmpdf2+0x4>
 8000ac6:	bf00      	nop

08000ac8 <__ledf2>:
 8000ac8:	f04f 0c01 	mov.w	ip, #1
 8000acc:	e002      	b.n	8000ad4 <__cmpdf2+0x4>
 8000ace:	bf00      	nop

08000ad0 <__cmpdf2>:
 8000ad0:	f04f 0c01 	mov.w	ip, #1
 8000ad4:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000ad8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000adc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae4:	bf18      	it	ne
 8000ae6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000aea:	d01b      	beq.n	8000b24 <__cmpdf2+0x54>
 8000aec:	b001      	add	sp, #4
 8000aee:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000af2:	bf0c      	ite	eq
 8000af4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000af8:	ea91 0f03 	teqne	r1, r3
 8000afc:	bf02      	ittt	eq
 8000afe:	ea90 0f02 	teqeq	r0, r2
 8000b02:	2000      	moveq	r0, #0
 8000b04:	4770      	bxeq	lr
 8000b06:	f110 0f00 	cmn.w	r0, #0
 8000b0a:	ea91 0f03 	teq	r1, r3
 8000b0e:	bf58      	it	pl
 8000b10:	4299      	cmppl	r1, r3
 8000b12:	bf08      	it	eq
 8000b14:	4290      	cmpeq	r0, r2
 8000b16:	bf2c      	ite	cs
 8000b18:	17d8      	asrcs	r0, r3, #31
 8000b1a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000b1e:	f040 0001 	orr.w	r0, r0, #1
 8000b22:	4770      	bx	lr
 8000b24:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b28:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b2c:	d102      	bne.n	8000b34 <__cmpdf2+0x64>
 8000b2e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b32:	d107      	bne.n	8000b44 <__cmpdf2+0x74>
 8000b34:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b3c:	d1d6      	bne.n	8000aec <__cmpdf2+0x1c>
 8000b3e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b42:	d0d3      	beq.n	8000aec <__cmpdf2+0x1c>
 8000b44:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000b48:	4770      	bx	lr
 8000b4a:	bf00      	nop

08000b4c <__aeabi_cdrcmple>:
 8000b4c:	4684      	mov	ip, r0
 8000b4e:	4610      	mov	r0, r2
 8000b50:	4662      	mov	r2, ip
 8000b52:	468c      	mov	ip, r1
 8000b54:	4619      	mov	r1, r3
 8000b56:	4663      	mov	r3, ip
 8000b58:	e000      	b.n	8000b5c <__aeabi_cdcmpeq>
 8000b5a:	bf00      	nop

08000b5c <__aeabi_cdcmpeq>:
 8000b5c:	b501      	push	{r0, lr}
 8000b5e:	f7ff ffb7 	bl	8000ad0 <__cmpdf2>
 8000b62:	2800      	cmp	r0, #0
 8000b64:	bf48      	it	mi
 8000b66:	f110 0f00 	cmnmi.w	r0, #0
 8000b6a:	bd01      	pop	{r0, pc}

08000b6c <__aeabi_dcmpeq>:
 8000b6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b70:	f7ff fff4 	bl	8000b5c <__aeabi_cdcmpeq>
 8000b74:	bf0c      	ite	eq
 8000b76:	2001      	moveq	r0, #1
 8000b78:	2000      	movne	r0, #0
 8000b7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b7e:	bf00      	nop

08000b80 <__aeabi_dcmplt>:
 8000b80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b84:	f7ff ffea 	bl	8000b5c <__aeabi_cdcmpeq>
 8000b88:	bf34      	ite	cc
 8000b8a:	2001      	movcc	r0, #1
 8000b8c:	2000      	movcs	r0, #0
 8000b8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b92:	bf00      	nop

08000b94 <__aeabi_dcmple>:
 8000b94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b98:	f7ff ffe0 	bl	8000b5c <__aeabi_cdcmpeq>
 8000b9c:	bf94      	ite	ls
 8000b9e:	2001      	movls	r0, #1
 8000ba0:	2000      	movhi	r0, #0
 8000ba2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_dcmpge>:
 8000ba8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bac:	f7ff ffce 	bl	8000b4c <__aeabi_cdrcmple>
 8000bb0:	bf94      	ite	ls
 8000bb2:	2001      	movls	r0, #1
 8000bb4:	2000      	movhi	r0, #0
 8000bb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bba:	bf00      	nop

08000bbc <__aeabi_dcmpgt>:
 8000bbc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bc0:	f7ff ffc4 	bl	8000b4c <__aeabi_cdrcmple>
 8000bc4:	bf34      	ite	cc
 8000bc6:	2001      	movcc	r0, #1
 8000bc8:	2000      	movcs	r0, #0
 8000bca:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bce:	bf00      	nop

08000bd0 <__aeabi_dcmpun>:
 8000bd0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000bd4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000bd8:	d102      	bne.n	8000be0 <__aeabi_dcmpun+0x10>
 8000bda:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000bde:	d10a      	bne.n	8000bf6 <__aeabi_dcmpun+0x26>
 8000be0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000be4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000be8:	d102      	bne.n	8000bf0 <__aeabi_dcmpun+0x20>
 8000bea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000bee:	d102      	bne.n	8000bf6 <__aeabi_dcmpun+0x26>
 8000bf0:	f04f 0000 	mov.w	r0, #0
 8000bf4:	4770      	bx	lr
 8000bf6:	f04f 0001 	mov.w	r0, #1
 8000bfa:	4770      	bx	lr

08000bfc <__aeabi_d2iz>:
 8000bfc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c00:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c04:	d215      	bcs.n	8000c32 <__aeabi_d2iz+0x36>
 8000c06:	d511      	bpl.n	8000c2c <__aeabi_d2iz+0x30>
 8000c08:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c0c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c10:	d912      	bls.n	8000c38 <__aeabi_d2iz+0x3c>
 8000c12:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c16:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c1a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c1e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000c22:	fa23 f002 	lsr.w	r0, r3, r2
 8000c26:	bf18      	it	ne
 8000c28:	4240      	negne	r0, r0
 8000c2a:	4770      	bx	lr
 8000c2c:	f04f 0000 	mov.w	r0, #0
 8000c30:	4770      	bx	lr
 8000c32:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c36:	d105      	bne.n	8000c44 <__aeabi_d2iz+0x48>
 8000c38:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000c3c:	bf08      	it	eq
 8000c3e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000c42:	4770      	bx	lr
 8000c44:	f04f 0000 	mov.w	r0, #0
 8000c48:	4770      	bx	lr
 8000c4a:	bf00      	nop

08000c4c <__aeabi_d2f>:
 8000c4c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c50:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c54:	bf24      	itt	cs
 8000c56:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c5a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c5e:	d90d      	bls.n	8000c7c <__aeabi_d2f+0x30>
 8000c60:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c64:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c68:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c6c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c70:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c74:	bf08      	it	eq
 8000c76:	f020 0001 	biceq.w	r0, r0, #1
 8000c7a:	4770      	bx	lr
 8000c7c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c80:	d121      	bne.n	8000cc6 <__aeabi_d2f+0x7a>
 8000c82:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c86:	bfbc      	itt	lt
 8000c88:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c8c:	4770      	bxlt	lr
 8000c8e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c92:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c96:	f1c2 0218 	rsb	r2, r2, #24
 8000c9a:	f1c2 0c20 	rsb	ip, r2, #32
 8000c9e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000ca2:	fa20 f002 	lsr.w	r0, r0, r2
 8000ca6:	bf18      	it	ne
 8000ca8:	f040 0001 	orrne.w	r0, r0, #1
 8000cac:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000cb0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000cb4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000cb8:	ea40 000c 	orr.w	r0, r0, ip
 8000cbc:	fa23 f302 	lsr.w	r3, r3, r2
 8000cc0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000cc4:	e7cc      	b.n	8000c60 <__aeabi_d2f+0x14>
 8000cc6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000cca:	d107      	bne.n	8000cdc <__aeabi_d2f+0x90>
 8000ccc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cd0:	bf1e      	ittt	ne
 8000cd2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cd6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cda:	4770      	bxne	lr
 8000cdc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ce0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ce4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ce8:	4770      	bx	lr
 8000cea:	bf00      	nop

08000cec <DMA_init>:
		(uint32_t*) 0x0
};

static uint32_t bytes = 0;

void DMA_init(uint8_t* start_address, uint32_t numberOfBytes){
 8000cec:	b580      	push	{r7, lr}
 8000cee:	b082      	sub	sp, #8
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	6078      	str	r0, [r7, #4]
 8000cf4:	6039      	str	r1, [r7, #0]
	bytes = numberOfBytes;
 8000cf6:	4a39      	ldr	r2, [pc, #228]	; (8000ddc <DMA_init+0xf0>)
 8000cf8:	683b      	ldr	r3, [r7, #0]
 8000cfa:	6013      	str	r3, [r2, #0]
	(*GPIOB_OSPEEDR) |= (0b11 << 12);
 8000cfc:	4a38      	ldr	r2, [pc, #224]	; (8000de0 <DMA_init+0xf4>)
 8000cfe:	4b38      	ldr	r3, [pc, #224]	; (8000de0 <DMA_init+0xf4>)
 8000d00:	681b      	ldr	r3, [r3, #0]
 8000d02:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8000d06:	6013      	str	r3, [r2, #0]
	(*NVIC2.ISERx) |= 1 << NVIC_DMA2_S7_IRQ; //enable the DMA interrupts
 8000d08:	4b36      	ldr	r3, [pc, #216]	; (8000de4 <DMA_init+0xf8>)
 8000d0a:	689b      	ldr	r3, [r3, #8]
 8000d0c:	4a35      	ldr	r2, [pc, #212]	; (8000de4 <DMA_init+0xf8>)
 8000d0e:	6892      	ldr	r2, [r2, #8]
 8000d10:	6812      	ldr	r2, [r2, #0]
 8000d12:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000d16:	601a      	str	r2, [r3, #0]
	(*RCC_AHB1ENR) |= 1 << 22;	// Enable DMA2 Clock
 8000d18:	4a33      	ldr	r2, [pc, #204]	; (8000de8 <DMA_init+0xfc>)
 8000d1a:	4b33      	ldr	r3, [pc, #204]	; (8000de8 <DMA_init+0xfc>)
 8000d1c:	681b      	ldr	r3, [r3, #0]
 8000d1e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000d22:	6013      	str	r3, [r2, #0]
	(*USART1_CR3) |= 1 << DMAT_BF; //enable DMA for USART1
 8000d24:	4a31      	ldr	r2, [pc, #196]	; (8000dec <DMA_init+0x100>)
 8000d26:	4b31      	ldr	r3, [pc, #196]	; (8000dec <DMA_init+0x100>)
 8000d28:	681b      	ldr	r3, [r3, #0]
 8000d2a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d2e:	6013      	str	r3, [r2, #0]
	(*DMA2.S7CR) &= 0; 			//  Clear control register
 8000d30:	4b2f      	ldr	r3, [pc, #188]	; (8000df0 <DMA_init+0x104>)
 8000d32:	689b      	ldr	r3, [r3, #8]
 8000d34:	681b      	ldr	r3, [r3, #0]
 8000d36:	4b2e      	ldr	r3, [pc, #184]	; (8000df0 <DMA_init+0x104>)
 8000d38:	689b      	ldr	r3, [r3, #8]
 8000d3a:	2200      	movs	r2, #0
 8000d3c:	601a      	str	r2, [r3, #0]

	(*DMA2.S7PAR) |= (uint32_t)USART1_DR;		// location where data is written to USART1_DataRegister
 8000d3e:	4b2c      	ldr	r3, [pc, #176]	; (8000df0 <DMA_init+0x104>)
 8000d40:	691a      	ldr	r2, [r3, #16]
 8000d42:	4b2b      	ldr	r3, [pc, #172]	; (8000df0 <DMA_init+0x104>)
 8000d44:	691b      	ldr	r3, [r3, #16]
 8000d46:	6819      	ldr	r1, [r3, #0]
 8000d48:	4b2a      	ldr	r3, [pc, #168]	; (8000df4 <DMA_init+0x108>)
 8000d4a:	430b      	orrs	r3, r1
 8000d4c:	6013      	str	r3, [r2, #0]
	(*DMA2.S7M0AR)|= (uint32_t)start_address; // start address of data
 8000d4e:	4b28      	ldr	r3, [pc, #160]	; (8000df0 <DMA_init+0x104>)
 8000d50:	695b      	ldr	r3, [r3, #20]
 8000d52:	4a27      	ldr	r2, [pc, #156]	; (8000df0 <DMA_init+0x104>)
 8000d54:	6952      	ldr	r2, [r2, #20]
 8000d56:	6811      	ldr	r1, [r2, #0]
 8000d58:	687a      	ldr	r2, [r7, #4]
 8000d5a:	430a      	orrs	r2, r1
 8000d5c:	601a      	str	r2, [r3, #0]

	(*DMA2.S7CR) |= (4 << 25); 	// set Channel to 4 (USART1_TX)
 8000d5e:	4b24      	ldr	r3, [pc, #144]	; (8000df0 <DMA_init+0x104>)
 8000d60:	689b      	ldr	r3, [r3, #8]
 8000d62:	4a23      	ldr	r2, [pc, #140]	; (8000df0 <DMA_init+0x104>)
 8000d64:	6892      	ldr	r2, [r2, #8]
 8000d66:	6812      	ldr	r2, [r2, #0]
 8000d68:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8000d6c:	601a      	str	r2, [r3, #0]
	(*DMA2.S7CR) |= (3 << 16); 	// Priority level Very High
 8000d6e:	4b20      	ldr	r3, [pc, #128]	; (8000df0 <DMA_init+0x104>)
 8000d70:	689b      	ldr	r3, [r3, #8]
 8000d72:	4a1f      	ldr	r2, [pc, #124]	; (8000df0 <DMA_init+0x104>)
 8000d74:	6892      	ldr	r2, [r2, #8]
 8000d76:	6812      	ldr	r2, [r2, #0]
 8000d78:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8000d7c:	601a      	str	r2, [r3, #0]
	(*DMA2.S7CR) |= (1 << 10); 	// Memory increment mode enabled
 8000d7e:	4b1c      	ldr	r3, [pc, #112]	; (8000df0 <DMA_init+0x104>)
 8000d80:	689b      	ldr	r3, [r3, #8]
 8000d82:	4a1b      	ldr	r2, [pc, #108]	; (8000df0 <DMA_init+0x104>)
 8000d84:	6892      	ldr	r2, [r2, #8]
 8000d86:	6812      	ldr	r2, [r2, #0]
 8000d88:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000d8c:	601a      	str	r2, [r3, #0]
	(*DMA2.S7CR) |= (1 << 6);	// Direction is Memory -> peripheral
 8000d8e:	4b18      	ldr	r3, [pc, #96]	; (8000df0 <DMA_init+0x104>)
 8000d90:	689b      	ldr	r3, [r3, #8]
 8000d92:	4a17      	ldr	r2, [pc, #92]	; (8000df0 <DMA_init+0x104>)
 8000d94:	6892      	ldr	r2, [r2, #8]
 8000d96:	6812      	ldr	r2, [r2, #0]
 8000d98:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000d9c:	601a      	str	r2, [r3, #0]
	(*DMA2.S7CR) |= (1 << 4); 	//Transfer Complete Interrupt Enabled
 8000d9e:	4b14      	ldr	r3, [pc, #80]	; (8000df0 <DMA_init+0x104>)
 8000da0:	689b      	ldr	r3, [r3, #8]
 8000da2:	4a13      	ldr	r2, [pc, #76]	; (8000df0 <DMA_init+0x104>)
 8000da4:	6892      	ldr	r2, [r2, #8]
 8000da6:	6812      	ldr	r2, [r2, #0]
 8000da8:	f042 0210 	orr.w	r2, r2, #16
 8000dac:	601a      	str	r2, [r3, #0]

	(*DMA2.S7FRC) |= (1 << 2); // Direct mode off;
 8000dae:	4b10      	ldr	r3, [pc, #64]	; (8000df0 <DMA_init+0x104>)
 8000db0:	69db      	ldr	r3, [r3, #28]
 8000db2:	4a0f      	ldr	r2, [pc, #60]	; (8000df0 <DMA_init+0x104>)
 8000db4:	69d2      	ldr	r2, [r2, #28]
 8000db6:	6812      	ldr	r2, [r2, #0]
 8000db8:	f042 0204 	orr.w	r2, r2, #4
 8000dbc:	601a      	str	r2, [r3, #0]
	(*DMA2.S7FRC) |= (0b11); //use full FIFO QUEUE
 8000dbe:	4b0c      	ldr	r3, [pc, #48]	; (8000df0 <DMA_init+0x104>)
 8000dc0:	69db      	ldr	r3, [r3, #28]
 8000dc2:	4a0b      	ldr	r2, [pc, #44]	; (8000df0 <DMA_init+0x104>)
 8000dc4:	69d2      	ldr	r2, [r2, #28]
 8000dc6:	6812      	ldr	r2, [r2, #0]
 8000dc8:	f042 0203 	orr.w	r2, r2, #3
 8000dcc:	601a      	str	r2, [r3, #0]

	//
	DMA2_Stream7_IRQHandler();
 8000dce:	f000 f813 	bl	8000df8 <DMA2_Stream7_IRQHandler>

}
 8000dd2:	bf00      	nop
 8000dd4:	3708      	adds	r7, #8
 8000dd6:	46bd      	mov	sp, r7
 8000dd8:	bd80      	pop	{r7, pc}
 8000dda:	bf00      	nop
 8000ddc:	20000424 	.word	0x20000424
 8000de0:	40020408 	.word	0x40020408
 8000de4:	20000020 	.word	0x20000020
 8000de8:	40023830 	.word	0x40023830
 8000dec:	40011014 	.word	0x40011014
 8000df0:	20000000 	.word	0x20000000
 8000df4:	40011004 	.word	0x40011004

08000df8 <DMA2_Stream7_IRQHandler>:

void DMA2_Stream7_IRQHandler(){
 8000df8:	4668      	mov	r0, sp
 8000dfa:	f020 0107 	bic.w	r1, r0, #7
 8000dfe:	468d      	mov	sp, r1
 8000e00:	b481      	push	{r0, r7}
 8000e02:	b082      	sub	sp, #8
 8000e04:	af00      	add	r7, sp, #0
	 * ------________-------_[0..7]--_[0..7]--_ ~~~~_[0..7]---------------
	 * IDLE    BREAK   MAB  S scode sS data1 sS     S data512 s IDLE
	 */

	//clear interrupt flag
	(*DMA2.HIFCR) |= ( 0xf << 24 | 0x1 << 22);
 8000e06:	4b37      	ldr	r3, [pc, #220]	; (8000ee4 <DMA2_Stream7_IRQHandler+0xec>)
 8000e08:	685b      	ldr	r3, [r3, #4]
 8000e0a:	4a36      	ldr	r2, [pc, #216]	; (8000ee4 <DMA2_Stream7_IRQHandler+0xec>)
 8000e0c:	6852      	ldr	r2, [r2, #4]
 8000e0e:	6812      	ldr	r2, [r2, #0]
 8000e10:	f042 6274 	orr.w	r2, r2, #255852544	; 0xf400000
 8000e14:	601a      	str	r2, [r3, #0]
	(*NVIC2.ICERx) |= (1 << NVIC_DMA2_S7_IRQ);
 8000e16:	4b34      	ldr	r3, [pc, #208]	; (8000ee8 <DMA2_Stream7_IRQHandler+0xf0>)
 8000e18:	68db      	ldr	r3, [r3, #12]
 8000e1a:	4a33      	ldr	r2, [pc, #204]	; (8000ee8 <DMA2_Stream7_IRQHandler+0xf0>)
 8000e1c:	68d2      	ldr	r2, [r2, #12]
 8000e1e:	6812      	ldr	r2, [r2, #0]
 8000e20:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000e24:	601a      	str	r2, [r3, #0]

	(*DMA2.S7NDTR)|= bytes;	// set the number of bytes in the number-of-data register
 8000e26:	4b2f      	ldr	r3, [pc, #188]	; (8000ee4 <DMA2_Stream7_IRQHandler+0xec>)
 8000e28:	68db      	ldr	r3, [r3, #12]
 8000e2a:	4a2e      	ldr	r2, [pc, #184]	; (8000ee4 <DMA2_Stream7_IRQHandler+0xec>)
 8000e2c:	68d2      	ldr	r2, [r2, #12]
 8000e2e:	6811      	ldr	r1, [r2, #0]
 8000e30:	4a2e      	ldr	r2, [pc, #184]	; (8000eec <DMA2_Stream7_IRQHandler+0xf4>)
 8000e32:	6812      	ldr	r2, [r2, #0]
 8000e34:	430a      	orrs	r2, r1
 8000e36:	601a      	str	r2, [r3, #0]
	(*USART1_SR) &= ~(1 << TC_BF); // Clear Transmission Complete in USART bit
 8000e38:	4a2d      	ldr	r2, [pc, #180]	; (8000ef0 <DMA2_Stream7_IRQHandler+0xf8>)
 8000e3a:	4b2d      	ldr	r3, [pc, #180]	; (8000ef0 <DMA2_Stream7_IRQHandler+0xf8>)
 8000e3c:	681b      	ldr	r3, [r3, #0]
 8000e3e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000e42:	6013      	str	r3, [r2, #0]

	asm("CPSID i"); //disable interrupts due to the time sensitive nature of this function
 8000e44:	b672      	cpsid	i

	//*******IDLE*******
	for(int t = 244; t > 0; t--){
 8000e46:	23f4      	movs	r3, #244	; 0xf4
 8000e48:	607b      	str	r3, [r7, #4]
 8000e4a:	e003      	b.n	8000e54 <DMA2_Stream7_IRQHandler+0x5c>
		//hold Idle for 200us
		asm("nop");
 8000e4c:	bf00      	nop
	for(int t = 244; t > 0; t--){
 8000e4e:	687b      	ldr	r3, [r7, #4]
 8000e50:	3b01      	subs	r3, #1
 8000e52:	607b      	str	r3, [r7, #4]
 8000e54:	687b      	ldr	r3, [r7, #4]
 8000e56:	2b00      	cmp	r3, #0
 8000e58:	dcf8      	bgt.n	8000e4c <DMA2_Stream7_IRQHandler+0x54>
	}
	//******************

	//*******BREAK*******
	(*GPIOB_MODER) &= ~(0b11 << 12);
 8000e5a:	4a26      	ldr	r2, [pc, #152]	; (8000ef4 <DMA2_Stream7_IRQHandler+0xfc>)
 8000e5c:	4b25      	ldr	r3, [pc, #148]	; (8000ef4 <DMA2_Stream7_IRQHandler+0xfc>)
 8000e5e:	681b      	ldr	r3, [r3, #0]
 8000e60:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000e64:	6013      	str	r3, [r2, #0]
	(*GPIOB_MODER) |= (0b01 << 12);
 8000e66:	4a23      	ldr	r2, [pc, #140]	; (8000ef4 <DMA2_Stream7_IRQHandler+0xfc>)
 8000e68:	4b22      	ldr	r3, [pc, #136]	; (8000ef4 <DMA2_Stream7_IRQHandler+0xfc>)
 8000e6a:	681b      	ldr	r3, [r3, #0]
 8000e6c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000e70:	6013      	str	r3, [r2, #0]
	(*USART1_CR1) &= ~(1 << TE_BF); // disable USART transmitter to pull line low
 8000e72:	4a21      	ldr	r2, [pc, #132]	; (8000ef8 <DMA2_Stream7_IRQHandler+0x100>)
 8000e74:	4b20      	ldr	r3, [pc, #128]	; (8000ef8 <DMA2_Stream7_IRQHandler+0x100>)
 8000e76:	681b      	ldr	r3, [r3, #0]
 8000e78:	f023 0308 	bic.w	r3, r3, #8
 8000e7c:	6013      	str	r3, [r2, #0]
	for(int t = 216; t > 0; t--){
 8000e7e:	23d8      	movs	r3, #216	; 0xd8
 8000e80:	603b      	str	r3, [r7, #0]
 8000e82:	e003      	b.n	8000e8c <DMA2_Stream7_IRQHandler+0x94>
		//Break for  176us
		asm("nop");
 8000e84:	bf00      	nop
	for(int t = 216; t > 0; t--){
 8000e86:	683b      	ldr	r3, [r7, #0]
 8000e88:	3b01      	subs	r3, #1
 8000e8a:	603b      	str	r3, [r7, #0]
 8000e8c:	683b      	ldr	r3, [r7, #0]
 8000e8e:	2b00      	cmp	r3, #0
 8000e90:	dcf8      	bgt.n	8000e84 <DMA2_Stream7_IRQHandler+0x8c>
	}
	(*GPIOB_MODER) &= ~(0b11 << 12);
 8000e92:	4a18      	ldr	r2, [pc, #96]	; (8000ef4 <DMA2_Stream7_IRQHandler+0xfc>)
 8000e94:	4b17      	ldr	r3, [pc, #92]	; (8000ef4 <DMA2_Stream7_IRQHandler+0xfc>)
 8000e96:	681b      	ldr	r3, [r3, #0]
 8000e98:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000e9c:	6013      	str	r3, [r2, #0]
	(*GPIOB_MODER) |= (0b10 << 12);
 8000e9e:	4a15      	ldr	r2, [pc, #84]	; (8000ef4 <DMA2_Stream7_IRQHandler+0xfc>)
 8000ea0:	4b14      	ldr	r3, [pc, #80]	; (8000ef4 <DMA2_Stream7_IRQHandler+0xfc>)
 8000ea2:	681b      	ldr	r3, [r3, #0]
 8000ea4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000ea8:	6013      	str	r3, [r2, #0]
	//*******************

	//*******MAB*******
	(*USART1_CR1) |= (1 << TE_BF); // Enable USART transmitter to pull line High
 8000eaa:	4a13      	ldr	r2, [pc, #76]	; (8000ef8 <DMA2_Stream7_IRQHandler+0x100>)
 8000eac:	4b12      	ldr	r3, [pc, #72]	; (8000ef8 <DMA2_Stream7_IRQHandler+0x100>)
 8000eae:	681b      	ldr	r3, [r3, #0]
 8000eb0:	f043 0308 	orr.w	r3, r3, #8
 8000eb4:	6013      	str	r3, [r2, #0]
		//Mark for 11.875us
	//	asm("nop");
	//}
	//*******************

	asm("CPSIE i"); //allow interupts again;
 8000eb6:	b662      	cpsie	i
	(*DMA2.S7CR) |= 1; //Enable the stream ****TRANSMISSION BEGINS****
 8000eb8:	4b0a      	ldr	r3, [pc, #40]	; (8000ee4 <DMA2_Stream7_IRQHandler+0xec>)
 8000eba:	689b      	ldr	r3, [r3, #8]
 8000ebc:	4a09      	ldr	r2, [pc, #36]	; (8000ee4 <DMA2_Stream7_IRQHandler+0xec>)
 8000ebe:	6892      	ldr	r2, [r2, #8]
 8000ec0:	6812      	ldr	r2, [r2, #0]
 8000ec2:	f042 0201 	orr.w	r2, r2, #1
 8000ec6:	601a      	str	r2, [r3, #0]

	(*NVIC2.ISERx) |= (1 << NVIC_DMA2_S7_IRQ);
 8000ec8:	4b07      	ldr	r3, [pc, #28]	; (8000ee8 <DMA2_Stream7_IRQHandler+0xf0>)
 8000eca:	689b      	ldr	r3, [r3, #8]
 8000ecc:	4a06      	ldr	r2, [pc, #24]	; (8000ee8 <DMA2_Stream7_IRQHandler+0xf0>)
 8000ece:	6892      	ldr	r2, [r2, #8]
 8000ed0:	6812      	ldr	r2, [r2, #0]
 8000ed2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000ed6:	601a      	str	r2, [r3, #0]
}
 8000ed8:	bf00      	nop
 8000eda:	3708      	adds	r7, #8
 8000edc:	46bd      	mov	sp, r7
 8000ede:	bc81      	pop	{r0, r7}
 8000ee0:	4685      	mov	sp, r0
 8000ee2:	4770      	bx	lr
 8000ee4:	20000000 	.word	0x20000000
 8000ee8:	20000020 	.word	0x20000020
 8000eec:	20000424 	.word	0x20000424
 8000ef0:	40011000 	.word	0x40011000
 8000ef4:	40020400 	.word	0x40020400
 8000ef8:	4001100c 	.word	0x4001100c

08000efc <Transciever_init>:

#include "DS75176B.h"
enum {A, B};
static _gpio port[2] = {{GPIOA}, {GPIOB}};

DS75176B* Transciever_init(){
 8000efc:	b580      	push	{r7, lr}
 8000efe:	b084      	sub	sp, #16
 8000f00:	af00      	add	r7, sp, #0
	DS75176B* tempChip = malloc(sizeof(DS75176B));
 8000f02:	2020      	movs	r0, #32
 8000f04:	f001 fce8 	bl	80028d8 <malloc>
 8000f08:	4603      	mov	r3, r0
 8000f0a:	60fb      	str	r3, [r7, #12]
	if (tempChip == 0){
 8000f0c:	68fb      	ldr	r3, [r7, #12]
 8000f0e:	2b00      	cmp	r3, #0
 8000f10:	d105      	bne.n	8000f1e <Transciever_init+0x22>
		EXCEPTION(FATAL_ERROR, "FAILED TO ALLOCATE MEMORY: DS75176B.c : 14");
 8000f12:	491d      	ldr	r1, [pc, #116]	; (8000f88 <Transciever_init+0x8c>)
 8000f14:	2000      	movs	r0, #0
 8000f16:	f000 fb49 	bl	80015ac <EXCEPTION>
		return 0;
 8000f1a:	2300      	movs	r3, #0
 8000f1c:	e030      	b.n	8000f80 <Transciever_init+0x84>
	}
	pinMap temp = {(_gpio*)GPIOB, 7};
 8000f1e:	4a1b      	ldr	r2, [pc, #108]	; (8000f8c <Transciever_init+0x90>)
 8000f20:	1d3b      	adds	r3, r7, #4
 8000f22:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000f26:	e883 0003 	stmia.w	r3, {r0, r1}

	//assign the pinMaps of the structure to the proper values
	tempChip->RO = temp;
 8000f2a:	68fb      	ldr	r3, [r7, #12]
 8000f2c:	461a      	mov	r2, r3
 8000f2e:	1d3b      	adds	r3, r7, #4
 8000f30:	e893 0003 	ldmia.w	r3, {r0, r1}
 8000f34:	e882 0003 	stmia.w	r2, {r0, r1}
	temp.pin = 6;
 8000f38:	2306      	movs	r3, #6
 8000f3a:	723b      	strb	r3, [r7, #8]
	tempChip->DI = temp;
 8000f3c:	68fb      	ldr	r3, [r7, #12]
 8000f3e:	3318      	adds	r3, #24
 8000f40:	1d3a      	adds	r2, r7, #4
 8000f42:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000f46:	e883 0003 	stmia.w	r3, {r0, r1}
	temp.pin = 5;
 8000f4a:	2305      	movs	r3, #5
 8000f4c:	723b      	strb	r3, [r7, #8]
	temp.port = (_gpio*)GPIOA;
 8000f4e:	4b10      	ldr	r3, [pc, #64]	; (8000f90 <Transciever_init+0x94>)
 8000f50:	607b      	str	r3, [r7, #4]
	tempChip->DE = temp;
 8000f52:	68fb      	ldr	r3, [r7, #12]
 8000f54:	3310      	adds	r3, #16
 8000f56:	1d3a      	adds	r2, r7, #4
 8000f58:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000f5c:	e883 0003 	stmia.w	r3, {r0, r1}
	temp.pin = 4;
 8000f60:	2304      	movs	r3, #4
 8000f62:	723b      	strb	r3, [r7, #8]
	tempChip->_RE = temp;
 8000f64:	68fb      	ldr	r3, [r7, #12]
 8000f66:	3308      	adds	r3, #8
 8000f68:	1d3a      	adds	r2, r7, #4
 8000f6a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000f6e:	e883 0003 	stmia.w	r3, {r0, r1}
	Gpio_setup(&port[A]);
 8000f72:	4808      	ldr	r0, [pc, #32]	; (8000f94 <Transciever_init+0x98>)
 8000f74:	f000 f832 	bl	8000fdc <Gpio_setup>
	Gpio_setup(&port[B]);
 8000f78:	4807      	ldr	r0, [pc, #28]	; (8000f98 <Transciever_init+0x9c>)
 8000f7a:	f000 f82f 	bl	8000fdc <Gpio_setup>

	return tempChip;
 8000f7e:	68fb      	ldr	r3, [r7, #12]
}
 8000f80:	4618      	mov	r0, r3
 8000f82:	3710      	adds	r7, #16
 8000f84:	46bd      	mov	sp, r7
 8000f86:	bd80      	pop	{r7, pc}
 8000f88:	08006e38 	.word	0x08006e38
 8000f8c:	08006e64 	.word	0x08006e64
 8000f90:	40020000 	.word	0x40020000
 8000f94:	2000003c 	.word	0x2000003c
 8000f98:	20000064 	.word	0x20000064

08000f9c <Transciever_Output>:

void Transciever_Output(DS75176B* chip){
 8000f9c:	b580      	push	{r7, lr}
 8000f9e:	b082      	sub	sp, #8
 8000fa0:	af00      	add	r7, sp, #0
 8000fa2:	6078      	str	r0, [r7, #4]

	Gpio_Pullup(&port[A], chip->DE.pin);
 8000fa4:	687b      	ldr	r3, [r7, #4]
 8000fa6:	7d1b      	ldrb	r3, [r3, #20]
 8000fa8:	4619      	mov	r1, r3
 8000faa:	480a      	ldr	r0, [pc, #40]	; (8000fd4 <Transciever_Output+0x38>)
 8000fac:	f000 f836 	bl	800101c <Gpio_Pullup>
	Gpio_Pullup(&port[A], chip->_RE.pin);
 8000fb0:	687b      	ldr	r3, [r7, #4]
 8000fb2:	7b1b      	ldrb	r3, [r3, #12]
 8000fb4:	4619      	mov	r1, r3
 8000fb6:	4807      	ldr	r0, [pc, #28]	; (8000fd4 <Transciever_Output+0x38>)
 8000fb8:	f000 f830 	bl	800101c <Gpio_Pullup>
	Gpio_AlternateFunction(&port[B], chip->DI.pin, AF7);
 8000fbc:	687b      	ldr	r3, [r7, #4]
 8000fbe:	7f1b      	ldrb	r3, [r3, #28]
 8000fc0:	2207      	movs	r2, #7
 8000fc2:	4619      	mov	r1, r3
 8000fc4:	4804      	ldr	r0, [pc, #16]	; (8000fd8 <Transciever_Output+0x3c>)
 8000fc6:	f000 f8d7 	bl	8001178 <Gpio_AlternateFunction>
}
 8000fca:	bf00      	nop
 8000fcc:	3708      	adds	r7, #8
 8000fce:	46bd      	mov	sp, r7
 8000fd0:	bd80      	pop	{r7, pc}
 8000fd2:	bf00      	nop
 8000fd4:	2000003c 	.word	0x2000003c
 8000fd8:	20000064 	.word	0x20000064

08000fdc <Gpio_setup>:
 *      Author: salsiederja
 */

#include "Gpio.h"

void Gpio_setup(_gpio *g){
 8000fdc:	b580      	push	{r7, lr}
 8000fde:	b084      	sub	sp, #16
 8000fe0:	af00      	add	r7, sp, #0
 8000fe2:	6078      	str	r0, [r7, #4]
	 uint32_t* reg;
	 reg = g;
 8000fe4:	687b      	ldr	r3, [r7, #4]
 8000fe6:	60bb      	str	r3, [r7, #8]
	 for(int i = 1; i <= 9; i++){
 8000fe8:	2301      	movs	r3, #1
 8000fea:	60fb      	str	r3, [r7, #12]
 8000fec:	e00c      	b.n	8001008 <Gpio_setup+0x2c>
		 *(reg+i) = *(reg)+(i*4);
 8000fee:	68fb      	ldr	r3, [r7, #12]
 8000ff0:	009b      	lsls	r3, r3, #2
 8000ff2:	68ba      	ldr	r2, [r7, #8]
 8000ff4:	4413      	add	r3, r2
 8000ff6:	68ba      	ldr	r2, [r7, #8]
 8000ff8:	6812      	ldr	r2, [r2, #0]
 8000ffa:	68f9      	ldr	r1, [r7, #12]
 8000ffc:	0089      	lsls	r1, r1, #2
 8000ffe:	440a      	add	r2, r1
 8001000:	601a      	str	r2, [r3, #0]
	 for(int i = 1; i <= 9; i++){
 8001002:	68fb      	ldr	r3, [r7, #12]
 8001004:	3301      	adds	r3, #1
 8001006:	60fb      	str	r3, [r7, #12]
 8001008:	68fb      	ldr	r3, [r7, #12]
 800100a:	2b09      	cmp	r3, #9
 800100c:	ddef      	ble.n	8000fee <Gpio_setup+0x12>
	 }
	 Gpio_enable(g);
 800100e:	6878      	ldr	r0, [r7, #4]
 8001010:	f000 f918 	bl	8001244 <Gpio_enable>
 }
 8001014:	bf00      	nop
 8001016:	3710      	adds	r7, #16
 8001018:	46bd      	mov	sp, r7
 800101a:	bd80      	pop	{r7, pc}

0800101c <Gpio_Pullup>:

void Gpio_writeLow(_gpio *g, uint8_t pin){
	 *(g->ODR) &= ~(1<<pin);
 }

void Gpio_Pullup(_gpio *g, uint8_t pin){
 800101c:	b480      	push	{r7}
 800101e:	b083      	sub	sp, #12
 8001020:	af00      	add	r7, sp, #0
 8001022:	6078      	str	r0, [r7, #4]
 8001024:	460b      	mov	r3, r1
 8001026:	70fb      	strb	r3, [r7, #3]
	 *(g->OTYPER) &= ~(1<<pin);
 8001028:	687b      	ldr	r3, [r7, #4]
 800102a:	685b      	ldr	r3, [r3, #4]
 800102c:	687a      	ldr	r2, [r7, #4]
 800102e:	6852      	ldr	r2, [r2, #4]
 8001030:	6812      	ldr	r2, [r2, #0]
 8001032:	78f9      	ldrb	r1, [r7, #3]
 8001034:	2001      	movs	r0, #1
 8001036:	fa00 f101 	lsl.w	r1, r0, r1
 800103a:	43c9      	mvns	r1, r1
 800103c:	400a      	ands	r2, r1
 800103e:	601a      	str	r2, [r3, #0]
	 *(g->PUPDR) &= ~(3<<(pin*2));
 8001040:	687b      	ldr	r3, [r7, #4]
 8001042:	68db      	ldr	r3, [r3, #12]
 8001044:	687a      	ldr	r2, [r7, #4]
 8001046:	68d2      	ldr	r2, [r2, #12]
 8001048:	6812      	ldr	r2, [r2, #0]
 800104a:	78f9      	ldrb	r1, [r7, #3]
 800104c:	0049      	lsls	r1, r1, #1
 800104e:	2003      	movs	r0, #3
 8001050:	fa00 f101 	lsl.w	r1, r0, r1
 8001054:	43c9      	mvns	r1, r1
 8001056:	400a      	ands	r2, r1
 8001058:	601a      	str	r2, [r3, #0]
	 *(g->PUPDR) |= PullUp<<(pin*2);
 800105a:	687b      	ldr	r3, [r7, #4]
 800105c:	68db      	ldr	r3, [r3, #12]
 800105e:	687a      	ldr	r2, [r7, #4]
 8001060:	68d2      	ldr	r2, [r2, #12]
 8001062:	6812      	ldr	r2, [r2, #0]
 8001064:	78f9      	ldrb	r1, [r7, #3]
 8001066:	0049      	lsls	r1, r1, #1
 8001068:	2001      	movs	r0, #1
 800106a:	fa00 f101 	lsl.w	r1, r0, r1
 800106e:	430a      	orrs	r2, r1
 8001070:	601a      	str	r2, [r3, #0]
 }
 8001072:	bf00      	nop
 8001074:	370c      	adds	r7, #12
 8001076:	46bd      	mov	sp, r7
 8001078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800107c:	4770      	bx	lr

0800107e <Gpio_digitalRead>:
	 *(g->OTYPER) &= ~(1<<pin);
	 *(g->PUPDR) &= ~(3<<(pin*2));
	 *(g->PUPDR) |= None<<(pin*2);
 }

int Gpio_digitalRead(_gpio *g, uint8_t pin){
 800107e:	b480      	push	{r7}
 8001080:	b085      	sub	sp, #20
 8001082:	af00      	add	r7, sp, #0
 8001084:	6078      	str	r0, [r7, #4]
 8001086:	460b      	mov	r3, r1
 8001088:	70fb      	strb	r3, [r7, #3]
	int ret = 0;
 800108a:	2300      	movs	r3, #0
 800108c:	60fb      	str	r3, [r7, #12]
	ret = *(g->IDR) &= (1<<pin);
 800108e:	687b      	ldr	r3, [r7, #4]
 8001090:	691b      	ldr	r3, [r3, #16]
 8001092:	687a      	ldr	r2, [r7, #4]
 8001094:	6912      	ldr	r2, [r2, #16]
 8001096:	6812      	ldr	r2, [r2, #0]
 8001098:	78f9      	ldrb	r1, [r7, #3]
 800109a:	2001      	movs	r0, #1
 800109c:	fa00 f101 	lsl.w	r1, r0, r1
 80010a0:	400a      	ands	r2, r1
 80010a2:	601a      	str	r2, [r3, #0]
 80010a4:	681b      	ldr	r3, [r3, #0]
 80010a6:	60fb      	str	r3, [r7, #12]
	ret= ret>>pin;
 80010a8:	78fb      	ldrb	r3, [r7, #3]
 80010aa:	68fa      	ldr	r2, [r7, #12]
 80010ac:	fa42 f303 	asr.w	r3, r2, r3
 80010b0:	60fb      	str	r3, [r7, #12]
	ret &= 1;
 80010b2:	68fb      	ldr	r3, [r7, #12]
 80010b4:	f003 0301 	and.w	r3, r3, #1
 80010b8:	60fb      	str	r3, [r7, #12]
	return ret;
 80010ba:	68fb      	ldr	r3, [r7, #12]
}
 80010bc:	4618      	mov	r0, r3
 80010be:	3714      	adds	r7, #20
 80010c0:	46bd      	mov	sp, r7
 80010c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c6:	4770      	bx	lr

080010c8 <Gpio_pinMode>:

void Gpio_pinMode(_gpio *g, uint8_t pin, Mode mode){
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	6078      	str	r0, [r7, #4]
 80010d0:	460b      	mov	r3, r1
 80010d2:	70fb      	strb	r3, [r7, #3]
 80010d4:	4613      	mov	r3, r2
 80010d6:	70bb      	strb	r3, [r7, #2]
	 *(g->MODER) &= ~(0b11 << pin*2);
 80010d8:	687b      	ldr	r3, [r7, #4]
 80010da:	681b      	ldr	r3, [r3, #0]
 80010dc:	687a      	ldr	r2, [r7, #4]
 80010de:	6812      	ldr	r2, [r2, #0]
 80010e0:	6812      	ldr	r2, [r2, #0]
 80010e2:	78f9      	ldrb	r1, [r7, #3]
 80010e4:	0049      	lsls	r1, r1, #1
 80010e6:	2003      	movs	r0, #3
 80010e8:	fa00 f101 	lsl.w	r1, r0, r1
 80010ec:	43c9      	mvns	r1, r1
 80010ee:	400a      	ands	r2, r1
 80010f0:	601a      	str	r2, [r3, #0]
	 switch(mode){
 80010f2:	78bb      	ldrb	r3, [r7, #2]
 80010f4:	2b03      	cmp	r3, #3
 80010f6:	d839      	bhi.n	800116c <Gpio_pinMode+0xa4>
 80010f8:	a201      	add	r2, pc, #4	; (adr r2, 8001100 <Gpio_pinMode+0x38>)
 80010fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80010fe:	bf00      	nop
 8001100:	08001111 	.word	0x08001111
 8001104:	0800111f 	.word	0x0800111f
 8001108:	08001139 	.word	0x08001139
 800110c:	08001153 	.word	0x08001153
	 case Input:
		 *(g->MODER) |= (Input<<pin*2);
 8001110:	687b      	ldr	r3, [r7, #4]
 8001112:	681b      	ldr	r3, [r3, #0]
 8001114:	687a      	ldr	r2, [r7, #4]
 8001116:	6812      	ldr	r2, [r2, #0]
 8001118:	6812      	ldr	r2, [r2, #0]
 800111a:	601a      	str	r2, [r3, #0]
		 break;
 800111c:	e026      	b.n	800116c <Gpio_pinMode+0xa4>
	 case Output:
		 *(g->MODER) |= (Output<<pin*2);
 800111e:	687b      	ldr	r3, [r7, #4]
 8001120:	681b      	ldr	r3, [r3, #0]
 8001122:	687a      	ldr	r2, [r7, #4]
 8001124:	6812      	ldr	r2, [r2, #0]
 8001126:	6812      	ldr	r2, [r2, #0]
 8001128:	78f9      	ldrb	r1, [r7, #3]
 800112a:	0049      	lsls	r1, r1, #1
 800112c:	2001      	movs	r0, #1
 800112e:	fa00 f101 	lsl.w	r1, r0, r1
 8001132:	430a      	orrs	r2, r1
 8001134:	601a      	str	r2, [r3, #0]
		 break;
 8001136:	e019      	b.n	800116c <Gpio_pinMode+0xa4>
	 case AltFunct:
		 *(g->MODER) |= (AltFunct<<pin*2);
 8001138:	687b      	ldr	r3, [r7, #4]
 800113a:	681b      	ldr	r3, [r3, #0]
 800113c:	687a      	ldr	r2, [r7, #4]
 800113e:	6812      	ldr	r2, [r2, #0]
 8001140:	6812      	ldr	r2, [r2, #0]
 8001142:	78f9      	ldrb	r1, [r7, #3]
 8001144:	0049      	lsls	r1, r1, #1
 8001146:	2002      	movs	r0, #2
 8001148:	fa00 f101 	lsl.w	r1, r0, r1
 800114c:	430a      	orrs	r2, r1
 800114e:	601a      	str	r2, [r3, #0]
		 break;
 8001150:	e00c      	b.n	800116c <Gpio_pinMode+0xa4>
	 case Analog:
		 *(g->MODER) |= (Analog<<pin*2);
 8001152:	687b      	ldr	r3, [r7, #4]
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	687a      	ldr	r2, [r7, #4]
 8001158:	6812      	ldr	r2, [r2, #0]
 800115a:	6812      	ldr	r2, [r2, #0]
 800115c:	78f9      	ldrb	r1, [r7, #3]
 800115e:	0049      	lsls	r1, r1, #1
 8001160:	2003      	movs	r0, #3
 8001162:	fa00 f101 	lsl.w	r1, r0, r1
 8001166:	430a      	orrs	r2, r1
 8001168:	601a      	str	r2, [r3, #0]
		 break;
 800116a:	bf00      	nop

	 }
 }
 800116c:	bf00      	nop
 800116e:	370c      	adds	r7, #12
 8001170:	46bd      	mov	sp, r7
 8001172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001176:	4770      	bx	lr

08001178 <Gpio_AlternateFunction>:

void Gpio_AlternateFunction(_gpio *g, uint8_t pin, AltFunction AFx){
 8001178:	b480      	push	{r7}
 800117a:	b083      	sub	sp, #12
 800117c:	af00      	add	r7, sp, #0
 800117e:	6078      	str	r0, [r7, #4]
 8001180:	460b      	mov	r3, r1
 8001182:	70fb      	strb	r3, [r7, #3]
 8001184:	4613      	mov	r3, r2
 8001186:	70bb      	strb	r3, [r7, #2]
	 *(g->MODER) &= ~(3<<pin*2);
 8001188:	687b      	ldr	r3, [r7, #4]
 800118a:	681b      	ldr	r3, [r3, #0]
 800118c:	687a      	ldr	r2, [r7, #4]
 800118e:	6812      	ldr	r2, [r2, #0]
 8001190:	6812      	ldr	r2, [r2, #0]
 8001192:	78f9      	ldrb	r1, [r7, #3]
 8001194:	0049      	lsls	r1, r1, #1
 8001196:	2003      	movs	r0, #3
 8001198:	fa00 f101 	lsl.w	r1, r0, r1
 800119c:	43c9      	mvns	r1, r1
 800119e:	400a      	ands	r2, r1
 80011a0:	601a      	str	r2, [r3, #0]
	 *(g->MODER) |= AltFunct<<(pin*2);
 80011a2:	687b      	ldr	r3, [r7, #4]
 80011a4:	681b      	ldr	r3, [r3, #0]
 80011a6:	687a      	ldr	r2, [r7, #4]
 80011a8:	6812      	ldr	r2, [r2, #0]
 80011aa:	6812      	ldr	r2, [r2, #0]
 80011ac:	78f9      	ldrb	r1, [r7, #3]
 80011ae:	0049      	lsls	r1, r1, #1
 80011b0:	2002      	movs	r0, #2
 80011b2:	fa00 f101 	lsl.w	r1, r0, r1
 80011b6:	430a      	orrs	r2, r1
 80011b8:	601a      	str	r2, [r3, #0]
	 if(pin < 16 && pin > 7 ){
 80011ba:	78fb      	ldrb	r3, [r7, #3]
 80011bc:	2b0f      	cmp	r3, #15
 80011be:	d81e      	bhi.n	80011fe <Gpio_AlternateFunction+0x86>
 80011c0:	78fb      	ldrb	r3, [r7, #3]
 80011c2:	2b07      	cmp	r3, #7
 80011c4:	d91b      	bls.n	80011fe <Gpio_AlternateFunction+0x86>
		 *(g->AFRH) &= ~(0xf<<((pin-8)*4));
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80011ca:	687a      	ldr	r2, [r7, #4]
 80011cc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80011ce:	6812      	ldr	r2, [r2, #0]
 80011d0:	78f9      	ldrb	r1, [r7, #3]
 80011d2:	3908      	subs	r1, #8
 80011d4:	0089      	lsls	r1, r1, #2
 80011d6:	200f      	movs	r0, #15
 80011d8:	fa00 f101 	lsl.w	r1, r0, r1
 80011dc:	43c9      	mvns	r1, r1
 80011de:	400a      	ands	r2, r1
 80011e0:	601a      	str	r2, [r3, #0]
		 *(g->AFRH) |= (AFx<<((pin-8)*4));
 80011e2:	687b      	ldr	r3, [r7, #4]
 80011e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80011e6:	687a      	ldr	r2, [r7, #4]
 80011e8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80011ea:	6812      	ldr	r2, [r2, #0]
 80011ec:	78b8      	ldrb	r0, [r7, #2]
 80011ee:	78f9      	ldrb	r1, [r7, #3]
 80011f0:	3908      	subs	r1, #8
 80011f2:	0089      	lsls	r1, r1, #2
 80011f4:	fa00 f101 	lsl.w	r1, r0, r1
 80011f8:	430a      	orrs	r2, r1
 80011fa:	601a      	str	r2, [r3, #0]
	 }else if(pin < 8){
		 *(g->AFRL) &= ~(0xf<<(pin*4));
		 *(g->AFRL) |= (AFx<<(pin*4));
	 }
 }
 80011fc:	e01b      	b.n	8001236 <Gpio_AlternateFunction+0xbe>
	 }else if(pin < 8){
 80011fe:	78fb      	ldrb	r3, [r7, #3]
 8001200:	2b07      	cmp	r3, #7
 8001202:	d818      	bhi.n	8001236 <Gpio_AlternateFunction+0xbe>
		 *(g->AFRL) &= ~(0xf<<(pin*4));
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	6a1b      	ldr	r3, [r3, #32]
 8001208:	687a      	ldr	r2, [r7, #4]
 800120a:	6a12      	ldr	r2, [r2, #32]
 800120c:	6812      	ldr	r2, [r2, #0]
 800120e:	78f9      	ldrb	r1, [r7, #3]
 8001210:	0089      	lsls	r1, r1, #2
 8001212:	200f      	movs	r0, #15
 8001214:	fa00 f101 	lsl.w	r1, r0, r1
 8001218:	43c9      	mvns	r1, r1
 800121a:	400a      	ands	r2, r1
 800121c:	601a      	str	r2, [r3, #0]
		 *(g->AFRL) |= (AFx<<(pin*4));
 800121e:	687b      	ldr	r3, [r7, #4]
 8001220:	6a1b      	ldr	r3, [r3, #32]
 8001222:	687a      	ldr	r2, [r7, #4]
 8001224:	6a12      	ldr	r2, [r2, #32]
 8001226:	6812      	ldr	r2, [r2, #0]
 8001228:	78b8      	ldrb	r0, [r7, #2]
 800122a:	78f9      	ldrb	r1, [r7, #3]
 800122c:	0089      	lsls	r1, r1, #2
 800122e:	fa00 f101 	lsl.w	r1, r0, r1
 8001232:	430a      	orrs	r2, r1
 8001234:	601a      	str	r2, [r3, #0]
 }
 8001236:	bf00      	nop
 8001238:	370c      	adds	r7, #12
 800123a:	46bd      	mov	sp, r7
 800123c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001240:	4770      	bx	lr
	...

08001244 <Gpio_enable>:

void Gpio_enable(_gpio *g){
 8001244:	b480      	push	{r7}
 8001246:	b085      	sub	sp, #20
 8001248:	af00      	add	r7, sp, #0
 800124a:	6078      	str	r0, [r7, #4]
	uint8_t RCC_bitField;
	uint32_t Port =g->MODER;
 800124c:	687b      	ldr	r3, [r7, #4]
 800124e:	681b      	ldr	r3, [r3, #0]
 8001250:	60bb      	str	r3, [r7, #8]
	switch(Port){
 8001252:	68bb      	ldr	r3, [r7, #8]
 8001254:	4a23      	ldr	r2, [pc, #140]	; (80012e4 <Gpio_enable+0xa0>)
 8001256:	4293      	cmp	r3, r2
 8001258:	d026      	beq.n	80012a8 <Gpio_enable+0x64>
 800125a:	4a22      	ldr	r2, [pc, #136]	; (80012e4 <Gpio_enable+0xa0>)
 800125c:	4293      	cmp	r3, r2
 800125e:	d809      	bhi.n	8001274 <Gpio_enable+0x30>
 8001260:	4a21      	ldr	r2, [pc, #132]	; (80012e8 <Gpio_enable+0xa4>)
 8001262:	4293      	cmp	r3, r2
 8001264:	d01a      	beq.n	800129c <Gpio_enable+0x58>
 8001266:	4a21      	ldr	r2, [pc, #132]	; (80012ec <Gpio_enable+0xa8>)
 8001268:	4293      	cmp	r3, r2
 800126a:	d01a      	beq.n	80012a2 <Gpio_enable+0x5e>
 800126c:	4a20      	ldr	r2, [pc, #128]	; (80012f0 <Gpio_enable+0xac>)
 800126e:	4293      	cmp	r3, r2
 8001270:	d011      	beq.n	8001296 <Gpio_enable+0x52>
 8001272:	e028      	b.n	80012c6 <Gpio_enable+0x82>
 8001274:	4a1f      	ldr	r2, [pc, #124]	; (80012f4 <Gpio_enable+0xb0>)
 8001276:	4293      	cmp	r3, r2
 8001278:	d01c      	beq.n	80012b4 <Gpio_enable+0x70>
 800127a:	4a1e      	ldr	r2, [pc, #120]	; (80012f4 <Gpio_enable+0xb0>)
 800127c:	4293      	cmp	r3, r2
 800127e:	d803      	bhi.n	8001288 <Gpio_enable+0x44>
 8001280:	4a1d      	ldr	r2, [pc, #116]	; (80012f8 <Gpio_enable+0xb4>)
 8001282:	4293      	cmp	r3, r2
 8001284:	d013      	beq.n	80012ae <Gpio_enable+0x6a>
 8001286:	e01e      	b.n	80012c6 <Gpio_enable+0x82>
 8001288:	4a1c      	ldr	r2, [pc, #112]	; (80012fc <Gpio_enable+0xb8>)
 800128a:	4293      	cmp	r3, r2
 800128c:	d015      	beq.n	80012ba <Gpio_enable+0x76>
 800128e:	4a1c      	ldr	r2, [pc, #112]	; (8001300 <Gpio_enable+0xbc>)
 8001290:	4293      	cmp	r3, r2
 8001292:	d015      	beq.n	80012c0 <Gpio_enable+0x7c>
 8001294:	e017      	b.n	80012c6 <Gpio_enable+0x82>
	case GPIOA: RCC_bitField = 0;	break;
 8001296:	2300      	movs	r3, #0
 8001298:	73fb      	strb	r3, [r7, #15]
 800129a:	e014      	b.n	80012c6 <Gpio_enable+0x82>
	case GPIOB:	RCC_bitField = 1;	break;
 800129c:	2301      	movs	r3, #1
 800129e:	73fb      	strb	r3, [r7, #15]
 80012a0:	e011      	b.n	80012c6 <Gpio_enable+0x82>
	case GPIOC: RCC_bitField = 2;	break;
 80012a2:	2302      	movs	r3, #2
 80012a4:	73fb      	strb	r3, [r7, #15]
 80012a6:	e00e      	b.n	80012c6 <Gpio_enable+0x82>
	case GPIOD:	RCC_bitField = 3; 	break;
 80012a8:	2303      	movs	r3, #3
 80012aa:	73fb      	strb	r3, [r7, #15]
 80012ac:	e00b      	b.n	80012c6 <Gpio_enable+0x82>
	case GPIOE: RCC_bitField = 4;	break;
 80012ae:	2304      	movs	r3, #4
 80012b0:	73fb      	strb	r3, [r7, #15]
 80012b2:	e008      	b.n	80012c6 <Gpio_enable+0x82>
	case GPIOF: RCC_bitField = 5;	break;
 80012b4:	2305      	movs	r3, #5
 80012b6:	73fb      	strb	r3, [r7, #15]
 80012b8:	e005      	b.n	80012c6 <Gpio_enable+0x82>
	case GPIOG: RCC_bitField = 6;	break;
 80012ba:	2306      	movs	r3, #6
 80012bc:	73fb      	strb	r3, [r7, #15]
 80012be:	e002      	b.n	80012c6 <Gpio_enable+0x82>
	case GPIOH: RCC_bitField = 7;	break;
 80012c0:	2307      	movs	r3, #7
 80012c2:	73fb      	strb	r3, [r7, #15]
 80012c4:	bf00      	nop
	}
	*(RCC_AHB1ENR) |= (1<<RCC_bitField);
 80012c6:	490f      	ldr	r1, [pc, #60]	; (8001304 <Gpio_enable+0xc0>)
 80012c8:	4b0e      	ldr	r3, [pc, #56]	; (8001304 <Gpio_enable+0xc0>)
 80012ca:	681b      	ldr	r3, [r3, #0]
 80012cc:	7bfa      	ldrb	r2, [r7, #15]
 80012ce:	2001      	movs	r0, #1
 80012d0:	fa00 f202 	lsl.w	r2, r0, r2
 80012d4:	4313      	orrs	r3, r2
 80012d6:	600b      	str	r3, [r1, #0]
}
 80012d8:	bf00      	nop
 80012da:	3714      	adds	r7, #20
 80012dc:	46bd      	mov	sp, r7
 80012de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012e2:	4770      	bx	lr
 80012e4:	40020c00 	.word	0x40020c00
 80012e8:	40020400 	.word	0x40020400
 80012ec:	40020800 	.word	0x40020800
 80012f0:	40020000 	.word	0x40020000
 80012f4:	40021400 	.word	0x40021400
 80012f8:	40021000 	.word	0x40021000
 80012fc:	40021800 	.word	0x40021800
 8001300:	40021c00 	.word	0x40021c00
 8001304:	40023830 	.word	0x40023830

08001308 <delay>:
/**
 * delay for a number of miliseconds
 *
 * @param ms = milliseconds to delay
 */
void delay(int ms){
 8001308:	b480      	push	{r7}
 800130a:	b085      	sub	sp, #20
 800130c:	af00      	add	r7, sp, #0
 800130e:	6078      	str	r0, [r7, #4]
	//make sure counter is off
	*(STK_CTRL) &= ~(1<< STK_ENABLE_FLAG);
 8001310:	4a16      	ldr	r2, [pc, #88]	; (800136c <delay+0x64>)
 8001312:	4b16      	ldr	r3, [pc, #88]	; (800136c <delay+0x64>)
 8001314:	681b      	ldr	r3, [r3, #0]
 8001316:	f023 0301 	bic.w	r3, r3, #1
 800131a:	6013      	str	r3, [r2, #0]
	//#ms times
	for( uint32_t i=0; i < ms; i++){
 800131c:	2300      	movs	r3, #0
 800131e:	60fb      	str	r3, [r7, #12]
 8001320:	e01a      	b.n	8001358 <delay+0x50>
		// load 16000 into STK_LOAD
		*(STK_LOAD) = 16000;  // 1ms
 8001322:	4b13      	ldr	r3, [pc, #76]	; (8001370 <delay+0x68>)
 8001324:	f44f 527a 	mov.w	r2, #16000	; 0x3e80
 8001328:	601a      	str	r2, [r3, #0]
		// turn on counter
		*(STK_CTRL) |= ((1 << STK_ENABLE_FLAG) | (1 << STK_CLKSOURCE_FLAG));
 800132a:	4a10      	ldr	r2, [pc, #64]	; (800136c <delay+0x64>)
 800132c:	4b0f      	ldr	r3, [pc, #60]	; (800136c <delay+0x64>)
 800132e:	681b      	ldr	r3, [r3, #0]
 8001330:	f043 0305 	orr.w	r3, r3, #5
 8001334:	6013      	str	r3, [r2, #0]
		// poll for flag == 1
		while((*(STK_CTRL) & (1<<STK_CNTFLAG_FLAG)) != (1<<STK_CNTFLAG_FLAG)){}
 8001336:	bf00      	nop
 8001338:	4b0c      	ldr	r3, [pc, #48]	; (800136c <delay+0x64>)
 800133a:	681b      	ldr	r3, [r3, #0]
 800133c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001340:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001344:	d1f8      	bne.n	8001338 <delay+0x30>
		// turn off counter
		*(STK_CTRL) &= ~(1<<STK_ENABLE_FLAG);
 8001346:	4a09      	ldr	r2, [pc, #36]	; (800136c <delay+0x64>)
 8001348:	4b08      	ldr	r3, [pc, #32]	; (800136c <delay+0x64>)
 800134a:	681b      	ldr	r3, [r3, #0]
 800134c:	f023 0301 	bic.w	r3, r3, #1
 8001350:	6013      	str	r3, [r2, #0]
	for( uint32_t i=0; i < ms; i++){
 8001352:	68fb      	ldr	r3, [r7, #12]
 8001354:	3301      	adds	r3, #1
 8001356:	60fb      	str	r3, [r7, #12]
 8001358:	687b      	ldr	r3, [r7, #4]
 800135a:	68fa      	ldr	r2, [r7, #12]
 800135c:	429a      	cmp	r2, r3
 800135e:	d3e0      	bcc.n	8001322 <delay+0x1a>
	}
}
 8001360:	bf00      	nop
 8001362:	3714      	adds	r7, #20
 8001364:	46bd      	mov	sp, r7
 8001366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800136a:	4770      	bx	lr
 800136c:	e000e010 	.word	0xe000e010
 8001370:	e000e014 	.word	0xe000e014

08001374 <Encoder_init>:
static _Exti EXTI = {(uint32_t*)0x40013c00, (uint32_t*)0x40013c04, (uint32_t*)0x40013c08, (uint32_t*)0x40013c0c, (uint32_t*)0x40013c10, (uint32_t*)0x40013c14};
static _SysConfig SYSCONFIG = {(uint32_t*)0x40013800, (uint32_t*)0x40013804, (uint32_t*)0x40013808, (uint32_t*)0x4001380c, (uint32_t*)0x40013810, (uint32_t*)0x40013814, (uint32_t*)0x40013820};
static volatile int ENCODER_VAL;
static _gpio GpioA ={GPIOA};

void Encoder_init(void){
 8001374:	b580      	push	{r7, lr}
 8001376:	af00      	add	r7, sp, #0
	Gpio_setup(&GpioA);
 8001378:	482e      	ldr	r0, [pc, #184]	; (8001434 <Encoder_init+0xc0>)
 800137a:	f7ff fe2f 	bl	8000fdc <Gpio_setup>
//enable the gpio ports for the encoder by putting each in input mode with a pullup resistor
	Gpio_Pullup(&GpioA, 0);
 800137e:	2100      	movs	r1, #0
 8001380:	482c      	ldr	r0, [pc, #176]	; (8001434 <Encoder_init+0xc0>)
 8001382:	f7ff fe4b 	bl	800101c <Gpio_Pullup>
	Gpio_pinMode(&GpioA, 0, Input);
 8001386:	2200      	movs	r2, #0
 8001388:	2100      	movs	r1, #0
 800138a:	482a      	ldr	r0, [pc, #168]	; (8001434 <Encoder_init+0xc0>)
 800138c:	f7ff fe9c 	bl	80010c8 <Gpio_pinMode>
	Gpio_Pullup(&GpioA, 1);
 8001390:	2101      	movs	r1, #1
 8001392:	4828      	ldr	r0, [pc, #160]	; (8001434 <Encoder_init+0xc0>)
 8001394:	f7ff fe42 	bl	800101c <Gpio_Pullup>
	Gpio_pinMode(&GpioA, 1, Input);
 8001398:	2200      	movs	r2, #0
 800139a:	2101      	movs	r1, #1
 800139c:	4825      	ldr	r0, [pc, #148]	; (8001434 <Encoder_init+0xc0>)
 800139e:	f7ff fe93 	bl	80010c8 <Gpio_pinMode>
	Gpio_Pullup(&GpioA, 12);
 80013a2:	210c      	movs	r1, #12
 80013a4:	4823      	ldr	r0, [pc, #140]	; (8001434 <Encoder_init+0xc0>)
 80013a6:	f7ff fe39 	bl	800101c <Gpio_Pullup>
	Gpio_pinMode(&GpioA, 12, Input);
 80013aa:	2200      	movs	r2, #0
 80013ac:	210c      	movs	r1, #12
 80013ae:	4821      	ldr	r0, [pc, #132]	; (8001434 <Encoder_init+0xc0>)
 80013b0:	f7ff fe8a 	bl	80010c8 <Gpio_pinMode>
//Configure the SystemConfiguration register to acknowledge Interupts from port A pins 0, 1 and 12
	*(SYSCONFIG.EXTICR1) &= ~(7<<0 | 7<<4);
 80013b4:	4b20      	ldr	r3, [pc, #128]	; (8001438 <Encoder_init+0xc4>)
 80013b6:	689b      	ldr	r3, [r3, #8]
 80013b8:	4a1f      	ldr	r2, [pc, #124]	; (8001438 <Encoder_init+0xc4>)
 80013ba:	6892      	ldr	r2, [r2, #8]
 80013bc:	6812      	ldr	r2, [r2, #0]
 80013be:	f022 0277 	bic.w	r2, r2, #119	; 0x77
 80013c2:	601a      	str	r2, [r3, #0]
	*(SYSCONFIG.EXTICR4) &= ~(7<<0);
 80013c4:	4b1c      	ldr	r3, [pc, #112]	; (8001438 <Encoder_init+0xc4>)
 80013c6:	695b      	ldr	r3, [r3, #20]
 80013c8:	4a1b      	ldr	r2, [pc, #108]	; (8001438 <Encoder_init+0xc4>)
 80013ca:	6952      	ldr	r2, [r2, #20]
 80013cc:	6812      	ldr	r2, [r2, #0]
 80013ce:	f022 0207 	bic.w	r2, r2, #7
 80013d2:	601a      	str	r2, [r3, #0]
//Configure the EXTI registers to use both falling and rising edge detection
	*(EXTI.FTSR) |= ((1 << 0 )|( 1 << 1 )|( 1 << 12 ));
 80013d4:	4b19      	ldr	r3, [pc, #100]	; (800143c <Encoder_init+0xc8>)
 80013d6:	68da      	ldr	r2, [r3, #12]
 80013d8:	4b18      	ldr	r3, [pc, #96]	; (800143c <Encoder_init+0xc8>)
 80013da:	68db      	ldr	r3, [r3, #12]
 80013dc:	681b      	ldr	r3, [r3, #0]
 80013de:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80013e2:	f043 0303 	orr.w	r3, r3, #3
 80013e6:	6013      	str	r3, [r2, #0]
	*(EXTI.RTSR) |= ((1 << 0 )|( 1 << 1 )|( 1 << 12 ));
 80013e8:	4b14      	ldr	r3, [pc, #80]	; (800143c <Encoder_init+0xc8>)
 80013ea:	689a      	ldr	r2, [r3, #8]
 80013ec:	4b13      	ldr	r3, [pc, #76]	; (800143c <Encoder_init+0xc8>)
 80013ee:	689b      	ldr	r3, [r3, #8]
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80013f6:	f043 0303 	orr.w	r3, r3, #3
 80013fa:	6013      	str	r3, [r2, #0]
//NVIC LINE POSITIONS 6, 7, 40
	*(ISER0) |= (1<<EXTI0_NVIC | 1<<EXTI1_NVIC);
 80013fc:	4a10      	ldr	r2, [pc, #64]	; (8001440 <Encoder_init+0xcc>)
 80013fe:	4b10      	ldr	r3, [pc, #64]	; (8001440 <Encoder_init+0xcc>)
 8001400:	681b      	ldr	r3, [r3, #0]
 8001402:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001406:	6013      	str	r3, [r2, #0]
	*(ISER1) |= (1<<EXTI15thru10_NVIC);
 8001408:	4a0e      	ldr	r2, [pc, #56]	; (8001444 <Encoder_init+0xd0>)
 800140a:	4b0e      	ldr	r3, [pc, #56]	; (8001444 <Encoder_init+0xd0>)
 800140c:	681b      	ldr	r3, [r3, #0]
 800140e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001412:	6013      	str	r3, [r2, #0]
	(*NVIC_IPR1) |= (3 << 16+3) | (3 << 24+3);  // lower the interrupt priority to level 3 So DMA will take precedence;
 8001414:	4a0c      	ldr	r2, [pc, #48]	; (8001448 <Encoder_init+0xd4>)
 8001416:	4b0c      	ldr	r3, [pc, #48]	; (8001448 <Encoder_init+0xd4>)
 8001418:	681b      	ldr	r3, [r3, #0]
 800141a:	f043 53c0 	orr.w	r3, r3, #402653184	; 0x18000000
 800141e:	f443 13c0 	orr.w	r3, r3, #1572864	; 0x180000
 8001422:	6013      	str	r3, [r2, #0]
	ENCODER_VAL = Encoder_get_value();
 8001424:	f000 f814 	bl	8001450 <Encoder_get_value>
 8001428:	4602      	mov	r2, r0
 800142a:	4b08      	ldr	r3, [pc, #32]	; (800144c <Encoder_init+0xd8>)
 800142c:	601a      	str	r2, [r3, #0]
}
 800142e:	bf00      	nop
 8001430:	bd80      	pop	{r7, pc}
 8001432:	bf00      	nop
 8001434:	200000c0 	.word	0x200000c0
 8001438:	200000a4 	.word	0x200000a4
 800143c:	2000008c 	.word	0x2000008c
 8001440:	e000e100 	.word	0xe000e100
 8001444:	e000e104 	.word	0xe000e104
 8001448:	e000e404 	.word	0xe000e404
 800144c:	2000042c 	.word	0x2000042c

08001450 <Encoder_get_value>:

int Encoder_get_value(){
 8001450:	b590      	push	{r4, r7, lr}
 8001452:	b083      	sub	sp, #12
 8001454:	af00      	add	r7, sp, #0
	int x = (Gpio_digitalRead(&GpioA, 1) << 1 | Gpio_digitalRead(&GpioA, 0));
 8001456:	2101      	movs	r1, #1
 8001458:	480d      	ldr	r0, [pc, #52]	; (8001490 <Encoder_get_value+0x40>)
 800145a:	f7ff fe10 	bl	800107e <Gpio_digitalRead>
 800145e:	4603      	mov	r3, r0
 8001460:	005c      	lsls	r4, r3, #1
 8001462:	2100      	movs	r1, #0
 8001464:	480a      	ldr	r0, [pc, #40]	; (8001490 <Encoder_get_value+0x40>)
 8001466:	f7ff fe0a 	bl	800107e <Gpio_digitalRead>
 800146a:	4603      	mov	r3, r0
 800146c:	4323      	orrs	r3, r4
 800146e:	607b      	str	r3, [r7, #4]
	if(x == 3){ return 2; }
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	2b03      	cmp	r3, #3
 8001474:	d101      	bne.n	800147a <Encoder_get_value+0x2a>
 8001476:	2302      	movs	r3, #2
 8001478:	e005      	b.n	8001486 <Encoder_get_value+0x36>
	if(x == 2){ return 3; }
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	2b02      	cmp	r3, #2
 800147e:	d101      	bne.n	8001484 <Encoder_get_value+0x34>
 8001480:	2303      	movs	r3, #3
 8001482:	e000      	b.n	8001486 <Encoder_get_value+0x36>
	return x;
 8001484:	687b      	ldr	r3, [r7, #4]
}
 8001486:	4618      	mov	r0, r3
 8001488:	370c      	adds	r7, #12
 800148a:	46bd      	mov	sp, r7
 800148c:	bd90      	pop	{r4, r7, pc}
 800148e:	bf00      	nop
 8001490:	200000c0 	.word	0x200000c0

08001494 <Encoder_Interrupts>:

void Encoder_Interrupts(Fptr p){
 8001494:	b480      	push	{r7}
 8001496:	b083      	sub	sp, #12
 8001498:	af00      	add	r7, sp, #0
 800149a:	6078      	str	r0, [r7, #4]
	ISR = p;
 800149c:	4a17      	ldr	r2, [pc, #92]	; (80014fc <Encoder_Interrupts+0x68>)
 800149e:	687b      	ldr	r3, [r7, #4]
 80014a0:	6013      	str	r3, [r2, #0]
	(*EXTI.IMR) |= 1 << 0 | 1 << 1;  //ENABLE INTERRUPT MASK ON GPIO PX.0 and PX.1
 80014a2:	4b17      	ldr	r3, [pc, #92]	; (8001500 <Encoder_Interrupts+0x6c>)
 80014a4:	681b      	ldr	r3, [r3, #0]
 80014a6:	4a16      	ldr	r2, [pc, #88]	; (8001500 <Encoder_Interrupts+0x6c>)
 80014a8:	6812      	ldr	r2, [r2, #0]
 80014aa:	6812      	ldr	r2, [r2, #0]
 80014ac:	f042 0203 	orr.w	r2, r2, #3
 80014b0:	601a      	str	r2, [r3, #0]
	(*EXTI.RTSR) |= 1 << 0 | 1 << 1; //RISING EDGE TRIGGERED ON GPIO PX.0 and PX.1
 80014b2:	4b13      	ldr	r3, [pc, #76]	; (8001500 <Encoder_Interrupts+0x6c>)
 80014b4:	689b      	ldr	r3, [r3, #8]
 80014b6:	4a12      	ldr	r2, [pc, #72]	; (8001500 <Encoder_Interrupts+0x6c>)
 80014b8:	6892      	ldr	r2, [r2, #8]
 80014ba:	6812      	ldr	r2, [r2, #0]
 80014bc:	f042 0203 	orr.w	r2, r2, #3
 80014c0:	601a      	str	r2, [r3, #0]
	(*EXTI.FTSR) |= 1 << 0 | 1 << 1; //FALLING EDGE TRIGGERED ON GPIO PX.0 and PX.1
 80014c2:	4b0f      	ldr	r3, [pc, #60]	; (8001500 <Encoder_Interrupts+0x6c>)
 80014c4:	68db      	ldr	r3, [r3, #12]
 80014c6:	4a0e      	ldr	r2, [pc, #56]	; (8001500 <Encoder_Interrupts+0x6c>)
 80014c8:	68d2      	ldr	r2, [r2, #12]
 80014ca:	6812      	ldr	r2, [r2, #0]
 80014cc:	f042 0203 	orr.w	r2, r2, #3
 80014d0:	601a      	str	r2, [r3, #0]

	(*SYSCONFIG.EXTICR1) &=  0xFFFFFF00; // set the EXTI PORT to Port A
 80014d2:	4b0c      	ldr	r3, [pc, #48]	; (8001504 <Encoder_Interrupts+0x70>)
 80014d4:	689b      	ldr	r3, [r3, #8]
 80014d6:	4a0b      	ldr	r2, [pc, #44]	; (8001504 <Encoder_Interrupts+0x70>)
 80014d8:	6892      	ldr	r2, [r2, #8]
 80014da:	6812      	ldr	r2, [r2, #0]
 80014dc:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80014e0:	601a      	str	r2, [r3, #0]
	(*ISER0) |= (1 << 6 | 1 << 7);
 80014e2:	4a09      	ldr	r2, [pc, #36]	; (8001508 <Encoder_Interrupts+0x74>)
 80014e4:	4b08      	ldr	r3, [pc, #32]	; (8001508 <Encoder_Interrupts+0x74>)
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80014ec:	6013      	str	r3, [r2, #0]
}
 80014ee:	bf00      	nop
 80014f0:	370c      	adds	r7, #12
 80014f2:	46bd      	mov	sp, r7
 80014f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f8:	4770      	bx	lr
 80014fa:	bf00      	nop
 80014fc:	20000428 	.word	0x20000428
 8001500:	2000008c 	.word	0x2000008c
 8001504:	200000a4 	.word	0x200000a4
 8001508:	e000e100 	.word	0xe000e100

0800150c <Encoder_noInterrupts>:

void Encoder_noInterrupts(){
 800150c:	b480      	push	{r7}
 800150e:	af00      	add	r7, sp, #0
	//(*EXTI.IMR) &= ~(1 << 0 | 1 << 1); //DISABLE INTERRUPT MASK ON GPIO PX.0 and PX.1
	(*ICPR0) |= (1 << 6 | 1 << 7);
 8001510:	4a08      	ldr	r2, [pc, #32]	; (8001534 <Encoder_noInterrupts+0x28>)
 8001512:	4b08      	ldr	r3, [pc, #32]	; (8001534 <Encoder_noInterrupts+0x28>)
 8001514:	681b      	ldr	r3, [r3, #0]
 8001516:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800151a:	6013      	str	r3, [r2, #0]
	(*ICER0) |= (1 << 6 | 1 << 7);
 800151c:	4a06      	ldr	r2, [pc, #24]	; (8001538 <Encoder_noInterrupts+0x2c>)
 800151e:	4b06      	ldr	r3, [pc, #24]	; (8001538 <Encoder_noInterrupts+0x2c>)
 8001520:	681b      	ldr	r3, [r3, #0]
 8001522:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001526:	6013      	str	r3, [r2, #0]
}
 8001528:	bf00      	nop
 800152a:	46bd      	mov	sp, r7
 800152c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001530:	4770      	bx	lr
 8001532:	bf00      	nop
 8001534:	e000e280 	.word	0xe000e280
 8001538:	e000e180 	.word	0xe000e180

0800153c <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(){
 800153c:	4668      	mov	r0, sp
 800153e:	f020 0107 	bic.w	r1, r0, #7
 8001542:	468d      	mov	sp, r1
 8001544:	b589      	push	{r0, r3, r7, lr}
 8001546:	af00      	add	r7, sp, #0
	ISR();
 8001548:	4b08      	ldr	r3, [pc, #32]	; (800156c <EXTI0_IRQHandler+0x30>)
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	4798      	blx	r3
	(*EXTI.PR) |= 0b11;
 800154e:	4b08      	ldr	r3, [pc, #32]	; (8001570 <EXTI0_IRQHandler+0x34>)
 8001550:	695b      	ldr	r3, [r3, #20]
 8001552:	4a07      	ldr	r2, [pc, #28]	; (8001570 <EXTI0_IRQHandler+0x34>)
 8001554:	6952      	ldr	r2, [r2, #20]
 8001556:	6812      	ldr	r2, [r2, #0]
 8001558:	f042 0203 	orr.w	r2, r2, #3
 800155c:	601a      	str	r2, [r3, #0]
}
 800155e:	bf00      	nop
 8001560:	46bd      	mov	sp, r7
 8001562:	e8bd 4089 	ldmia.w	sp!, {r0, r3, r7, lr}
 8001566:	4685      	mov	sp, r0
 8001568:	4770      	bx	lr
 800156a:	bf00      	nop
 800156c:	20000428 	.word	0x20000428
 8001570:	2000008c 	.word	0x2000008c

08001574 <EXTI1_IRQHandler>:

void EXTI1_IRQHandler(){
 8001574:	4668      	mov	r0, sp
 8001576:	f020 0107 	bic.w	r1, r0, #7
 800157a:	468d      	mov	sp, r1
 800157c:	b589      	push	{r0, r3, r7, lr}
 800157e:	af00      	add	r7, sp, #0
	ISR();
 8001580:	4b08      	ldr	r3, [pc, #32]	; (80015a4 <EXTI1_IRQHandler+0x30>)
 8001582:	681b      	ldr	r3, [r3, #0]
 8001584:	4798      	blx	r3
	(*EXTI.PR) |= 0b11;
 8001586:	4b08      	ldr	r3, [pc, #32]	; (80015a8 <EXTI1_IRQHandler+0x34>)
 8001588:	695b      	ldr	r3, [r3, #20]
 800158a:	4a07      	ldr	r2, [pc, #28]	; (80015a8 <EXTI1_IRQHandler+0x34>)
 800158c:	6952      	ldr	r2, [r2, #20]
 800158e:	6812      	ldr	r2, [r2, #0]
 8001590:	f042 0203 	orr.w	r2, r2, #3
 8001594:	601a      	str	r2, [r3, #0]

}
 8001596:	bf00      	nop
 8001598:	46bd      	mov	sp, r7
 800159a:	e8bd 4089 	ldmia.w	sp!, {r0, r3, r7, lr}
 800159e:	4685      	mov	sp, r0
 80015a0:	4770      	bx	lr
 80015a2:	bf00      	nop
 80015a4:	20000428 	.word	0x20000428
 80015a8:	2000008c 	.word	0x2000008c

080015ac <EXCEPTION>:
 */
#include "error.h"



ErrorLog* EXCEPTION(int E, char* msg){
 80015ac:	b580      	push	{r7, lr}
 80015ae:	b082      	sub	sp, #8
 80015b0:	af00      	add	r7, sp, #0
 80015b2:	6078      	str	r0, [r7, #4]
 80015b4:	6039      	str	r1, [r7, #0]
	switch (E){
 80015b6:	687b      	ldr	r3, [r7, #4]
 80015b8:	2b01      	cmp	r3, #1
 80015ba:	d00e      	beq.n	80015da <EXCEPTION+0x2e>
 80015bc:	2b02      	cmp	r3, #2
 80015be:	d00e      	beq.n	80015de <EXCEPTION+0x32>
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	d10e      	bne.n	80015e2 <EXCEPTION+0x36>
	case FATAL_ERROR:
		printf("A FATAL ERROR HAS OCCURED!: *SYSTEM RESET* - CAUSED BY :%s  LINE: %p", msg, getProgramLine());
 80015c4:	f000 f818 	bl	80015f8 <getProgramLine>
 80015c8:	4603      	mov	r3, r0
 80015ca:	461a      	mov	r2, r3
 80015cc:	6839      	ldr	r1, [r7, #0]
 80015ce:	4807      	ldr	r0, [pc, #28]	; (80015ec <EXCEPTION+0x40>)
 80015d0:	f002 f89c 	bl	800370c <iprintf>
		for(;;){asm("b Reset_Handler");}
 80015d4:	f001 b8ee 	b.w	80027b4 <Reset_Handler>
 80015d8:	e7fc      	b.n	80015d4 <EXCEPTION+0x28>
		break;
	case ERROR:	return "ERROR: ";		break;
 80015da:	4b05      	ldr	r3, [pc, #20]	; (80015f0 <EXCEPTION+0x44>)
 80015dc:	e002      	b.n	80015e4 <EXCEPTION+0x38>
	case WARNING: return "WARNING: ";	break;
 80015de:	4b05      	ldr	r3, [pc, #20]	; (80015f4 <EXCEPTION+0x48>)
 80015e0:	e000      	b.n	80015e4 <EXCEPTION+0x38>
	default: return 0;
 80015e2:	2300      	movs	r3, #0
	}
}
 80015e4:	4618      	mov	r0, r3
 80015e6:	3708      	adds	r7, #8
 80015e8:	46bd      	mov	sp, r7
 80015ea:	bd80      	pop	{r7, pc}
 80015ec:	08006e6c 	.word	0x08006e6c
 80015f0:	08006eb4 	.word	0x08006eb4
 80015f4:	08006ebc 	.word	0x08006ebc

080015f8 <getProgramLine>:

uint32_t getProgramLine(){
	register uint32_t* linkReg asm("lr");
	return *(linkReg);
 80015f8:	4673      	mov	r3, lr
 80015fa:	681b      	ldr	r3, [r3, #0]
}
 80015fc:	4618      	mov	r0, r3
	...

08001600 <kpad_begin>:
 COL3	PC2
 COL4	PC3
 -------------------------
 */

void kpad_begin() {
 8001600:	b480      	push	{r7}
 8001602:	af00      	add	r7, sp, #0
	// set RCC clock for GPIOC
	*(RCC_AHB1ENR ) |= (1 << GPIOCEN_BF);
 8001604:	4a2d      	ldr	r2, [pc, #180]	; (80016bc <kpad_begin+0xbc>)
 8001606:	4b2d      	ldr	r3, [pc, #180]	; (80016bc <kpad_begin+0xbc>)
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	f043 0304 	orr.w	r3, r3, #4
 800160e:	6013      	str	r3, [r2, #0]

	// set GPIO pins as inputs with PullDown resistors
	*(GPIOC_MODER ) |= (GPIO_INPUT << MODER_0_BF );
 8001610:	4a2b      	ldr	r2, [pc, #172]	; (80016c0 <kpad_begin+0xc0>)
 8001612:	4b2b      	ldr	r3, [pc, #172]	; (80016c0 <kpad_begin+0xc0>)
 8001614:	681b      	ldr	r3, [r3, #0]
 8001616:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) |= (GPIO_INPUT << MODER_1_BF );
 8001618:	4a29      	ldr	r2, [pc, #164]	; (80016c0 <kpad_begin+0xc0>)
 800161a:	4b29      	ldr	r3, [pc, #164]	; (80016c0 <kpad_begin+0xc0>)
 800161c:	681b      	ldr	r3, [r3, #0]
 800161e:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) |= (GPIO_INPUT << MODER_2_BF );
 8001620:	4a27      	ldr	r2, [pc, #156]	; (80016c0 <kpad_begin+0xc0>)
 8001622:	4b27      	ldr	r3, [pc, #156]	; (80016c0 <kpad_begin+0xc0>)
 8001624:	681b      	ldr	r3, [r3, #0]
 8001626:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) |= (GPIO_INPUT << MODER_3_BF );
 8001628:	4a25      	ldr	r2, [pc, #148]	; (80016c0 <kpad_begin+0xc0>)
 800162a:	4b25      	ldr	r3, [pc, #148]	; (80016c0 <kpad_begin+0xc0>)
 800162c:	681b      	ldr	r3, [r3, #0]
 800162e:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) |= (GPIO_INPUT << MODER_4_BF );
 8001630:	4a23      	ldr	r2, [pc, #140]	; (80016c0 <kpad_begin+0xc0>)
 8001632:	4b23      	ldr	r3, [pc, #140]	; (80016c0 <kpad_begin+0xc0>)
 8001634:	681b      	ldr	r3, [r3, #0]
 8001636:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) |= (GPIO_INPUT << MODER_5_BF );
 8001638:	4a21      	ldr	r2, [pc, #132]	; (80016c0 <kpad_begin+0xc0>)
 800163a:	4b21      	ldr	r3, [pc, #132]	; (80016c0 <kpad_begin+0xc0>)
 800163c:	681b      	ldr	r3, [r3, #0]
 800163e:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) |= (GPIO_INPUT << MODER_6_BF );
 8001640:	4a1f      	ldr	r2, [pc, #124]	; (80016c0 <kpad_begin+0xc0>)
 8001642:	4b1f      	ldr	r3, [pc, #124]	; (80016c0 <kpad_begin+0xc0>)
 8001644:	681b      	ldr	r3, [r3, #0]
 8001646:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) |= (GPIO_INPUT << MODER_7_BF );
 8001648:	4a1d      	ldr	r2, [pc, #116]	; (80016c0 <kpad_begin+0xc0>)
 800164a:	4b1d      	ldr	r3, [pc, #116]	; (80016c0 <kpad_begin+0xc0>)
 800164c:	681b      	ldr	r3, [r3, #0]
 800164e:	6013      	str	r3, [r2, #0]

	*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_0_BF );
 8001650:	4a1c      	ldr	r2, [pc, #112]	; (80016c4 <kpad_begin+0xc4>)
 8001652:	4b1c      	ldr	r3, [pc, #112]	; (80016c4 <kpad_begin+0xc4>)
 8001654:	681b      	ldr	r3, [r3, #0]
 8001656:	f043 0302 	orr.w	r3, r3, #2
 800165a:	6013      	str	r3, [r2, #0]
	*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_1_BF );
 800165c:	4a19      	ldr	r2, [pc, #100]	; (80016c4 <kpad_begin+0xc4>)
 800165e:	4b19      	ldr	r3, [pc, #100]	; (80016c4 <kpad_begin+0xc4>)
 8001660:	681b      	ldr	r3, [r3, #0]
 8001662:	f043 0308 	orr.w	r3, r3, #8
 8001666:	6013      	str	r3, [r2, #0]
	*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_2_BF );
 8001668:	4a16      	ldr	r2, [pc, #88]	; (80016c4 <kpad_begin+0xc4>)
 800166a:	4b16      	ldr	r3, [pc, #88]	; (80016c4 <kpad_begin+0xc4>)
 800166c:	681b      	ldr	r3, [r3, #0]
 800166e:	f043 0320 	orr.w	r3, r3, #32
 8001672:	6013      	str	r3, [r2, #0]
	*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_3_BF );
 8001674:	4a13      	ldr	r2, [pc, #76]	; (80016c4 <kpad_begin+0xc4>)
 8001676:	4b13      	ldr	r3, [pc, #76]	; (80016c4 <kpad_begin+0xc4>)
 8001678:	681b      	ldr	r3, [r3, #0]
 800167a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800167e:	6013      	str	r3, [r2, #0]
	*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_4_BF );
 8001680:	4a10      	ldr	r2, [pc, #64]	; (80016c4 <kpad_begin+0xc4>)
 8001682:	4b10      	ldr	r3, [pc, #64]	; (80016c4 <kpad_begin+0xc4>)
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800168a:	6013      	str	r3, [r2, #0]
	*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_5_BF );
 800168c:	4a0d      	ldr	r2, [pc, #52]	; (80016c4 <kpad_begin+0xc4>)
 800168e:	4b0d      	ldr	r3, [pc, #52]	; (80016c4 <kpad_begin+0xc4>)
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8001696:	6013      	str	r3, [r2, #0]
	*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_6_BF );
 8001698:	4a0a      	ldr	r2, [pc, #40]	; (80016c4 <kpad_begin+0xc4>)
 800169a:	4b0a      	ldr	r3, [pc, #40]	; (80016c4 <kpad_begin+0xc4>)
 800169c:	681b      	ldr	r3, [r3, #0]
 800169e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80016a2:	6013      	str	r3, [r2, #0]
	*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_7_BF );
 80016a4:	4a07      	ldr	r2, [pc, #28]	; (80016c4 <kpad_begin+0xc4>)
 80016a6:	4b07      	ldr	r3, [pc, #28]	; (80016c4 <kpad_begin+0xc4>)
 80016a8:	681b      	ldr	r3, [r3, #0]
 80016aa:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80016ae:	6013      	str	r3, [r2, #0]

}
 80016b0:	bf00      	nop
 80016b2:	46bd      	mov	sp, r7
 80016b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016b8:	4770      	bx	lr
 80016ba:	bf00      	nop
 80016bc:	40023830 	.word	0x40023830
 80016c0:	40020800 	.word	0x40020800
 80016c4:	4002080c 	.word	0x4002080c

080016c8 <row_scan>:

/*
 * scans through the
 */
static int row_scan() {
 80016c8:	b480      	push	{r7}
 80016ca:	b083      	sub	sp, #12
 80016cc:	af00      	add	r7, sp, #0
	int regValue;
	int returnValue;
	//read the values of the input data register for  pins [7..4]
	regValue = (*(GPIOC_IDR ) & 0xf0) >> 4;
 80016ce:	4b17      	ldr	r3, [pc, #92]	; (800172c <row_scan+0x64>)
 80016d0:	681b      	ldr	r3, [r3, #0]
 80016d2:	091b      	lsrs	r3, r3, #4
 80016d4:	f003 030f 	and.w	r3, r3, #15
 80016d8:	603b      	str	r3, [r7, #0]
	//return the row of the bottom most active switch
	// ie if both 4 and 7 are pressed  row 3 will be returned as it correlates
	// to the row with 7
	if (regValue & 0x1) {
 80016da:	683b      	ldr	r3, [r7, #0]
 80016dc:	f003 0301 	and.w	r3, r3, #1
 80016e0:	2b00      	cmp	r3, #0
 80016e2:	d002      	beq.n	80016ea <row_scan+0x22>
		returnValue = 1;
 80016e4:	2301      	movs	r3, #1
 80016e6:	607b      	str	r3, [r7, #4]
 80016e8:	e019      	b.n	800171e <row_scan+0x56>
	} else if (regValue & 0x2) {
 80016ea:	683b      	ldr	r3, [r7, #0]
 80016ec:	f003 0302 	and.w	r3, r3, #2
 80016f0:	2b00      	cmp	r3, #0
 80016f2:	d002      	beq.n	80016fa <row_scan+0x32>
		returnValue = 2;
 80016f4:	2302      	movs	r3, #2
 80016f6:	607b      	str	r3, [r7, #4]
 80016f8:	e011      	b.n	800171e <row_scan+0x56>
	} else if (regValue & 0x4) {
 80016fa:	683b      	ldr	r3, [r7, #0]
 80016fc:	f003 0304 	and.w	r3, r3, #4
 8001700:	2b00      	cmp	r3, #0
 8001702:	d002      	beq.n	800170a <row_scan+0x42>
		returnValue = 3;
 8001704:	2303      	movs	r3, #3
 8001706:	607b      	str	r3, [r7, #4]
 8001708:	e009      	b.n	800171e <row_scan+0x56>
	} else if (regValue & 0x8) {
 800170a:	683b      	ldr	r3, [r7, #0]
 800170c:	f003 0308 	and.w	r3, r3, #8
 8001710:	2b00      	cmp	r3, #0
 8001712:	d002      	beq.n	800171a <row_scan+0x52>
		returnValue = 4;
 8001714:	2304      	movs	r3, #4
 8001716:	607b      	str	r3, [r7, #4]
 8001718:	e001      	b.n	800171e <row_scan+0x56>
	} else {
		returnValue = 0;
 800171a:	2300      	movs	r3, #0
 800171c:	607b      	str	r3, [r7, #4]
	}
	//return the row number
	return returnValue;
 800171e:	687b      	ldr	r3, [r7, #4]
}
 8001720:	4618      	mov	r0, r3
 8001722:	370c      	adds	r7, #12
 8001724:	46bd      	mov	sp, r7
 8001726:	f85d 7b04 	ldr.w	r7, [sp], #4
 800172a:	4770      	bx	lr
 800172c:	40020810 	.word	0x40020810

08001730 <map>:
 * ie. key#4 has a value of A
 * so if a 4 is entered the value 0xA is returned
 * # key returns 0xf, * key returns 0xe
 * if no key is pressed -1 is returned
 */
static int map(int keyNum) {
 8001730:	b480      	push	{r7}
 8001732:	b085      	sub	sp, #20
 8001734:	af00      	add	r7, sp, #0
 8001736:	6078      	str	r0, [r7, #4]
	int mappedVal;
	switch (keyNum) {
 8001738:	687b      	ldr	r3, [r7, #4]
 800173a:	3b01      	subs	r3, #1
 800173c:	2b0f      	cmp	r3, #15
 800173e:	d853      	bhi.n	80017e8 <map+0xb8>
 8001740:	a201      	add	r2, pc, #4	; (adr r2, 8001748 <map+0x18>)
 8001742:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001746:	bf00      	nop
 8001748:	08001789 	.word	0x08001789
 800174c:	0800178f 	.word	0x0800178f
 8001750:	08001795 	.word	0x08001795
 8001754:	0800179b 	.word	0x0800179b
 8001758:	080017a1 	.word	0x080017a1
 800175c:	080017a7 	.word	0x080017a7
 8001760:	080017ad 	.word	0x080017ad
 8001764:	080017b3 	.word	0x080017b3
 8001768:	080017b9 	.word	0x080017b9
 800176c:	080017bf 	.word	0x080017bf
 8001770:	080017c5 	.word	0x080017c5
 8001774:	080017cb 	.word	0x080017cb
 8001778:	080017d1 	.word	0x080017d1
 800177c:	080017d7 	.word	0x080017d7
 8001780:	080017dd 	.word	0x080017dd
 8001784:	080017e3 	.word	0x080017e3
	case 1:
		mappedVal = 1;
 8001788:	2301      	movs	r3, #1
 800178a:	60fb      	str	r3, [r7, #12]
		break;
 800178c:	e02f      	b.n	80017ee <map+0xbe>
	case 2:
		mappedVal = 2;
 800178e:	2302      	movs	r3, #2
 8001790:	60fb      	str	r3, [r7, #12]
		break;
 8001792:	e02c      	b.n	80017ee <map+0xbe>
	case 3:
		mappedVal = 3;
 8001794:	2303      	movs	r3, #3
 8001796:	60fb      	str	r3, [r7, #12]
		break;
 8001798:	e029      	b.n	80017ee <map+0xbe>
	case 4:
		mappedVal = 0xA;
 800179a:	230a      	movs	r3, #10
 800179c:	60fb      	str	r3, [r7, #12]
		break;
 800179e:	e026      	b.n	80017ee <map+0xbe>
	case 5:
		mappedVal = 4;
 80017a0:	2304      	movs	r3, #4
 80017a2:	60fb      	str	r3, [r7, #12]
		break;
 80017a4:	e023      	b.n	80017ee <map+0xbe>
	case 6:
		mappedVal = 5;
 80017a6:	2305      	movs	r3, #5
 80017a8:	60fb      	str	r3, [r7, #12]
		break;
 80017aa:	e020      	b.n	80017ee <map+0xbe>
	case 7:
		mappedVal = 6;
 80017ac:	2306      	movs	r3, #6
 80017ae:	60fb      	str	r3, [r7, #12]
		break;
 80017b0:	e01d      	b.n	80017ee <map+0xbe>
	case 8:
		mappedVal = 0xB;
 80017b2:	230b      	movs	r3, #11
 80017b4:	60fb      	str	r3, [r7, #12]
		break;
 80017b6:	e01a      	b.n	80017ee <map+0xbe>
	case 9:
		mappedVal = 7;
 80017b8:	2307      	movs	r3, #7
 80017ba:	60fb      	str	r3, [r7, #12]
		break;
 80017bc:	e017      	b.n	80017ee <map+0xbe>
	case 10:
		mappedVal = 8;
 80017be:	2308      	movs	r3, #8
 80017c0:	60fb      	str	r3, [r7, #12]
		break;
 80017c2:	e014      	b.n	80017ee <map+0xbe>
	case 11:
		mappedVal = 9;
 80017c4:	2309      	movs	r3, #9
 80017c6:	60fb      	str	r3, [r7, #12]
		break;
 80017c8:	e011      	b.n	80017ee <map+0xbe>
	case 12:
		mappedVal = 0xC;
 80017ca:	230c      	movs	r3, #12
 80017cc:	60fb      	str	r3, [r7, #12]
		break;
 80017ce:	e00e      	b.n	80017ee <map+0xbe>
	case 13:
		mappedVal = 0xE;
 80017d0:	230e      	movs	r3, #14
 80017d2:	60fb      	str	r3, [r7, #12]
		break;
 80017d4:	e00b      	b.n	80017ee <map+0xbe>
	case 14:
		mappedVal = 0;
 80017d6:	2300      	movs	r3, #0
 80017d8:	60fb      	str	r3, [r7, #12]
		break;
 80017da:	e008      	b.n	80017ee <map+0xbe>
	case 15:
		mappedVal = 0xF;
 80017dc:	230f      	movs	r3, #15
 80017de:	60fb      	str	r3, [r7, #12]
		break;
 80017e0:	e005      	b.n	80017ee <map+0xbe>
	case 16:
		mappedVal = 0xD;
 80017e2:	230d      	movs	r3, #13
 80017e4:	60fb      	str	r3, [r7, #12]
		break;
 80017e6:	e002      	b.n	80017ee <map+0xbe>
	default:
		mappedVal = -1;
 80017e8:	f04f 33ff 	mov.w	r3, #4294967295
 80017ec:	60fb      	str	r3, [r7, #12]
	}
	return mappedVal;
 80017ee:	68fb      	ldr	r3, [r7, #12]
}
 80017f0:	4618      	mov	r0, r3
 80017f2:	3714      	adds	r7, #20
 80017f4:	46bd      	mov	sp, r7
 80017f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017fa:	4770      	bx	lr

080017fc <kpad_read>:

int kpad_read() {
 80017fc:	b580      	push	{r7, lr}
 80017fe:	b082      	sub	sp, #8
 8001800:	af00      	add	r7, sp, #0
	//scan each row and return the first read value
	int readValue;
	// pull column 1 high
	*(GPIOC_PUPDR ) &= ~(0x3 << PUPDR_0_BF );
 8001802:	4a84      	ldr	r2, [pc, #528]	; (8001a14 <kpad_read+0x218>)
 8001804:	4b83      	ldr	r3, [pc, #524]	; (8001a14 <kpad_read+0x218>)
 8001806:	681b      	ldr	r3, [r3, #0]
 8001808:	f023 0303 	bic.w	r3, r3, #3
 800180c:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) &= ~(0x3 << MODER_0_BF );
 800180e:	4a82      	ldr	r2, [pc, #520]	; (8001a18 <kpad_read+0x21c>)
 8001810:	4b81      	ldr	r3, [pc, #516]	; (8001a18 <kpad_read+0x21c>)
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	f023 0303 	bic.w	r3, r3, #3
 8001818:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) |= (GPIO_OUTPUT << MODER_0_BF );
 800181a:	4a7f      	ldr	r2, [pc, #508]	; (8001a18 <kpad_read+0x21c>)
 800181c:	4b7e      	ldr	r3, [pc, #504]	; (8001a18 <kpad_read+0x21c>)
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	f043 0301 	orr.w	r3, r3, #1
 8001824:	6013      	str	r3, [r2, #0]
	*(GPIOC_BSRR ) |= (1 << BSRR_S_0_BF );
 8001826:	4a7d      	ldr	r2, [pc, #500]	; (8001a1c <kpad_read+0x220>)
 8001828:	4b7c      	ldr	r3, [pc, #496]	; (8001a1c <kpad_read+0x220>)
 800182a:	681b      	ldr	r3, [r3, #0]
 800182c:	f043 0301 	orr.w	r3, r3, #1
 8001830:	6013      	str	r3, [r2, #0]
	//scan through the rows to find if one is pressed
	readValue = 4 * (row_scan() - 1) + 1;
 8001832:	f7ff ff49 	bl	80016c8 <row_scan>
 8001836:	4603      	mov	r3, r0
 8001838:	3b01      	subs	r3, #1
 800183a:	009b      	lsls	r3, r3, #2
 800183c:	3301      	adds	r3, #1
 800183e:	607b      	str	r3, [r7, #4]
//	if(readValue < 0){return 0;}
	// pull column 1 low again
	*(GPIOC_BSRR ) |= (1 << BSRR_R_0_BF );
 8001840:	4a76      	ldr	r2, [pc, #472]	; (8001a1c <kpad_read+0x220>)
 8001842:	4b76      	ldr	r3, [pc, #472]	; (8001a1c <kpad_read+0x220>)
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800184a:	6013      	str	r3, [r2, #0]
	*(GPIOC_PUPDR ) &= ~(0x3 << PUPDR_0_BF );
 800184c:	4a71      	ldr	r2, [pc, #452]	; (8001a14 <kpad_read+0x218>)
 800184e:	4b71      	ldr	r3, [pc, #452]	; (8001a14 <kpad_read+0x218>)
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	f023 0303 	bic.w	r3, r3, #3
 8001856:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) &= ~(0x3 << MODER_0_BF );
 8001858:	4a6f      	ldr	r2, [pc, #444]	; (8001a18 <kpad_read+0x21c>)
 800185a:	4b6f      	ldr	r3, [pc, #444]	; (8001a18 <kpad_read+0x21c>)
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	f023 0303 	bic.w	r3, r3, #3
 8001862:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER ) |= (GPIO_OUTPUT << MODER_0_BF );
 8001864:	4a6c      	ldr	r2, [pc, #432]	; (8001a18 <kpad_read+0x21c>)
 8001866:	4b6c      	ldr	r3, [pc, #432]	; (8001a18 <kpad_read+0x21c>)
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	f043 0301 	orr.w	r3, r3, #1
 800186e:	6013      	str	r3, [r2, #0]
	*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_0_BF );
 8001870:	4a68      	ldr	r2, [pc, #416]	; (8001a14 <kpad_read+0x218>)
 8001872:	4b68      	ldr	r3, [pc, #416]	; (8001a14 <kpad_read+0x218>)
 8001874:	681b      	ldr	r3, [r3, #0]
 8001876:	f043 0302 	orr.w	r3, r3, #2
 800187a:	6013      	str	r3, [r2, #0]

	if (readValue < 0) {
 800187c:	687b      	ldr	r3, [r7, #4]
 800187e:	2b00      	cmp	r3, #0
 8001880:	da3c      	bge.n	80018fc <kpad_read+0x100>
		// pull column 2 high
		*(GPIOC_PUPDR ) &= ~(0x3 << PUPDR_1_BF );
 8001882:	4a64      	ldr	r2, [pc, #400]	; (8001a14 <kpad_read+0x218>)
 8001884:	4b63      	ldr	r3, [pc, #396]	; (8001a14 <kpad_read+0x218>)
 8001886:	681b      	ldr	r3, [r3, #0]
 8001888:	f023 030c 	bic.w	r3, r3, #12
 800188c:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) &= ~(0x3 << MODER_1_BF );
 800188e:	4a62      	ldr	r2, [pc, #392]	; (8001a18 <kpad_read+0x21c>)
 8001890:	4b61      	ldr	r3, [pc, #388]	; (8001a18 <kpad_read+0x21c>)
 8001892:	681b      	ldr	r3, [r3, #0]
 8001894:	f023 030c 	bic.w	r3, r3, #12
 8001898:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) |= (GPIO_OUTPUT << MODER_1_BF );
 800189a:	4a5f      	ldr	r2, [pc, #380]	; (8001a18 <kpad_read+0x21c>)
 800189c:	4b5e      	ldr	r3, [pc, #376]	; (8001a18 <kpad_read+0x21c>)
 800189e:	681b      	ldr	r3, [r3, #0]
 80018a0:	f043 0304 	orr.w	r3, r3, #4
 80018a4:	6013      	str	r3, [r2, #0]
		*(GPIOC_BSRR ) |= (1 << BSRR_S_1_BF );
 80018a6:	4a5d      	ldr	r2, [pc, #372]	; (8001a1c <kpad_read+0x220>)
 80018a8:	4b5c      	ldr	r3, [pc, #368]	; (8001a1c <kpad_read+0x220>)
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	f043 0302 	orr.w	r3, r3, #2
 80018b0:	6013      	str	r3, [r2, #0]
		//scan through the rows to find if one is pressed
		readValue = 4 * (row_scan() - 1) + 2;
 80018b2:	f7ff ff09 	bl	80016c8 <row_scan>
 80018b6:	4603      	mov	r3, r0
 80018b8:	3b01      	subs	r3, #1
 80018ba:	009b      	lsls	r3, r3, #2
 80018bc:	3302      	adds	r3, #2
 80018be:	607b      	str	r3, [r7, #4]
		//	if(readValue < 0){return 0;}
		// pull column 2 low again
		*(GPIOC_BSRR ) |= (1 << BSRR_R_1_BF );
 80018c0:	4a56      	ldr	r2, [pc, #344]	; (8001a1c <kpad_read+0x220>)
 80018c2:	4b56      	ldr	r3, [pc, #344]	; (8001a1c <kpad_read+0x220>)
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80018ca:	6013      	str	r3, [r2, #0]
		*(GPIOC_PUPDR ) &= ~(0x3 << PUPDR_1_BF );
 80018cc:	4a51      	ldr	r2, [pc, #324]	; (8001a14 <kpad_read+0x218>)
 80018ce:	4b51      	ldr	r3, [pc, #324]	; (8001a14 <kpad_read+0x218>)
 80018d0:	681b      	ldr	r3, [r3, #0]
 80018d2:	f023 030c 	bic.w	r3, r3, #12
 80018d6:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) &= ~(0x3 << MODER_1_BF );
 80018d8:	4a4f      	ldr	r2, [pc, #316]	; (8001a18 <kpad_read+0x21c>)
 80018da:	4b4f      	ldr	r3, [pc, #316]	; (8001a18 <kpad_read+0x21c>)
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	f023 030c 	bic.w	r3, r3, #12
 80018e2:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) |= (GPIO_OUTPUT << MODER_1_BF );
 80018e4:	4a4c      	ldr	r2, [pc, #304]	; (8001a18 <kpad_read+0x21c>)
 80018e6:	4b4c      	ldr	r3, [pc, #304]	; (8001a18 <kpad_read+0x21c>)
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	f043 0304 	orr.w	r3, r3, #4
 80018ee:	6013      	str	r3, [r2, #0]
		*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_1_BF );
 80018f0:	4a48      	ldr	r2, [pc, #288]	; (8001a14 <kpad_read+0x218>)
 80018f2:	4b48      	ldr	r3, [pc, #288]	; (8001a14 <kpad_read+0x218>)
 80018f4:	681b      	ldr	r3, [r3, #0]
 80018f6:	f043 0308 	orr.w	r3, r3, #8
 80018fa:	6013      	str	r3, [r2, #0]
	}

	if (readValue < 0) {
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	2b00      	cmp	r3, #0
 8001900:	da3c      	bge.n	800197c <kpad_read+0x180>
		// pull column 3 high
		*(GPIOC_PUPDR ) &= ~(0x3 << PUPDR_2_BF );
 8001902:	4a44      	ldr	r2, [pc, #272]	; (8001a14 <kpad_read+0x218>)
 8001904:	4b43      	ldr	r3, [pc, #268]	; (8001a14 <kpad_read+0x218>)
 8001906:	681b      	ldr	r3, [r3, #0]
 8001908:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800190c:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) &= ~(0x3 << MODER_2_BF );
 800190e:	4a42      	ldr	r2, [pc, #264]	; (8001a18 <kpad_read+0x21c>)
 8001910:	4b41      	ldr	r3, [pc, #260]	; (8001a18 <kpad_read+0x21c>)
 8001912:	681b      	ldr	r3, [r3, #0]
 8001914:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8001918:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) |= (GPIO_OUTPUT << MODER_2_BF );
 800191a:	4a3f      	ldr	r2, [pc, #252]	; (8001a18 <kpad_read+0x21c>)
 800191c:	4b3e      	ldr	r3, [pc, #248]	; (8001a18 <kpad_read+0x21c>)
 800191e:	681b      	ldr	r3, [r3, #0]
 8001920:	f043 0310 	orr.w	r3, r3, #16
 8001924:	6013      	str	r3, [r2, #0]
		*(GPIOC_BSRR ) |= (1 << BSRR_S_2_BF );
 8001926:	4a3d      	ldr	r2, [pc, #244]	; (8001a1c <kpad_read+0x220>)
 8001928:	4b3c      	ldr	r3, [pc, #240]	; (8001a1c <kpad_read+0x220>)
 800192a:	681b      	ldr	r3, [r3, #0]
 800192c:	f043 0304 	orr.w	r3, r3, #4
 8001930:	6013      	str	r3, [r2, #0]
		//scan through the rows to find if one is pressed
		readValue = 4 * (row_scan() - 1) + 3;
 8001932:	f7ff fec9 	bl	80016c8 <row_scan>
 8001936:	4603      	mov	r3, r0
 8001938:	3b01      	subs	r3, #1
 800193a:	009b      	lsls	r3, r3, #2
 800193c:	3303      	adds	r3, #3
 800193e:	607b      	str	r3, [r7, #4]
		//if(readValue < 0){return 0;}
		// pull column 3 low again
		*(GPIOC_BSRR ) |= (1 << BSRR_R_2_BF );
 8001940:	4a36      	ldr	r2, [pc, #216]	; (8001a1c <kpad_read+0x220>)
 8001942:	4b36      	ldr	r3, [pc, #216]	; (8001a1c <kpad_read+0x220>)
 8001944:	681b      	ldr	r3, [r3, #0]
 8001946:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800194a:	6013      	str	r3, [r2, #0]
		*(GPIOC_PUPDR ) &= ~(0x3 << PUPDR_2_BF );
 800194c:	4a31      	ldr	r2, [pc, #196]	; (8001a14 <kpad_read+0x218>)
 800194e:	4b31      	ldr	r3, [pc, #196]	; (8001a14 <kpad_read+0x218>)
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8001956:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) &= ~(0x3 << MODER_2_BF );
 8001958:	4a2f      	ldr	r2, [pc, #188]	; (8001a18 <kpad_read+0x21c>)
 800195a:	4b2f      	ldr	r3, [pc, #188]	; (8001a18 <kpad_read+0x21c>)
 800195c:	681b      	ldr	r3, [r3, #0]
 800195e:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8001962:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) |= (GPIO_OUTPUT << MODER_2_BF );
 8001964:	4a2c      	ldr	r2, [pc, #176]	; (8001a18 <kpad_read+0x21c>)
 8001966:	4b2c      	ldr	r3, [pc, #176]	; (8001a18 <kpad_read+0x21c>)
 8001968:	681b      	ldr	r3, [r3, #0]
 800196a:	f043 0310 	orr.w	r3, r3, #16
 800196e:	6013      	str	r3, [r2, #0]
		*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_2_BF );
 8001970:	4a28      	ldr	r2, [pc, #160]	; (8001a14 <kpad_read+0x218>)
 8001972:	4b28      	ldr	r3, [pc, #160]	; (8001a14 <kpad_read+0x218>)
 8001974:	681b      	ldr	r3, [r3, #0]
 8001976:	f043 0320 	orr.w	r3, r3, #32
 800197a:	6013      	str	r3, [r2, #0]
	}

	if (readValue < 0) {
 800197c:	687b      	ldr	r3, [r7, #4]
 800197e:	2b00      	cmp	r3, #0
 8001980:	da3a      	bge.n	80019f8 <kpad_read+0x1fc>
		// pull column 4 high
		*(GPIOC_PUPDR ) &= ~(0x3 << PUPDR_3_BF );
 8001982:	4a24      	ldr	r2, [pc, #144]	; (8001a14 <kpad_read+0x218>)
 8001984:	4b23      	ldr	r3, [pc, #140]	; (8001a14 <kpad_read+0x218>)
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800198c:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) &= ~(0x3 << MODER_3_BF );
 800198e:	4a22      	ldr	r2, [pc, #136]	; (8001a18 <kpad_read+0x21c>)
 8001990:	4b21      	ldr	r3, [pc, #132]	; (8001a18 <kpad_read+0x21c>)
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8001998:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) |= (GPIO_OUTPUT << MODER_3_BF );
 800199a:	4a1f      	ldr	r2, [pc, #124]	; (8001a18 <kpad_read+0x21c>)
 800199c:	4b1e      	ldr	r3, [pc, #120]	; (8001a18 <kpad_read+0x21c>)
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80019a4:	6013      	str	r3, [r2, #0]
		*(GPIOC_BSRR ) |= (1 << BSRR_S_3_BF );
 80019a6:	4a1d      	ldr	r2, [pc, #116]	; (8001a1c <kpad_read+0x220>)
 80019a8:	4b1c      	ldr	r3, [pc, #112]	; (8001a1c <kpad_read+0x220>)
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	f043 0308 	orr.w	r3, r3, #8
 80019b0:	6013      	str	r3, [r2, #0]
		//scan through the rows to find if one is pressed
		readValue = 4 * (row_scan() - 1) + 4;
 80019b2:	f7ff fe89 	bl	80016c8 <row_scan>
 80019b6:	4603      	mov	r3, r0
 80019b8:	009b      	lsls	r3, r3, #2
 80019ba:	607b      	str	r3, [r7, #4]
		//if(readValue < 0){return 0;}
		// pull column 4 low again
		*(GPIOC_BSRR ) |= (1 << BSRR_R_3_BF );
 80019bc:	4a17      	ldr	r2, [pc, #92]	; (8001a1c <kpad_read+0x220>)
 80019be:	4b17      	ldr	r3, [pc, #92]	; (8001a1c <kpad_read+0x220>)
 80019c0:	681b      	ldr	r3, [r3, #0]
 80019c2:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80019c6:	6013      	str	r3, [r2, #0]
		*(GPIOC_PUPDR ) &= ~(0x3 << PUPDR_3_BF );
 80019c8:	4a12      	ldr	r2, [pc, #72]	; (8001a14 <kpad_read+0x218>)
 80019ca:	4b12      	ldr	r3, [pc, #72]	; (8001a14 <kpad_read+0x218>)
 80019cc:	681b      	ldr	r3, [r3, #0]
 80019ce:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80019d2:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) &= ~(0x3 << MODER_3_BF );
 80019d4:	4a10      	ldr	r2, [pc, #64]	; (8001a18 <kpad_read+0x21c>)
 80019d6:	4b10      	ldr	r3, [pc, #64]	; (8001a18 <kpad_read+0x21c>)
 80019d8:	681b      	ldr	r3, [r3, #0]
 80019da:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80019de:	6013      	str	r3, [r2, #0]
		*(GPIOC_MODER ) |= (GPIO_OUTPUT << MODER_3_BF );
 80019e0:	4a0d      	ldr	r2, [pc, #52]	; (8001a18 <kpad_read+0x21c>)
 80019e2:	4b0d      	ldr	r3, [pc, #52]	; (8001a18 <kpad_read+0x21c>)
 80019e4:	681b      	ldr	r3, [r3, #0]
 80019e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80019ea:	6013      	str	r3, [r2, #0]
		*(GPIOC_PUPDR ) |= (GPIO_PULLDOWN << PUPDR_3_BF );
 80019ec:	4a09      	ldr	r2, [pc, #36]	; (8001a14 <kpad_read+0x218>)
 80019ee:	4b09      	ldr	r3, [pc, #36]	; (8001a14 <kpad_read+0x218>)
 80019f0:	681b      	ldr	r3, [r3, #0]
 80019f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80019f6:	6013      	str	r3, [r2, #0]
	}

	if (readValue < 0) {
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	da01      	bge.n	8001a02 <kpad_read+0x206>
		readValue = 0;
 80019fe:	2300      	movs	r3, #0
 8001a00:	607b      	str	r3, [r7, #4]
	}
	return map(readValue);
 8001a02:	6878      	ldr	r0, [r7, #4]
 8001a04:	f7ff fe94 	bl	8001730 <map>
 8001a08:	4603      	mov	r3, r0

}
 8001a0a:	4618      	mov	r0, r3
 8001a0c:	3708      	adds	r7, #8
 8001a0e:	46bd      	mov	sp, r7
 8001a10:	bd80      	pop	{r7, pc}
 8001a12:	bf00      	nop
 8001a14:	4002080c 	.word	0x4002080c
 8001a18:	40020800 	.word	0x40020800
 8001a1c:	40020818 	.word	0x40020818

08001a20 <kpad_poll>:


int kpad_poll() {
 8001a20:	b580      	push	{r7, lr}
 8001a22:	b082      	sub	sp, #8
 8001a24:	af00      	add	r7, sp, #0
	int key;
	do {
		key = kpad_read();
 8001a26:	f7ff fee9 	bl	80017fc <kpad_read>
 8001a2a:	6078      	str	r0, [r7, #4]
	} while (key == -1);
 8001a2c:	687b      	ldr	r3, [r7, #4]
 8001a2e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001a32:	d0f8      	beq.n	8001a26 <kpad_poll+0x6>
	return key;
 8001a34:	687b      	ldr	r3, [r7, #4]
}
 8001a36:	4618      	mov	r0, r3
 8001a38:	3708      	adds	r7, #8
 8001a3a:	46bd      	mov	sp, r7
 8001a3c:	bd80      	pop	{r7, pc}
	...

08001a40 <lcd_latchE>:
typedef uint8_t bool;
#ifndef DELAY_H_
#include "delay.h"
#endif

void lcd_latchE(){
 8001a40:	b580      	push	{r7, lr}
 8001a42:	af00      	add	r7, sp, #0
	//set PB2 (E) high
	*(GPIOB_BSRR) |= (1 << BSRR_S_2_BF);
 8001a44:	4a08      	ldr	r2, [pc, #32]	; (8001a68 <lcd_latchE+0x28>)
 8001a46:	4b08      	ldr	r3, [pc, #32]	; (8001a68 <lcd_latchE+0x28>)
 8001a48:	681b      	ldr	r3, [r3, #0]
 8001a4a:	f043 0304 	orr.w	r3, r3, #4
 8001a4e:	6013      	str	r3, [r2, #0]
	//delay to latch data
	delay(5);
 8001a50:	2005      	movs	r0, #5
 8001a52:	f7ff fc59 	bl	8001308 <delay>
	//return PB2 (E) low
	*(GPIOB_BSRR) |= (1 << BSRR_R_2_BF);
 8001a56:	4a04      	ldr	r2, [pc, #16]	; (8001a68 <lcd_latchE+0x28>)
 8001a58:	4b03      	ldr	r3, [pc, #12]	; (8001a68 <lcd_latchE+0x28>)
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001a60:	6013      	str	r3, [r2, #0]
}
 8001a62:	bf00      	nop
 8001a64:	bd80      	pop	{r7, pc}
 8001a66:	bf00      	nop
 8001a68:	40020418 	.word	0x40020418

08001a6c <lcd_isBusy>:

int lcd_isBusy(){
 8001a6c:	b480      	push	{r7}
 8001a6e:	b083      	sub	sp, #12
 8001a70:	af00      	add	r7, sp, #0
	int busyFlag;
	int odr_val = (*(GPIOB_ODR) & 3);
 8001a72:	4b1e      	ldr	r3, [pc, #120]	; (8001aec <lcd_isBusy+0x80>)
 8001a74:	681b      	ldr	r3, [r3, #0]
 8001a76:	f003 0303 	and.w	r3, r3, #3
 8001a7a:	607b      	str	r3, [r7, #4]
	//set PB1 high (RW)
	*(GPIOB_ODR) |= (0x1 << 1);
 8001a7c:	4a1b      	ldr	r2, [pc, #108]	; (8001aec <lcd_isBusy+0x80>)
 8001a7e:	4b1b      	ldr	r3, [pc, #108]	; (8001aec <lcd_isBusy+0x80>)
 8001a80:	681b      	ldr	r3, [r3, #0]
 8001a82:	f043 0302 	orr.w	r3, r3, #2
 8001a86:	6013      	str	r3, [r2, #0]
	//set PB0 low (RS)
	*(GPIOB_ODR) &= ~(0x1 << 0);
 8001a88:	4a18      	ldr	r2, [pc, #96]	; (8001aec <lcd_isBusy+0x80>)
 8001a8a:	4b18      	ldr	r3, [pc, #96]	; (8001aec <lcd_isBusy+0x80>)
 8001a8c:	681b      	ldr	r3, [r3, #0]
 8001a8e:	f023 0301 	bic.w	r3, r3, #1
 8001a92:	6013      	str	r3, [r2, #0]

	//set PC11 to input mode
	//clear the BitField
	*(GPIOC_MODER) &= ~(GPIO_INPUT << MODER_11_BF);
 8001a94:	4a16      	ldr	r2, [pc, #88]	; (8001af0 <lcd_isBusy+0x84>)
 8001a96:	4b16      	ldr	r3, [pc, #88]	; (8001af0 <lcd_isBusy+0x84>)
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	6013      	str	r3, [r2, #0]
	//set the BitField
	*(GPIOC_MODER) |= (GPIO_INPUT << MODER_11_BF);
 8001a9c:	4a14      	ldr	r2, [pc, #80]	; (8001af0 <lcd_isBusy+0x84>)
 8001a9e:	4b14      	ldr	r3, [pc, #80]	; (8001af0 <lcd_isBusy+0x84>)
 8001aa0:	681b      	ldr	r3, [r3, #0]
 8001aa2:	6013      	str	r3, [r2, #0]

	//save the value of the IDR
	busyFlag = (*(GPIOC_IDR) >> MODER_11_BF) & (0x1);
 8001aa4:	4b13      	ldr	r3, [pc, #76]	; (8001af4 <lcd_isBusy+0x88>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
 8001aa8:	0d9b      	lsrs	r3, r3, #22
 8001aaa:	f003 0301 	and.w	r3, r3, #1
 8001aae:	603b      	str	r3, [r7, #0]

	//return PC11 to Output Mode
	//clear the BitField
	*(GPIOC_MODER) &= ~(GPIO_INPUT << MODER_11_BF);
 8001ab0:	4a0f      	ldr	r2, [pc, #60]	; (8001af0 <lcd_isBusy+0x84>)
 8001ab2:	4b0f      	ldr	r3, [pc, #60]	; (8001af0 <lcd_isBusy+0x84>)
 8001ab4:	681b      	ldr	r3, [r3, #0]
 8001ab6:	6013      	str	r3, [r2, #0]
	//set the BitField
	*(GPIOC_MODER) |= (GPIO_OUTPUT << MODER_11_BF);
 8001ab8:	4a0d      	ldr	r2, [pc, #52]	; (8001af0 <lcd_isBusy+0x84>)
 8001aba:	4b0d      	ldr	r3, [pc, #52]	; (8001af0 <lcd_isBusy+0x84>)
 8001abc:	681b      	ldr	r3, [r3, #0]
 8001abe:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001ac2:	6013      	str	r3, [r2, #0]

	//return RS and RW to previous values
	*(GPIOB_ODR) &= ~(3);
 8001ac4:	4a09      	ldr	r2, [pc, #36]	; (8001aec <lcd_isBusy+0x80>)
 8001ac6:	4b09      	ldr	r3, [pc, #36]	; (8001aec <lcd_isBusy+0x80>)
 8001ac8:	681b      	ldr	r3, [r3, #0]
 8001aca:	f023 0303 	bic.w	r3, r3, #3
 8001ace:	6013      	str	r3, [r2, #0]
	*(GPIOB_ODR) |= odr_val;
 8001ad0:	4906      	ldr	r1, [pc, #24]	; (8001aec <lcd_isBusy+0x80>)
 8001ad2:	4b06      	ldr	r3, [pc, #24]	; (8001aec <lcd_isBusy+0x80>)
 8001ad4:	681a      	ldr	r2, [r3, #0]
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	4313      	orrs	r3, r2
 8001ada:	600b      	str	r3, [r1, #0]

	return busyFlag;
 8001adc:	683b      	ldr	r3, [r7, #0]
}
 8001ade:	4618      	mov	r0, r3
 8001ae0:	370c      	adds	r7, #12
 8001ae2:	46bd      	mov	sp, r7
 8001ae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ae8:	4770      	bx	lr
 8001aea:	bf00      	nop
 8001aec:	40020414 	.word	0x40020414
 8001af0:	40020800 	.word	0x40020800
 8001af4:	40020810 	.word	0x40020810

08001af8 <lcd_send>:

void lcd_send(uint8_t command, bool r_w, bool rs ){
 8001af8:	b580      	push	{r7, lr}
 8001afa:	b084      	sub	sp, #16
 8001afc:	af00      	add	r7, sp, #0
 8001afe:	4603      	mov	r3, r0
 8001b00:	71fb      	strb	r3, [r7, #7]
 8001b02:	460b      	mov	r3, r1
 8001b04:	71bb      	strb	r3, [r7, #6]
 8001b06:	4613      	mov	r3, r2
 8001b08:	717b      	strb	r3, [r7, #5]
	//clear all dataBits to avoid stray bits
	*(GPIOC_BSRR) |= (1 << BSRR_R_11_BF);
 8001b0a:	4a3c      	ldr	r2, [pc, #240]	; (8001bfc <lcd_send+0x104>)
 8001b0c:	4b3b      	ldr	r3, [pc, #236]	; (8001bfc <lcd_send+0x104>)
 8001b0e:	681b      	ldr	r3, [r3, #0]
 8001b10:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8001b14:	6013      	str	r3, [r2, #0]
	*(GPIOC_BSRR) |= (1 << BSRR_R_10_BF);
 8001b16:	4a39      	ldr	r2, [pc, #228]	; (8001bfc <lcd_send+0x104>)
 8001b18:	4b38      	ldr	r3, [pc, #224]	; (8001bfc <lcd_send+0x104>)
 8001b1a:	681b      	ldr	r3, [r3, #0]
 8001b1c:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001b20:	6013      	str	r3, [r2, #0]
	*(GPIOC_BSRR) |= (1 << BSRR_R_9_BF);
 8001b22:	4a36      	ldr	r2, [pc, #216]	; (8001bfc <lcd_send+0x104>)
 8001b24:	4b35      	ldr	r3, [pc, #212]	; (8001bfc <lcd_send+0x104>)
 8001b26:	681b      	ldr	r3, [r3, #0]
 8001b28:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001b2c:	6013      	str	r3, [r2, #0]
	*(GPIOC_BSRR) |= (1 << BSRR_R_8_BF);
 8001b2e:	4a33      	ldr	r2, [pc, #204]	; (8001bfc <lcd_send+0x104>)
 8001b30:	4b32      	ldr	r3, [pc, #200]	; (8001bfc <lcd_send+0x104>)
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001b38:	6013      	str	r3, [r2, #0]
	*(GPIOB_BSRR) |= (1 << BSRR_R_1_BF);
 8001b3a:	4a31      	ldr	r2, [pc, #196]	; (8001c00 <lcd_send+0x108>)
 8001b3c:	4b30      	ldr	r3, [pc, #192]	; (8001c00 <lcd_send+0x108>)
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001b44:	6013      	str	r3, [r2, #0]
	*(GPIOB_BSRR) |= (1 << BSRR_R_0_BF);
 8001b46:	4a2e      	ldr	r2, [pc, #184]	; (8001c00 <lcd_send+0x108>)
 8001b48:	4b2d      	ldr	r3, [pc, #180]	; (8001c00 <lcd_send+0x108>)
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001b50:	6013      	str	r3, [r2, #0]

	//move the lower 4 bytes onto the GPIO pins Port C 11..8
	if(r_w > 0){
 8001b52:	79bb      	ldrb	r3, [r7, #6]
 8001b54:	2b00      	cmp	r3, #0
 8001b56:	d006      	beq.n	8001b66 <lcd_send+0x6e>
		//if r_w > 0 set R/W pin HIGH else set LOW
		*(GPIOB_BSRR) |= 1 << BSRR_S_1_BF;
 8001b58:	4a29      	ldr	r2, [pc, #164]	; (8001c00 <lcd_send+0x108>)
 8001b5a:	4b29      	ldr	r3, [pc, #164]	; (8001c00 <lcd_send+0x108>)
 8001b5c:	681b      	ldr	r3, [r3, #0]
 8001b5e:	f043 0302 	orr.w	r3, r3, #2
 8001b62:	6013      	str	r3, [r2, #0]
 8001b64:	e005      	b.n	8001b72 <lcd_send+0x7a>
	}else{
		*(GPIOB_BSRR) |= 1 << BSRR_R_1_BF;
 8001b66:	4a26      	ldr	r2, [pc, #152]	; (8001c00 <lcd_send+0x108>)
 8001b68:	4b25      	ldr	r3, [pc, #148]	; (8001c00 <lcd_send+0x108>)
 8001b6a:	681b      	ldr	r3, [r3, #0]
 8001b6c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001b70:	6013      	str	r3, [r2, #0]
	}

	if(rs > 0){
 8001b72:	797b      	ldrb	r3, [r7, #5]
 8001b74:	2b00      	cmp	r3, #0
 8001b76:	d006      	beq.n	8001b86 <lcd_send+0x8e>
		//if rs > 0 set R/W pin HIGH else set LOW
		*(GPIOB_BSRR) |= 1 << BSRR_S_0_BF;
 8001b78:	4a21      	ldr	r2, [pc, #132]	; (8001c00 <lcd_send+0x108>)
 8001b7a:	4b21      	ldr	r3, [pc, #132]	; (8001c00 <lcd_send+0x108>)
 8001b7c:	681b      	ldr	r3, [r3, #0]
 8001b7e:	f043 0301 	orr.w	r3, r3, #1
 8001b82:	6013      	str	r3, [r2, #0]
 8001b84:	e005      	b.n	8001b92 <lcd_send+0x9a>
	}else{
		*(GPIOB_BSRR) |= 1 << BSRR_R_0_BF;
 8001b86:	4a1e      	ldr	r2, [pc, #120]	; (8001c00 <lcd_send+0x108>)
 8001b88:	4b1d      	ldr	r3, [pc, #116]	; (8001c00 <lcd_send+0x108>)
 8001b8a:	681b      	ldr	r3, [r3, #0]
 8001b8c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001b90:	6013      	str	r3, [r2, #0]
	}


	uint8_t l_nibble = (command & 0x0f);
 8001b92:	79fb      	ldrb	r3, [r7, #7]
 8001b94:	f003 030f 	and.w	r3, r3, #15
 8001b98:	73fb      	strb	r3, [r7, #15]
	uint8_t u_nibble = (command >> 4);
 8001b9a:	79fb      	ldrb	r3, [r7, #7]
 8001b9c:	091b      	lsrs	r3, r3, #4
 8001b9e:	73bb      	strb	r3, [r7, #14]

	//clear the bits
	*(GPIOC_BSRR) |= 0xf << (8 + 16);
 8001ba0:	4a16      	ldr	r2, [pc, #88]	; (8001bfc <lcd_send+0x104>)
 8001ba2:	4b16      	ldr	r3, [pc, #88]	; (8001bfc <lcd_send+0x104>)
 8001ba4:	681b      	ldr	r3, [r3, #0]
 8001ba6:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8001baa:	6013      	str	r3, [r2, #0]
	//set the bits for the lower nibble
	*(GPIOC_BSRR) |= u_nibble << 8;
 8001bac:	4913      	ldr	r1, [pc, #76]	; (8001bfc <lcd_send+0x104>)
 8001bae:	4b13      	ldr	r3, [pc, #76]	; (8001bfc <lcd_send+0x104>)
 8001bb0:	681b      	ldr	r3, [r3, #0]
 8001bb2:	7bba      	ldrb	r2, [r7, #14]
 8001bb4:	0212      	lsls	r2, r2, #8
 8001bb6:	4313      	orrs	r3, r2
 8001bb8:	600b      	str	r3, [r1, #0]

	while(lcd_isBusy() == true){}
 8001bba:	bf00      	nop
 8001bbc:	f7ff ff56 	bl	8001a6c <lcd_isBusy>
 8001bc0:	4603      	mov	r3, r0
 8001bc2:	2b01      	cmp	r3, #1
 8001bc4:	d0fa      	beq.n	8001bbc <lcd_send+0xc4>
	lcd_latchE();
 8001bc6:	f7ff ff3b 	bl	8001a40 <lcd_latchE>


	//clear the bits
	*(GPIOC_BSRR) |= 0xf << (8 + 16);
 8001bca:	4a0c      	ldr	r2, [pc, #48]	; (8001bfc <lcd_send+0x104>)
 8001bcc:	4b0b      	ldr	r3, [pc, #44]	; (8001bfc <lcd_send+0x104>)
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8001bd4:	6013      	str	r3, [r2, #0]
	//set the bits for the upper nibble
	*(GPIOC_ODR) |= l_nibble << 8;
 8001bd6:	490b      	ldr	r1, [pc, #44]	; (8001c04 <lcd_send+0x10c>)
 8001bd8:	4b0a      	ldr	r3, [pc, #40]	; (8001c04 <lcd_send+0x10c>)
 8001bda:	681b      	ldr	r3, [r3, #0]
 8001bdc:	7bfa      	ldrb	r2, [r7, #15]
 8001bde:	0212      	lsls	r2, r2, #8
 8001be0:	4313      	orrs	r3, r2
 8001be2:	600b      	str	r3, [r1, #0]
	while(lcd_isBusy() == true){}
 8001be4:	bf00      	nop
 8001be6:	f7ff ff41 	bl	8001a6c <lcd_isBusy>
 8001bea:	4603      	mov	r3, r0
 8001bec:	2b01      	cmp	r3, #1
 8001bee:	d0fa      	beq.n	8001be6 <lcd_send+0xee>
	lcd_latchE();
 8001bf0:	f7ff ff26 	bl	8001a40 <lcd_latchE>
}
 8001bf4:	bf00      	nop
 8001bf6:	3710      	adds	r7, #16
 8001bf8:	46bd      	mov	sp, r7
 8001bfa:	bd80      	pop	{r7, pc}
 8001bfc:	40020818 	.word	0x40020818
 8001c00:	40020418 	.word	0x40020418
 8001c04:	40020814 	.word	0x40020814

08001c08 <lcd_command>:

void lcd_command(uint8_t command){
 8001c08:	b580      	push	{r7, lr}
 8001c0a:	b082      	sub	sp, #8
 8001c0c:	af00      	add	r7, sp, #0
 8001c0e:	4603      	mov	r3, r0
 8001c10:	71fb      	strb	r3, [r7, #7]
	lcd_send(command, false, false);
 8001c12:	79fb      	ldrb	r3, [r7, #7]
 8001c14:	2200      	movs	r2, #0
 8001c16:	2100      	movs	r1, #0
 8001c18:	4618      	mov	r0, r3
 8001c1a:	f7ff ff6d 	bl	8001af8 <lcd_send>
}
 8001c1e:	bf00      	nop
 8001c20:	3708      	adds	r7, #8
 8001c22:	46bd      	mov	sp, r7
 8001c24:	bd80      	pop	{r7, pc}
	...

08001c28 <lcd_begin>:

void lcd_begin(){
 8001c28:	b580      	push	{r7, lr}
 8001c2a:	b082      	sub	sp, #8
 8001c2c:	af00      	add	r7, sp, #0
	//enable the gpio ports
	*(RCC_AHB1ENR) |= (1 << GPIOAEN_BF);
 8001c2e:	4a5f      	ldr	r2, [pc, #380]	; (8001dac <lcd_begin+0x184>)
 8001c30:	4b5e      	ldr	r3, [pc, #376]	; (8001dac <lcd_begin+0x184>)
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	f043 0301 	orr.w	r3, r3, #1
 8001c38:	6013      	str	r3, [r2, #0]
	*(RCC_AHB1ENR) |= (1 << GPIOBEN_BF);
 8001c3a:	4a5c      	ldr	r2, [pc, #368]	; (8001dac <lcd_begin+0x184>)
 8001c3c:	4b5b      	ldr	r3, [pc, #364]	; (8001dac <lcd_begin+0x184>)
 8001c3e:	681b      	ldr	r3, [r3, #0]
 8001c40:	f043 0302 	orr.w	r3, r3, #2
 8001c44:	6013      	str	r3, [r2, #0]
	*(RCC_AHB1ENR) |= (1 << GPIOCEN_BF);
 8001c46:	4a59      	ldr	r2, [pc, #356]	; (8001dac <lcd_begin+0x184>)
 8001c48:	4b58      	ldr	r3, [pc, #352]	; (8001dac <lcd_begin+0x184>)
 8001c4a:	681b      	ldr	r3, [r3, #0]
 8001c4c:	f043 0304 	orr.w	r3, r3, #4
 8001c50:	6013      	str	r3, [r2, #0]

	//set the LCD gpio's to output mode
	//clear the gpio bit fields to 0 (input);
	*(GPIOB_MODER) &= ~(0b11 << MODER_0_BF);
 8001c52:	4a57      	ldr	r2, [pc, #348]	; (8001db0 <lcd_begin+0x188>)
 8001c54:	4b56      	ldr	r3, [pc, #344]	; (8001db0 <lcd_begin+0x188>)
 8001c56:	681b      	ldr	r3, [r3, #0]
 8001c58:	f023 0303 	bic.w	r3, r3, #3
 8001c5c:	6013      	str	r3, [r2, #0]
	*(GPIOB_MODER) &= ~(0b11 << MODER_1_BF);
 8001c5e:	4a54      	ldr	r2, [pc, #336]	; (8001db0 <lcd_begin+0x188>)
 8001c60:	4b53      	ldr	r3, [pc, #332]	; (8001db0 <lcd_begin+0x188>)
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	f023 030c 	bic.w	r3, r3, #12
 8001c68:	6013      	str	r3, [r2, #0]
	*(GPIOB_MODER) &= ~(0b11 << MODER_2_BF);
 8001c6a:	4a51      	ldr	r2, [pc, #324]	; (8001db0 <lcd_begin+0x188>)
 8001c6c:	4b50      	ldr	r3, [pc, #320]	; (8001db0 <lcd_begin+0x188>)
 8001c6e:	681b      	ldr	r3, [r3, #0]
 8001c70:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8001c74:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER) &= ~(0b11 << MODER_8_BF);
 8001c76:	4a4f      	ldr	r2, [pc, #316]	; (8001db4 <lcd_begin+0x18c>)
 8001c78:	4b4e      	ldr	r3, [pc, #312]	; (8001db4 <lcd_begin+0x18c>)
 8001c7a:	681b      	ldr	r3, [r3, #0]
 8001c7c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001c80:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER) &= ~(0b11 << MODER_9_BF);
 8001c82:	4a4c      	ldr	r2, [pc, #304]	; (8001db4 <lcd_begin+0x18c>)
 8001c84:	4b4b      	ldr	r3, [pc, #300]	; (8001db4 <lcd_begin+0x18c>)
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 8001c8c:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER) &= ~(0b11 << MODER_10_BF);
 8001c8e:	4a49      	ldr	r2, [pc, #292]	; (8001db4 <lcd_begin+0x18c>)
 8001c90:	4b48      	ldr	r3, [pc, #288]	; (8001db4 <lcd_begin+0x18c>)
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8001c98:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER) &= ~(0b11 << MODER_11_BF);
 8001c9a:	4a46      	ldr	r2, [pc, #280]	; (8001db4 <lcd_begin+0x18c>)
 8001c9c:	4b45      	ldr	r3, [pc, #276]	; (8001db4 <lcd_begin+0x18c>)
 8001c9e:	681b      	ldr	r3, [r3, #0]
 8001ca0:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8001ca4:	6013      	str	r3, [r2, #0]
	//set the gpios to output mode
	*(GPIOB_MODER) |= (GPIO_OUTPUT << MODER_0_BF);
 8001ca6:	4a42      	ldr	r2, [pc, #264]	; (8001db0 <lcd_begin+0x188>)
 8001ca8:	4b41      	ldr	r3, [pc, #260]	; (8001db0 <lcd_begin+0x188>)
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	f043 0301 	orr.w	r3, r3, #1
 8001cb0:	6013      	str	r3, [r2, #0]
	*(GPIOB_MODER) |= (GPIO_OUTPUT << MODER_1_BF);
 8001cb2:	4a3f      	ldr	r2, [pc, #252]	; (8001db0 <lcd_begin+0x188>)
 8001cb4:	4b3e      	ldr	r3, [pc, #248]	; (8001db0 <lcd_begin+0x188>)
 8001cb6:	681b      	ldr	r3, [r3, #0]
 8001cb8:	f043 0304 	orr.w	r3, r3, #4
 8001cbc:	6013      	str	r3, [r2, #0]
	*(GPIOB_MODER) |= (GPIO_OUTPUT << MODER_2_BF);
 8001cbe:	4a3c      	ldr	r2, [pc, #240]	; (8001db0 <lcd_begin+0x188>)
 8001cc0:	4b3b      	ldr	r3, [pc, #236]	; (8001db0 <lcd_begin+0x188>)
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	f043 0310 	orr.w	r3, r3, #16
 8001cc8:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER) |= (GPIO_OUTPUT << MODER_8_BF);
 8001cca:	4a3a      	ldr	r2, [pc, #232]	; (8001db4 <lcd_begin+0x18c>)
 8001ccc:	4b39      	ldr	r3, [pc, #228]	; (8001db4 <lcd_begin+0x18c>)
 8001cce:	681b      	ldr	r3, [r3, #0]
 8001cd0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001cd4:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER) |= (GPIO_OUTPUT << MODER_9_BF);
 8001cd6:	4a37      	ldr	r2, [pc, #220]	; (8001db4 <lcd_begin+0x18c>)
 8001cd8:	4b36      	ldr	r3, [pc, #216]	; (8001db4 <lcd_begin+0x18c>)
 8001cda:	681b      	ldr	r3, [r3, #0]
 8001cdc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001ce0:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER) |= (GPIO_OUTPUT << MODER_10_BF);
 8001ce2:	4a34      	ldr	r2, [pc, #208]	; (8001db4 <lcd_begin+0x18c>)
 8001ce4:	4b33      	ldr	r3, [pc, #204]	; (8001db4 <lcd_begin+0x18c>)
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001cec:	6013      	str	r3, [r2, #0]
	*(GPIOC_MODER) |= (GPIO_OUTPUT << MODER_11_BF);
 8001cee:	4a31      	ldr	r2, [pc, #196]	; (8001db4 <lcd_begin+0x18c>)
 8001cf0:	4b30      	ldr	r3, [pc, #192]	; (8001db4 <lcd_begin+0x18c>)
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001cf8:	6013      	str	r3, [r2, #0]

	//SET E LOW
	*(GPIOB_BSRR) |= (1 << BSRR_R_2_BF);
 8001cfa:	4a2f      	ldr	r2, [pc, #188]	; (8001db8 <lcd_begin+0x190>)
 8001cfc:	4b2e      	ldr	r3, [pc, #184]	; (8001db8 <lcd_begin+0x190>)
 8001cfe:	681b      	ldr	r3, [r3, #0]
 8001d00:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001d04:	6013      	str	r3, [r2, #0]
	//set RS and RW low
	*(GPIOB_BSRR) |= (1 << BSRR_R_1_BF);
 8001d06:	4a2c      	ldr	r2, [pc, #176]	; (8001db8 <lcd_begin+0x190>)
 8001d08:	4b2b      	ldr	r3, [pc, #172]	; (8001db8 <lcd_begin+0x190>)
 8001d0a:	681b      	ldr	r3, [r3, #0]
 8001d0c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001d10:	6013      	str	r3, [r2, #0]
	*(GPIOB_BSRR) |= (1 << BSRR_R_0_BF);
 8001d12:	4a29      	ldr	r2, [pc, #164]	; (8001db8 <lcd_begin+0x190>)
 8001d14:	4b28      	ldr	r3, [pc, #160]	; (8001db8 <lcd_begin+0x190>)
 8001d16:	681b      	ldr	r3, [r3, #0]
 8001d18:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001d1c:	6013      	str	r3, [r2, #0]
	//delay 100 ms
	delay(100);
 8001d1e:	2064      	movs	r0, #100	; 0x64
 8001d20:	f7ff faf2 	bl	8001308 <delay>

	//set D7-D4 to 0b0011
	*(GPIOC_BSRR) |= (1 << BSRR_R_11_BF);
 8001d24:	4a25      	ldr	r2, [pc, #148]	; (8001dbc <lcd_begin+0x194>)
 8001d26:	4b25      	ldr	r3, [pc, #148]	; (8001dbc <lcd_begin+0x194>)
 8001d28:	681b      	ldr	r3, [r3, #0]
 8001d2a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8001d2e:	6013      	str	r3, [r2, #0]
	*(GPIOC_BSRR) |= (1 << BSRR_R_10_BF);
 8001d30:	4a22      	ldr	r2, [pc, #136]	; (8001dbc <lcd_begin+0x194>)
 8001d32:	4b22      	ldr	r3, [pc, #136]	; (8001dbc <lcd_begin+0x194>)
 8001d34:	681b      	ldr	r3, [r3, #0]
 8001d36:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001d3a:	6013      	str	r3, [r2, #0]
	*(GPIOC_BSRR) |= (1 << BSRR_S_9_BF);
 8001d3c:	4a1f      	ldr	r2, [pc, #124]	; (8001dbc <lcd_begin+0x194>)
 8001d3e:	4b1f      	ldr	r3, [pc, #124]	; (8001dbc <lcd_begin+0x194>)
 8001d40:	681b      	ldr	r3, [r3, #0]
 8001d42:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001d46:	6013      	str	r3, [r2, #0]
	*(GPIOC_BSRR) |= (1 << BSRR_S_8_BF);
 8001d48:	4a1c      	ldr	r2, [pc, #112]	; (8001dbc <lcd_begin+0x194>)
 8001d4a:	4b1c      	ldr	r3, [pc, #112]	; (8001dbc <lcd_begin+0x194>)
 8001d4c:	681b      	ldr	r3, [r3, #0]
 8001d4e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001d52:	6013      	str	r3, [r2, #0]

	//Delay 30 ms
	delay(30);
 8001d54:	201e      	movs	r0, #30
 8001d56:	f7ff fad7 	bl	8001308 <delay>

	// 3 times
	for(int x = 0; x < 3; x++){
 8001d5a:	2300      	movs	r3, #0
 8001d5c:	607b      	str	r3, [r7, #4]
 8001d5e:	e007      	b.n	8001d70 <lcd_begin+0x148>
		//pulse E HIGH for 1 ms
		lcd_latchE();
 8001d60:	f7ff fe6e 	bl	8001a40 <lcd_latchE>
		//Delay 10 ms
		delay(10);
 8001d64:	200a      	movs	r0, #10
 8001d66:	f7ff facf 	bl	8001308 <delay>
	for(int x = 0; x < 3; x++){
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	3301      	adds	r3, #1
 8001d6e:	607b      	str	r3, [r7, #4]
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	2b02      	cmp	r3, #2
 8001d74:	ddf4      	ble.n	8001d60 <lcd_begin+0x138>
	}

	//set D7-D4 to 0b0010
	*(GPIOC_BSRR) |= (1 << BSRR_R_8_BF);
 8001d76:	4a11      	ldr	r2, [pc, #68]	; (8001dbc <lcd_begin+0x194>)
 8001d78:	4b10      	ldr	r3, [pc, #64]	; (8001dbc <lcd_begin+0x194>)
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001d80:	6013      	str	r3, [r2, #0]

	//pulse E HIGH for 1 ms
	lcd_latchE();
 8001d82:	f7ff fe5d 	bl	8001a40 <lcd_latchE>

	//write 0x28 set interface to 4 bit mode, 2 lines, 5x8 font size
	lcd_command(0x28);
 8001d86:	2028      	movs	r0, #40	; 0x28
 8001d88:	f7ff ff3e 	bl	8001c08 <lcd_command>
	//write 0x10 set cursor mode to left
	lcd_command(0x10);
 8001d8c:	2010      	movs	r0, #16
 8001d8e:	f7ff ff3b 	bl	8001c08 <lcd_command>
	//write 0x0f set display on with the cursor on and blinking
	lcd_command(0x0f);
 8001d92:	200f      	movs	r0, #15
 8001d94:	f7ff ff38 	bl	8001c08 <lcd_command>
	//write 0x06 increment the cursor position after each write
	lcd_command(0x06);
 8001d98:	2006      	movs	r0, #6
 8001d9a:	f7ff ff35 	bl	8001c08 <lcd_command>

	lcd_clear();
 8001d9e:	f000 f81d 	bl	8001ddc <lcd_clear>

}
 8001da2:	bf00      	nop
 8001da4:	3708      	adds	r7, #8
 8001da6:	46bd      	mov	sp, r7
 8001da8:	bd80      	pop	{r7, pc}
 8001daa:	bf00      	nop
 8001dac:	40023830 	.word	0x40023830
 8001db0:	40020400 	.word	0x40020400
 8001db4:	40020800 	.word	0x40020800
 8001db8:	40020418 	.word	0x40020418
 8001dbc:	40020818 	.word	0x40020818

08001dc0 <lcd_blink>:

void lcd_noBlink(){
	lcd_command(0xe);
}

void lcd_blink(){
 8001dc0:	b580      	push	{r7, lr}
 8001dc2:	af00      	add	r7, sp, #0
	lcd_command(0xF);
 8001dc4:	200f      	movs	r0, #15
 8001dc6:	f7ff ff1f 	bl	8001c08 <lcd_command>
}
 8001dca:	bf00      	nop
 8001dcc:	bd80      	pop	{r7, pc}

08001dce <lcd_noCursor>:

void lcd_noCursor(){
 8001dce:	b580      	push	{r7, lr}
 8001dd0:	af00      	add	r7, sp, #0
	lcd_command(0xC);
 8001dd2:	200c      	movs	r0, #12
 8001dd4:	f7ff ff18 	bl	8001c08 <lcd_command>
}
 8001dd8:	bf00      	nop
 8001dda:	bd80      	pop	{r7, pc}

08001ddc <lcd_clear>:

void lcd_home(){
	lcd_command(0x2);
}

void lcd_clear(){
 8001ddc:	b580      	push	{r7, lr}
 8001dde:	af00      	add	r7, sp, #0
	lcd_command(0x1);
 8001de0:	2001      	movs	r0, #1
 8001de2:	f7ff ff11 	bl	8001c08 <lcd_command>
}
 8001de6:	bf00      	nop
 8001de8:	bd80      	pop	{r7, pc}

08001dea <lcd_cursorAt>:

void lcd_cursorAt(int row, int col){
 8001dea:	b580      	push	{r7, lr}
 8001dec:	b084      	sub	sp, #16
 8001dee:	af00      	add	r7, sp, #0
 8001df0:	6078      	str	r0, [r7, #4]
 8001df2:	6039      	str	r1, [r7, #0]
	int address = (col%0x40);
 8001df4:	683b      	ldr	r3, [r7, #0]
 8001df6:	425a      	negs	r2, r3
 8001df8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001dfc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8001e00:	bf58      	it	pl
 8001e02:	4253      	negpl	r3, r2
 8001e04:	60fb      	str	r3, [r7, #12]
	if(row%2 == 1){
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	2b00      	cmp	r3, #0
 8001e0a:	f003 0301 	and.w	r3, r3, #1
 8001e0e:	bfb8      	it	lt
 8001e10:	425b      	neglt	r3, r3
 8001e12:	2b01      	cmp	r3, #1
 8001e14:	d102      	bne.n	8001e1c <lcd_cursorAt+0x32>
		address += 0x40;
 8001e16:	68fb      	ldr	r3, [r7, #12]
 8001e18:	3340      	adds	r3, #64	; 0x40
 8001e1a:	60fb      	str	r3, [r7, #12]
	}
	lcd_command((address | 0x80));
 8001e1c:	68fb      	ldr	r3, [r7, #12]
 8001e1e:	b25b      	sxtb	r3, r3
 8001e20:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8001e24:	b25b      	sxtb	r3, r3
 8001e26:	b2db      	uxtb	r3, r3
 8001e28:	4618      	mov	r0, r3
 8001e2a:	f7ff feed 	bl	8001c08 <lcd_command>
}
 8001e2e:	bf00      	nop
 8001e30:	3710      	adds	r7, #16
 8001e32:	46bd      	mov	sp, r7
 8001e34:	bd80      	pop	{r7, pc}

08001e36 <lcd_write>:

void lcd_write(char ascii){
 8001e36:	b580      	push	{r7, lr}
 8001e38:	b082      	sub	sp, #8
 8001e3a:	af00      	add	r7, sp, #0
 8001e3c:	4603      	mov	r3, r0
 8001e3e:	71fb      	strb	r3, [r7, #7]
	lcd_send(ascii, false, true);
 8001e40:	79fb      	ldrb	r3, [r7, #7]
 8001e42:	2201      	movs	r2, #1
 8001e44:	2100      	movs	r1, #0
 8001e46:	4618      	mov	r0, r3
 8001e48:	f7ff fe56 	bl	8001af8 <lcd_send>
}
 8001e4c:	bf00      	nop
 8001e4e:	3708      	adds	r7, #8
 8001e50:	46bd      	mov	sp, r7
 8001e52:	bd80      	pop	{r7, pc}

08001e54 <lcd_print>:

void lcd_print(char *string){
 8001e54:	b580      	push	{r7, lr}
 8001e56:	b084      	sub	sp, #16
 8001e58:	af00      	add	r7, sp, #0
 8001e5a:	6078      	str	r0, [r7, #4]
	char ascii = *(string);
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	781b      	ldrb	r3, [r3, #0]
 8001e60:	73fb      	strb	r3, [r7, #15]
	while(ascii != 0){
 8001e62:	e009      	b.n	8001e78 <lcd_print+0x24>
		lcd_write(ascii);
 8001e64:	7bfb      	ldrb	r3, [r7, #15]
 8001e66:	4618      	mov	r0, r3
 8001e68:	f7ff ffe5 	bl	8001e36 <lcd_write>
		string++;
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	3301      	adds	r3, #1
 8001e70:	607b      	str	r3, [r7, #4]
		ascii = *(string);
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	781b      	ldrb	r3, [r3, #0]
 8001e76:	73fb      	strb	r3, [r7, #15]
	while(ascii != 0){
 8001e78:	7bfb      	ldrb	r3, [r7, #15]
 8001e7a:	2b00      	cmp	r3, #0
 8001e7c:	d1f2      	bne.n	8001e64 <lcd_print+0x10>
	}
}
 8001e7e:	bf00      	nop
 8001e80:	3710      	adds	r7, #16
 8001e82:	46bd      	mov	sp, r7
 8001e84:	bd80      	pop	{r7, pc}
	...

08001e88 <UI_channel>:


//Functions for transition table

//print CH to LCD
void UI_channel(){
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	af00      	add	r7, sp, #0
	Encoder_noInterrupts();
 8001e8c:	f7ff fb3e 	bl	800150c <Encoder_noInterrupts>
	captured_channel = 0;
 8001e90:	4b09      	ldr	r3, [pc, #36]	; (8001eb8 <UI_channel+0x30>)
 8001e92:	2200      	movs	r2, #0
 8001e94:	801a      	strh	r2, [r3, #0]
	Pnewline Pchannel
 8001e96:	f7ff ffa1 	bl	8001ddc <lcd_clear>
 8001e9a:	4808      	ldr	r0, [pc, #32]	; (8001ebc <UI_channel+0x34>)
 8001e9c:	f7ff ffda 	bl	8001e54 <lcd_print>
 8001ea0:	2100      	movs	r1, #0
 8001ea2:	2001      	movs	r0, #1
 8001ea4:	f7ff ffa1 	bl	8001dea <lcd_cursorAt>
 8001ea8:	4805      	ldr	r0, [pc, #20]	; (8001ec0 <UI_channel+0x38>)
 8001eaa:	f7ff ffd3 	bl	8001e54 <lcd_print>
 8001eae:	f7ff ff87 	bl	8001dc0 <lcd_blink>
}
 8001eb2:	bf00      	nop
 8001eb4:	bd80      	pop	{r7, pc}
 8001eb6:	bf00      	nop
 8001eb8:	20000438 	.word	0x20000438
 8001ebc:	08006ec8 	.word	0x08006ec8
 8001ec0:	08006edc 	.word	0x08006edc

08001ec4 <UI_fail>:

void UI_fail(){
 8001ec4:	b580      	push	{r7, lr}
 8001ec6:	af00      	add	r7, sp, #0
	Encoder_noInterrupts();
 8001ec8:	f7ff fb20 	bl	800150c <Encoder_noInterrupts>
	lcd_noCursor();
 8001ecc:	f7ff ff7f 	bl	8001dce <lcd_noCursor>
	Pfail
 8001ed0:	f7ff ff84 	bl	8001ddc <lcd_clear>
 8001ed4:	4805      	ldr	r0, [pc, #20]	; (8001eec <UI_fail+0x28>)
 8001ed6:	f7ff ffbd 	bl	8001e54 <lcd_print>
 8001eda:	2100      	movs	r1, #0
 8001edc:	2001      	movs	r0, #1
 8001ede:	f7ff ff84 	bl	8001dea <lcd_cursorAt>
 8001ee2:	4803      	ldr	r0, [pc, #12]	; (8001ef0 <UI_fail+0x2c>)
 8001ee4:	f7ff ffb6 	bl	8001e54 <lcd_print>
}
 8001ee8:	bf00      	nop
 8001eea:	bd80      	pop	{r7, pc}
 8001eec:	08006ee0 	.word	0x08006ee0
 8001ef0:	08006ef0 	.word	0x08006ef0

08001ef4 <UI_main>:

void UI_main(){
 8001ef4:	b580      	push	{r7, lr}
 8001ef6:	af00      	add	r7, sp, #0
	Encoder_noInterrupts();
 8001ef8:	f7ff fb08 	bl	800150c <Encoder_noInterrupts>
	Pnewline
 8001efc:	f7ff ff6e 	bl	8001ddc <lcd_clear>
 8001f00:	4804      	ldr	r0, [pc, #16]	; (8001f14 <UI_main+0x20>)
 8001f02:	f7ff ffa7 	bl	8001e54 <lcd_print>
 8001f06:	2100      	movs	r1, #0
 8001f08:	2001      	movs	r0, #1
 8001f0a:	f7ff ff6e 	bl	8001dea <lcd_cursorAt>
}
 8001f0e:	bf00      	nop
 8001f10:	bd80      	pop	{r7, pc}
 8001f12:	bf00      	nop
 8001f14:	08006ec8 	.word	0x08006ec8

08001f18 <release_captured_channel>:

void release_captured_channel(){\
 8001f18:	b580      	push	{r7, lr}
 8001f1a:	af00      	add	r7, sp, #0
	captured_channel = 0;
 8001f1c:	4b07      	ldr	r3, [pc, #28]	; (8001f3c <release_captured_channel+0x24>)
 8001f1e:	2200      	movs	r2, #0
 8001f20:	801a      	strh	r2, [r3, #0]
	lcd_cursorAt(1, 3);
 8001f22:	2103      	movs	r1, #3
 8001f24:	2001      	movs	r0, #1
 8001f26:	f7ff ff60 	bl	8001dea <lcd_cursorAt>
	lcd_print("    ");
 8001f2a:	4805      	ldr	r0, [pc, #20]	; (8001f40 <release_captured_channel+0x28>)
 8001f2c:	f7ff ff92 	bl	8001e54 <lcd_print>
	lcd_cursorAt(1, 3);
 8001f30:	2103      	movs	r1, #3
 8001f32:	2001      	movs	r0, #1
 8001f34:	f7ff ff59 	bl	8001dea <lcd_cursorAt>
}
 8001f38:	bf00      	nop
 8001f3a:	bd80      	pop	{r7, pc}
 8001f3c:	20000438 	.word	0x20000438
 8001f40:	08006f00 	.word	0x08006f00

08001f44 <get_captured_channel_value>:

//also enable the encoder
void get_captured_channel_value(){
 8001f44:	b580      	push	{r7, lr}
 8001f46:	af00      	add	r7, sp, #0
	mutated = 0;
 8001f48:	4b0b      	ldr	r3, [pc, #44]	; (8001f78 <get_captured_channel_value+0x34>)
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	701a      	strb	r2, [r3, #0]
	requestAndMapCurrentValue();
 8001f4e:	f000 faa3 	bl	8002498 <requestAndMapCurrentValue>
	lcd_cursorAt(1,7);
 8001f52:	2107      	movs	r1, #7
 8001f54:	2001      	movs	r0, #1
 8001f56:	f7ff ff48 	bl	8001dea <lcd_cursorAt>
	Pat
 8001f5a:	4808      	ldr	r0, [pc, #32]	; (8001f7c <get_captured_channel_value+0x38>)
 8001f5c:	f7ff ff7a 	bl	8001e54 <lcd_print>
	printValue();
 8001f60:	f000 fa0e 	bl	8002380 <printValue>
	lcd_cursorAt(1, 9);
 8001f64:	2109      	movs	r1, #9
 8001f66:	2001      	movs	r0, #1
 8001f68:	f7ff ff3f 	bl	8001dea <lcd_cursorAt>
	//captured_channel_value = 0;
	Encoder_Interrupts(ENC_rot_ISR);
 8001f6c:	4804      	ldr	r0, [pc, #16]	; (8001f80 <get_captured_channel_value+0x3c>)
 8001f6e:	f7ff fa91 	bl	8001494 <Encoder_Interrupts>
}
 8001f72:	bf00      	nop
 8001f74:	bd80      	pop	{r7, pc}
 8001f76:	bf00      	nop
 8001f78:	20000430 	.word	0x20000430
 8001f7c:	08006f08 	.word	0x08006f08
 8001f80:	08002271 	.word	0x08002271

08001f84 <alterValue>:

//update the static value and send to the display
//does not latch value
void alterValue(){
 8001f84:	b580      	push	{r7, lr}
 8001f86:	af00      	add	r7, sp, #0
	if(mutated == 0){
 8001f88:	4b15      	ldr	r3, [pc, #84]	; (8001fe0 <alterValue+0x5c>)
 8001f8a:	781b      	ldrb	r3, [r3, #0]
 8001f8c:	2b00      	cmp	r3, #0
 8001f8e:	d105      	bne.n	8001f9c <alterValue+0x18>
		captured_channel_value = 0;
 8001f90:	4b14      	ldr	r3, [pc, #80]	; (8001fe4 <alterValue+0x60>)
 8001f92:	2200      	movs	r2, #0
 8001f94:	701a      	strb	r2, [r3, #0]
		mutated = 1;
 8001f96:	4b12      	ldr	r3, [pc, #72]	; (8001fe0 <alterValue+0x5c>)
 8001f98:	2201      	movs	r2, #1
 8001f9a:	701a      	strb	r2, [r3, #0]
	}
	captured_channel_value *= 10;
 8001f9c:	4b11      	ldr	r3, [pc, #68]	; (8001fe4 <alterValue+0x60>)
 8001f9e:	781b      	ldrb	r3, [r3, #0]
 8001fa0:	b2db      	uxtb	r3, r3
 8001fa2:	461a      	mov	r2, r3
 8001fa4:	0092      	lsls	r2, r2, #2
 8001fa6:	4413      	add	r3, r2
 8001fa8:	005b      	lsls	r3, r3, #1
 8001faa:	b2da      	uxtb	r2, r3
 8001fac:	4b0d      	ldr	r3, [pc, #52]	; (8001fe4 <alterValue+0x60>)
 8001fae:	701a      	strb	r2, [r3, #0]
	captured_channel_value += key;
 8001fb0:	4b0d      	ldr	r3, [pc, #52]	; (8001fe8 <alterValue+0x64>)
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	b2da      	uxtb	r2, r3
 8001fb6:	4b0b      	ldr	r3, [pc, #44]	; (8001fe4 <alterValue+0x60>)
 8001fb8:	781b      	ldrb	r3, [r3, #0]
 8001fba:	b2db      	uxtb	r3, r3
 8001fbc:	4413      	add	r3, r2
 8001fbe:	b2da      	uxtb	r2, r3
 8001fc0:	4b08      	ldr	r3, [pc, #32]	; (8001fe4 <alterValue+0x60>)
 8001fc2:	701a      	strb	r2, [r3, #0]
	if(captured_channel_value > 100){captured_channel_value = 100;}
 8001fc4:	4b07      	ldr	r3, [pc, #28]	; (8001fe4 <alterValue+0x60>)
 8001fc6:	781b      	ldrb	r3, [r3, #0]
 8001fc8:	b2db      	uxtb	r3, r3
 8001fca:	2b64      	cmp	r3, #100	; 0x64
 8001fcc:	d902      	bls.n	8001fd4 <alterValue+0x50>
 8001fce:	4b05      	ldr	r3, [pc, #20]	; (8001fe4 <alterValue+0x60>)
 8001fd0:	2264      	movs	r2, #100	; 0x64
 8001fd2:	701a      	strb	r2, [r3, #0]
	if(captured_channel_value < 0){captured_channel_value = 0;}
 8001fd4:	4b03      	ldr	r3, [pc, #12]	; (8001fe4 <alterValue+0x60>)
 8001fd6:	781b      	ldrb	r3, [r3, #0]
	printValue();
 8001fd8:	f000 f9d2 	bl	8002380 <printValue>
}
 8001fdc:	bf00      	nop
 8001fde:	bd80      	pop	{r7, pc}
 8001fe0:	20000430 	.word	0x20000430
 8001fe4:	2000043a 	.word	0x2000043a
 8001fe8:	2000043c 	.word	0x2000043c

08001fec <clearValue>:

//update the static value and send to the display
//!LATCH VALUE
void clearValue(){
 8001fec:	b580      	push	{r7, lr}
 8001fee:	af00      	add	r7, sp, #0
	captured_channel_value = 0;
 8001ff0:	4b03      	ldr	r3, [pc, #12]	; (8002000 <clearValue+0x14>)
 8001ff2:	2200      	movs	r2, #0
 8001ff4:	701a      	strb	r2, [r3, #0]
	printValue();
 8001ff6:	f000 f9c3 	bl	8002380 <printValue>
}
 8001ffa:	bf00      	nop
 8001ffc:	bd80      	pop	{r7, pc}
 8001ffe:	bf00      	nop
 8002000:	2000043a 	.word	0x2000043a

08002004 <latch_current_value_gotoHOLD>:

//!LATCH VALUE
void latch_current_value_gotoHOLD(){
 8002004:	b580      	push	{r7, lr}
 8002006:	af00      	add	r7, sp, #0
	Encoder_noInterrupts();
 8002008:	f7ff fa80 	bl	800150c <Encoder_noInterrupts>
	mapAndStoreNewValue();
 800200c:	f000 f9f8 	bl	8002400 <mapAndStoreNewValue>
	Penter
 8002010:	4803      	ldr	r0, [pc, #12]	; (8002020 <latch_current_value_gotoHOLD+0x1c>)
 8002012:	f7ff ff1f 	bl	8001e54 <lcd_print>
	lcd_noCursor();
 8002016:	f7ff feda 	bl	8001dce <lcd_noCursor>
}
 800201a:	bf00      	nop
 800201c:	bd80      	pop	{r7, pc}
 800201e:	bf00      	nop
 8002020:	08006f0c 	.word	0x08006f0c

08002024 <latch_current_value_gotoCHANNEL>:

//!LATCH VALUE
void latch_current_value_gotoCHANNEL(){
 8002024:	b580      	push	{r7, lr}
 8002026:	af00      	add	r7, sp, #0
	mapAndStoreNewValue();
 8002028:	f000 f9ea 	bl	8002400 <mapAndStoreNewValue>
	captured_channel = 0;
 800202c:	4b03      	ldr	r3, [pc, #12]	; (800203c <latch_current_value_gotoCHANNEL+0x18>)
 800202e:	2200      	movs	r2, #0
 8002030:	801a      	strh	r2, [r3, #0]
	UI_channel();
 8002032:	f7ff ff29 	bl	8001e88 <UI_channel>
}
 8002036:	bf00      	nop
 8002038:	bd80      	pop	{r7, pc}
 800203a:	bf00      	nop
 800203c:	20000438 	.word	0x20000438

08002040 <doNothing>:

//literally nothing
void doNothing(){asm("nop");}
 8002040:	b480      	push	{r7}
 8002042:	af00      	add	r7, sp, #0
 8002044:	bf00      	nop
 8002046:	bf00      	nop
 8002048:	46bd      	mov	sp, r7
 800204a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800204e:	4770      	bx	lr

08002050 <alterChannel>:

//modify the selected channel number
void alterChannel(){
 8002050:	b580      	push	{r7, lr}
 8002052:	b082      	sub	sp, #8
 8002054:	af00      	add	r7, sp, #0
	char str[4];
	captured_channel *= 10;
 8002056:	4b21      	ldr	r3, [pc, #132]	; (80020dc <alterChannel+0x8c>)
 8002058:	881b      	ldrh	r3, [r3, #0]
 800205a:	b29b      	uxth	r3, r3
 800205c:	461a      	mov	r2, r3
 800205e:	0092      	lsls	r2, r2, #2
 8002060:	4413      	add	r3, r2
 8002062:	005b      	lsls	r3, r3, #1
 8002064:	b29a      	uxth	r2, r3
 8002066:	4b1d      	ldr	r3, [pc, #116]	; (80020dc <alterChannel+0x8c>)
 8002068:	801a      	strh	r2, [r3, #0]
	captured_channel += key;
 800206a:	4b1d      	ldr	r3, [pc, #116]	; (80020e0 <alterChannel+0x90>)
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	b29a      	uxth	r2, r3
 8002070:	4b1a      	ldr	r3, [pc, #104]	; (80020dc <alterChannel+0x8c>)
 8002072:	881b      	ldrh	r3, [r3, #0]
 8002074:	b29b      	uxth	r3, r3
 8002076:	4413      	add	r3, r2
 8002078:	b29a      	uxth	r2, r3
 800207a:	4b18      	ldr	r3, [pc, #96]	; (80020dc <alterChannel+0x8c>)
 800207c:	801a      	strh	r2, [r3, #0]
	if(captured_channel > 512){captured_channel = 512;}
 800207e:	4b17      	ldr	r3, [pc, #92]	; (80020dc <alterChannel+0x8c>)
 8002080:	881b      	ldrh	r3, [r3, #0]
 8002082:	b29b      	uxth	r3, r3
 8002084:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002088:	d903      	bls.n	8002092 <alterChannel+0x42>
 800208a:	4b14      	ldr	r3, [pc, #80]	; (80020dc <alterChannel+0x8c>)
 800208c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002090:	801a      	strh	r2, [r3, #0]
	if(captured_channel < 1){captured_channel = 1;}
 8002092:	4b12      	ldr	r3, [pc, #72]	; (80020dc <alterChannel+0x8c>)
 8002094:	881b      	ldrh	r3, [r3, #0]
 8002096:	b29b      	uxth	r3, r3
 8002098:	2b00      	cmp	r3, #0
 800209a:	d102      	bne.n	80020a2 <alterChannel+0x52>
 800209c:	4b0f      	ldr	r3, [pc, #60]	; (80020dc <alterChannel+0x8c>)
 800209e:	2201      	movs	r2, #1
 80020a0:	801a      	strh	r2, [r3, #0]
	lcd_cursorAt(1, 3);
 80020a2:	2103      	movs	r1, #3
 80020a4:	2001      	movs	r0, #1
 80020a6:	f7ff fea0 	bl	8001dea <lcd_cursorAt>
	lcd_print("    ");
 80020aa:	480e      	ldr	r0, [pc, #56]	; (80020e4 <alterChannel+0x94>)
 80020ac:	f7ff fed2 	bl	8001e54 <lcd_print>
	lcd_cursorAt(1, 3);
 80020b0:	2103      	movs	r1, #3
 80020b2:	2001      	movs	r0, #1
 80020b4:	f7ff fe99 	bl	8001dea <lcd_cursorAt>
	sprintf(str, "%d", captured_channel);
 80020b8:	4b08      	ldr	r3, [pc, #32]	; (80020dc <alterChannel+0x8c>)
 80020ba:	881b      	ldrh	r3, [r3, #0]
 80020bc:	b29b      	uxth	r3, r3
 80020be:	461a      	mov	r2, r3
 80020c0:	1d3b      	adds	r3, r7, #4
 80020c2:	4909      	ldr	r1, [pc, #36]	; (80020e8 <alterChannel+0x98>)
 80020c4:	4618      	mov	r0, r3
 80020c6:	f001 fbfd 	bl	80038c4 <siprintf>
	lcd_print(str);
 80020ca:	1d3b      	adds	r3, r7, #4
 80020cc:	4618      	mov	r0, r3
 80020ce:	f7ff fec1 	bl	8001e54 <lcd_print>
}
 80020d2:	bf00      	nop
 80020d4:	3708      	adds	r7, #8
 80020d6:	46bd      	mov	sp, r7
 80020d8:	bd80      	pop	{r7, pc}
 80020da:	bf00      	nop
 80020dc:	20000438 	.word	0x20000438
 80020e0:	2000043c 	.word	0x2000043c
 80020e4:	08006f00 	.word	0x08006f00
 80020e8:	08006f10 	.word	0x08006f10

080020ec <main>:


// main
int main(void){
 80020ec:	b580      	push	{r7, lr}
 80020ee:	b084      	sub	sp, #16
 80020f0:	af00      	add	r7, sp, #0

	// initialize the LCD and print a startup message
	lcd_begin();
 80020f2:	f7ff fd99 	bl	8001c28 <lcd_begin>
	lcd_print("Initializing");
 80020f6:	4852      	ldr	r0, [pc, #328]	; (8002240 <main+0x154>)
 80020f8:	f7ff feac 	bl	8001e54 <lcd_print>
	lcd_noCursor();
 80020fc:	f7ff fe67 	bl	8001dce <lcd_noCursor>

	//create an instruction buffer for the LCD
	functPtr *buffer = calloc(1, sizeof(functPtr));
 8002100:	2104      	movs	r1, #4
 8002102:	2001      	movs	r0, #1
 8002104:	f000 fbb6 	bl	8002874 <calloc>
 8002108:	4603      	mov	r3, r0
 800210a:	60bb      	str	r3, [r7, #8]
	if(buffer == 0){
 800210c:	68bb      	ldr	r3, [r7, #8]
 800210e:	2b00      	cmp	r3, #0
 8002110:	d103      	bne.n	800211a <main+0x2e>
		EXCEPTION(FATAL_ERROR, "COULD NOT ALLOCATE MEMORY: [main.c : 322]");
 8002112:	494c      	ldr	r1, [pc, #304]	; (8002244 <main+0x158>)
 8002114:	2000      	movs	r0, #0
 8002116:	f7ff fa49 	bl	80015ac <EXCEPTION>

	//timer setup


	//set start state
	state current_state = HOME;
 800211a:	2300      	movs	r3, #0
 800211c:	73fb      	strb	r3, [r7, #15]
	mutated = 0;
 800211e:	4b4a      	ldr	r3, [pc, #296]	; (8002248 <main+0x15c>)
 8002120:	2200      	movs	r2, #0
 8002122:	701a      	strb	r2, [r3, #0]

	//initialize usart_2 for debugging
	init_usart2(19200,F_CPU);
 8002124:	4949      	ldr	r1, [pc, #292]	; (800224c <main+0x160>)
 8002126:	f44f 4096 	mov.w	r0, #19200	; 0x4b00
 800212a:	f000 faeb 	bl	8002704 <init_usart2>

	//initialize the encoder and set the current value to wherever the knob is
	Encoder_init();
 800212e:	f7ff f921 	bl	8001374 <Encoder_init>
	encoder_value = Encoder_get_value();
 8002132:	f7ff f98d 	bl	8001450 <Encoder_get_value>
 8002136:	4602      	mov	r2, r0
 8002138:	4b45      	ldr	r3, [pc, #276]	; (8002250 <main+0x164>)
 800213a:	601a      	str	r2, [r3, #0]

	//initialize the uart1 for DMX transmission
	init_usart1();
 800213c:	f000 fa50 	bl	80025e0 <init_usart1>

	//set the starting values of the captured channel
	captured_channel = 0;
 8002140:	4b44      	ldr	r3, [pc, #272]	; (8002254 <main+0x168>)
 8002142:	2200      	movs	r2, #0
 8002144:	801a      	strh	r2, [r3, #0]
	captured_channel_value = 0;
 8002146:	4b44      	ldr	r3, [pc, #272]	; (8002258 <main+0x16c>)
 8002148:	2200      	movs	r2, #0
 800214a:	701a      	strb	r2, [r3, #0]

	//allocate memory for the DMX universe, define the start code to null
	DMX = calloc(1, sizeof(Universe));
 800214c:	f240 2101 	movw	r1, #513	; 0x201
 8002150:	2001      	movs	r0, #1
 8002152:	f000 fb8f 	bl	8002874 <calloc>
 8002156:	4603      	mov	r3, r0
 8002158:	461a      	mov	r2, r3
 800215a:	4b40      	ldr	r3, [pc, #256]	; (800225c <main+0x170>)
 800215c:	601a      	str	r2, [r3, #0]
	if(DMX == 0){
 800215e:	4b3f      	ldr	r3, [pc, #252]	; (800225c <main+0x170>)
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	2b00      	cmp	r3, #0
 8002164:	d103      	bne.n	800216e <main+0x82>
		EXCEPTION(FATAL_ERROR, "COULD NOT ALLOCATE MEMORY: [main.c : 346]");
 8002166:	493e      	ldr	r1, [pc, #248]	; (8002260 <main+0x174>)
 8002168:	2000      	movs	r0, #0
 800216a:	f7ff fa1f 	bl	80015ac <EXCEPTION>
	}
	DMX->start_code = 0; //USITT Default null start code for dimmers as per DMX512 & DMX512/1990 standards
 800216e:	4b3b      	ldr	r3, [pc, #236]	; (800225c <main+0x170>)
 8002170:	681b      	ldr	r3, [r3, #0]
 8002172:	2200      	movs	r2, #0
 8002174:	701a      	strb	r2, [r3, #0]

	//initialize the DMA
	DMA_init((uint8_t*)DMX, (uint32_t)sizeof(Universe));
 8002176:	4b39      	ldr	r3, [pc, #228]	; (800225c <main+0x170>)
 8002178:	681b      	ldr	r3, [r3, #0]
 800217a:	f240 2101 	movw	r1, #513	; 0x201
 800217e:	4618      	mov	r0, r3
 8002180:	f7fe fdb4 	bl	8000cec <DMA_init>

	//Initialize the keypad
	kpad_begin();
 8002184:	f7ff fa3c 	bl	8001600 <kpad_begin>

	//Initialize the Transciver_IC;
	DS75176B* RxTx = Transciever_init();
 8002188:	f7fe feb8 	bl	8000efc <Transciever_init>
 800218c:	6078      	str	r0, [r7, #4]
	Transciever_Output(RxTx);
 800218e:	6878      	ldr	r0, [r7, #4]
 8002190:	f7fe ff04 	bl	8000f9c <Transciever_Output>

	//print a message indicating the program is ready for user input
	lcd_clear();
 8002194:	f7ff fe22 	bl	8001ddc <lcd_clear>
	Pnewline
 8002198:	f7ff fe20 	bl	8001ddc <lcd_clear>
 800219c:	4831      	ldr	r0, [pc, #196]	; (8002264 <main+0x178>)
 800219e:	f7ff fe59 	bl	8001e54 <lcd_print>
 80021a2:	2100      	movs	r1, #0
 80021a4:	2001      	movs	r0, #1
 80021a6:	f7ff fe20 	bl	8001dea <lcd_cursorAt>

	//Start of State Machine
	for(;;){
		//wait for key press and store the key that is pressed
		//into a global variable for use with the other functions
		key = kpad_poll();
 80021aa:	f7ff fc39 	bl	8001a20 <kpad_poll>
 80021ae:	4602      	mov	r2, r0
 80021b0:	4b2d      	ldr	r3, [pc, #180]	; (8002268 <main+0x17c>)
 80021b2:	601a      	str	r2, [r3, #0]
		KEY keygroup;
		//map key pressed to either digits or one of the ENUM keys
		switch (key){
 80021b4:	4b2c      	ldr	r3, [pc, #176]	; (8002268 <main+0x17c>)
 80021b6:	681b      	ldr	r3, [r3, #0]
 80021b8:	3b0a      	subs	r3, #10
 80021ba:	2b05      	cmp	r3, #5
 80021bc:	d820      	bhi.n	8002200 <main+0x114>
 80021be:	a201      	add	r2, pc, #4	; (adr r2, 80021c4 <main+0xd8>)
 80021c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80021c4:	080021dd 	.word	0x080021dd
 80021c8:	080021e3 	.word	0x080021e3
 80021cc:	080021e9 	.word	0x080021e9
 80021d0:	080021ef 	.word	0x080021ef
 80021d4:	080021f5 	.word	0x080021f5
 80021d8:	080021fb 	.word	0x080021fb
		case CLR: keygroup = 1; break;
 80021dc:	2301      	movs	r3, #1
 80021de:	73bb      	strb	r3, [r7, #14]
 80021e0:	e010      	b.n	8002204 <main+0x118>
		case AT: keygroup = 2; break;
 80021e2:	2302      	movs	r3, #2
 80021e4:	73bb      	strb	r3, [r7, #14]
 80021e6:	e00d      	b.n	8002204 <main+0x118>
		case CH: keygroup = 3; break;
 80021e8:	2303      	movs	r3, #3
 80021ea:	73bb      	strb	r3, [r7, #14]
 80021ec:	e00a      	b.n	8002204 <main+0x118>
		case REC: keygroup = 4; break;
 80021ee:	2304      	movs	r3, #4
 80021f0:	73bb      	strb	r3, [r7, #14]
 80021f2:	e007      	b.n	8002204 <main+0x118>
		case GO: keygroup = 5; break;
 80021f4:	2305      	movs	r3, #5
 80021f6:	73bb      	strb	r3, [r7, #14]
 80021f8:	e004      	b.n	8002204 <main+0x118>
		case ENTER: keygroup = 6; break;
 80021fa:	2306      	movs	r3, #6
 80021fc:	73bb      	strb	r3, [r7, #14]
 80021fe:	e001      	b.n	8002204 <main+0x118>
		default: keygroup = DIGIT;
 8002200:	2300      	movs	r3, #0
 8002202:	73bb      	strb	r3, [r7, #14]
		}

		//do the task (call the function) at this table location
		functionTable[current_state][keygroup].task();
 8002204:	7bfa      	ldrb	r2, [r7, #15]
 8002206:	7bb9      	ldrb	r1, [r7, #14]
 8002208:	4818      	ldr	r0, [pc, #96]	; (800226c <main+0x180>)
 800220a:	4613      	mov	r3, r2
 800220c:	00db      	lsls	r3, r3, #3
 800220e:	1a9b      	subs	r3, r3, r2
 8002210:	440b      	add	r3, r1
 8002212:	00db      	lsls	r3, r3, #3
 8002214:	4403      	add	r3, r0
 8002216:	685b      	ldr	r3, [r3, #4]
 8002218:	4798      	blx	r3
		//proceed to next state
		current_state = functionTable[current_state][keygroup].nextState;
 800221a:	7bfa      	ldrb	r2, [r7, #15]
 800221c:	7bb9      	ldrb	r1, [r7, #14]
 800221e:	4813      	ldr	r0, [pc, #76]	; (800226c <main+0x180>)
 8002220:	4613      	mov	r3, r2
 8002222:	00db      	lsls	r3, r3, #3
 8002224:	1a9b      	subs	r3, r3, r2
 8002226:	440b      	add	r3, r1
 8002228:	f810 3033 	ldrb.w	r3, [r0, r3, lsl #3]
 800222c:	73fb      	strb	r3, [r7, #15]

		while( kpad_read() != -1){} // wait for key to be released
 800222e:	bf00      	nop
 8002230:	f7ff fae4 	bl	80017fc <kpad_read>
 8002234:	4603      	mov	r3, r0
 8002236:	f1b3 3fff 	cmp.w	r3, #4294967295
 800223a:	d1f9      	bne.n	8002230 <main+0x144>
	for(;;){
 800223c:	e7b5      	b.n	80021aa <main+0xbe>
 800223e:	bf00      	nop
 8002240:	08006f14 	.word	0x08006f14
 8002244:	08006f24 	.word	0x08006f24
 8002248:	20000430 	.word	0x20000430
 800224c:	00f42400 	.word	0x00f42400
 8002250:	20000434 	.word	0x20000434
 8002254:	20000438 	.word	0x20000438
 8002258:	2000043a 	.word	0x2000043a
 800225c:	2000044c 	.word	0x2000044c
 8002260:	08006f50 	.word	0x08006f50
 8002264:	08006ec8 	.word	0x08006ec8
 8002268:	2000043c 	.word	0x2000043c
 800226c:	200000e8 	.word	0x200000e8

08002270 <ENC_rot_ISR>:
/* current = 1*/		{CCLW, STAT, CLW, STAT},
/* current = 2*/		{STAT, CCLW, STAT, CLW},
/* current = 3*/		{CLW, STAT, CCLW, STAT},
};

void ENC_rot_ISR(){
 8002270:	b580      	push	{r7, lr}
 8002272:	b082      	sub	sp, #8
 8002274:	af00      	add	r7, sp, #0
	// ROTATION PATTERN
	//2 3 0 1 2
	//>> CW >>

	requestAndMapCurrentValue();
 8002276:	f000 f90f 	bl	8002498 <requestAndMapCurrentValue>
	int current_value = Encoder_get_value();
 800227a:	f7ff f8e9 	bl	8001450 <Encoder_get_value>
 800227e:	6078      	str	r0, [r7, #4]
	switch(current_value){
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	2b03      	cmp	r3, #3
 8002284:	d86d      	bhi.n	8002362 <ENC_rot_ISR+0xf2>
 8002286:	a201      	add	r2, pc, #4	; (adr r2, 800228c <ENC_rot_ISR+0x1c>)
 8002288:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800228c:	0800229d 	.word	0x0800229d
 8002290:	080022cb 	.word	0x080022cb
 8002294:	080022f9 	.word	0x080022f9
 8002298:	08002327 	.word	0x08002327
	case 0:
		if(encoder_value == 3){ captured_channel_value+=3; }
 800229c:	4b36      	ldr	r3, [pc, #216]	; (8002378 <ENC_rot_ISR+0x108>)
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	2b03      	cmp	r3, #3
 80022a2:	d106      	bne.n	80022b2 <ENC_rot_ISR+0x42>
 80022a4:	4b35      	ldr	r3, [pc, #212]	; (800237c <ENC_rot_ISR+0x10c>)
 80022a6:	781b      	ldrb	r3, [r3, #0]
 80022a8:	b2db      	uxtb	r3, r3
 80022aa:	3303      	adds	r3, #3
 80022ac:	b2da      	uxtb	r2, r3
 80022ae:	4b33      	ldr	r3, [pc, #204]	; (800237c <ENC_rot_ISR+0x10c>)
 80022b0:	701a      	strb	r2, [r3, #0]
		if(encoder_value == 1){ captured_channel_value--; }
 80022b2:	4b31      	ldr	r3, [pc, #196]	; (8002378 <ENC_rot_ISR+0x108>)
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	2b01      	cmp	r3, #1
 80022b8:	d14c      	bne.n	8002354 <ENC_rot_ISR+0xe4>
 80022ba:	4b30      	ldr	r3, [pc, #192]	; (800237c <ENC_rot_ISR+0x10c>)
 80022bc:	781b      	ldrb	r3, [r3, #0]
 80022be:	b2db      	uxtb	r3, r3
 80022c0:	3b01      	subs	r3, #1
 80022c2:	b2da      	uxtb	r2, r3
 80022c4:	4b2d      	ldr	r3, [pc, #180]	; (800237c <ENC_rot_ISR+0x10c>)
 80022c6:	701a      	strb	r2, [r3, #0]
		break;
 80022c8:	e044      	b.n	8002354 <ENC_rot_ISR+0xe4>
	case 1:
		if(encoder_value == 0){ captured_channel_value+=3; }
 80022ca:	4b2b      	ldr	r3, [pc, #172]	; (8002378 <ENC_rot_ISR+0x108>)
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	2b00      	cmp	r3, #0
 80022d0:	d106      	bne.n	80022e0 <ENC_rot_ISR+0x70>
 80022d2:	4b2a      	ldr	r3, [pc, #168]	; (800237c <ENC_rot_ISR+0x10c>)
 80022d4:	781b      	ldrb	r3, [r3, #0]
 80022d6:	b2db      	uxtb	r3, r3
 80022d8:	3303      	adds	r3, #3
 80022da:	b2da      	uxtb	r2, r3
 80022dc:	4b27      	ldr	r3, [pc, #156]	; (800237c <ENC_rot_ISR+0x10c>)
 80022de:	701a      	strb	r2, [r3, #0]
		if(encoder_value == 2){ captured_channel_value--; }
 80022e0:	4b25      	ldr	r3, [pc, #148]	; (8002378 <ENC_rot_ISR+0x108>)
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	2b02      	cmp	r3, #2
 80022e6:	d137      	bne.n	8002358 <ENC_rot_ISR+0xe8>
 80022e8:	4b24      	ldr	r3, [pc, #144]	; (800237c <ENC_rot_ISR+0x10c>)
 80022ea:	781b      	ldrb	r3, [r3, #0]
 80022ec:	b2db      	uxtb	r3, r3
 80022ee:	3b01      	subs	r3, #1
 80022f0:	b2da      	uxtb	r2, r3
 80022f2:	4b22      	ldr	r3, [pc, #136]	; (800237c <ENC_rot_ISR+0x10c>)
 80022f4:	701a      	strb	r2, [r3, #0]
		break;
 80022f6:	e02f      	b.n	8002358 <ENC_rot_ISR+0xe8>
	case 2:
		if(encoder_value == 1){ captured_channel_value+=3; }
 80022f8:	4b1f      	ldr	r3, [pc, #124]	; (8002378 <ENC_rot_ISR+0x108>)
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	2b01      	cmp	r3, #1
 80022fe:	d106      	bne.n	800230e <ENC_rot_ISR+0x9e>
 8002300:	4b1e      	ldr	r3, [pc, #120]	; (800237c <ENC_rot_ISR+0x10c>)
 8002302:	781b      	ldrb	r3, [r3, #0]
 8002304:	b2db      	uxtb	r3, r3
 8002306:	3303      	adds	r3, #3
 8002308:	b2da      	uxtb	r2, r3
 800230a:	4b1c      	ldr	r3, [pc, #112]	; (800237c <ENC_rot_ISR+0x10c>)
 800230c:	701a      	strb	r2, [r3, #0]
		if(encoder_value == 3){ captured_channel_value--; }
 800230e:	4b1a      	ldr	r3, [pc, #104]	; (8002378 <ENC_rot_ISR+0x108>)
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	2b03      	cmp	r3, #3
 8002314:	d122      	bne.n	800235c <ENC_rot_ISR+0xec>
 8002316:	4b19      	ldr	r3, [pc, #100]	; (800237c <ENC_rot_ISR+0x10c>)
 8002318:	781b      	ldrb	r3, [r3, #0]
 800231a:	b2db      	uxtb	r3, r3
 800231c:	3b01      	subs	r3, #1
 800231e:	b2da      	uxtb	r2, r3
 8002320:	4b16      	ldr	r3, [pc, #88]	; (800237c <ENC_rot_ISR+0x10c>)
 8002322:	701a      	strb	r2, [r3, #0]
		break;
 8002324:	e01a      	b.n	800235c <ENC_rot_ISR+0xec>
	case 3:
		if(encoder_value == 2){ captured_channel_value+=3; }
 8002326:	4b14      	ldr	r3, [pc, #80]	; (8002378 <ENC_rot_ISR+0x108>)
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	2b02      	cmp	r3, #2
 800232c:	d106      	bne.n	800233c <ENC_rot_ISR+0xcc>
 800232e:	4b13      	ldr	r3, [pc, #76]	; (800237c <ENC_rot_ISR+0x10c>)
 8002330:	781b      	ldrb	r3, [r3, #0]
 8002332:	b2db      	uxtb	r3, r3
 8002334:	3303      	adds	r3, #3
 8002336:	b2da      	uxtb	r2, r3
 8002338:	4b10      	ldr	r3, [pc, #64]	; (800237c <ENC_rot_ISR+0x10c>)
 800233a:	701a      	strb	r2, [r3, #0]
		if(encoder_value == 0){ captured_channel_value--; }
 800233c:	4b0e      	ldr	r3, [pc, #56]	; (8002378 <ENC_rot_ISR+0x108>)
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	2b00      	cmp	r3, #0
 8002342:	d10d      	bne.n	8002360 <ENC_rot_ISR+0xf0>
 8002344:	4b0d      	ldr	r3, [pc, #52]	; (800237c <ENC_rot_ISR+0x10c>)
 8002346:	781b      	ldrb	r3, [r3, #0]
 8002348:	b2db      	uxtb	r3, r3
 800234a:	3b01      	subs	r3, #1
 800234c:	b2da      	uxtb	r2, r3
 800234e:	4b0b      	ldr	r3, [pc, #44]	; (800237c <ENC_rot_ISR+0x10c>)
 8002350:	701a      	strb	r2, [r3, #0]
		break;
 8002352:	e005      	b.n	8002360 <ENC_rot_ISR+0xf0>
		break;
 8002354:	bf00      	nop
 8002356:	e004      	b.n	8002362 <ENC_rot_ISR+0xf2>
		break;
 8002358:	bf00      	nop
 800235a:	e002      	b.n	8002362 <ENC_rot_ISR+0xf2>
		break;
 800235c:	bf00      	nop
 800235e:	e000      	b.n	8002362 <ENC_rot_ISR+0xf2>
		break;
 8002360:	bf00      	nop
	}
	encoder_value = current_value;
 8002362:	4a05      	ldr	r2, [pc, #20]	; (8002378 <ENC_rot_ISR+0x108>)
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	6013      	str	r3, [r2, #0]
	printValue();
 8002368:	f000 f80a 	bl	8002380 <printValue>
	mapAndStoreNewValue();
 800236c:	f000 f848 	bl	8002400 <mapAndStoreNewValue>
}
 8002370:	bf00      	nop
 8002372:	3708      	adds	r7, #8
 8002374:	46bd      	mov	sp, r7
 8002376:	bd80      	pop	{r7, pc}
 8002378:	20000434 	.word	0x20000434
 800237c:	2000043a 	.word	0x2000043a

08002380 <printValue>:


void printValue(){
 8002380:	b580      	push	{r7, lr}
 8002382:	b082      	sub	sp, #8
 8002384:	af00      	add	r7, sp, #0
	//mapAndStoreNewValue();
	if(captured_channel_value > 200){
 8002386:	4b1a      	ldr	r3, [pc, #104]	; (80023f0 <printValue+0x70>)
 8002388:	781b      	ldrb	r3, [r3, #0]
 800238a:	b2db      	uxtb	r3, r3
 800238c:	2bc8      	cmp	r3, #200	; 0xc8
 800238e:	d902      	bls.n	8002396 <printValue+0x16>
		captured_channel_value = 0;
 8002390:	4b17      	ldr	r3, [pc, #92]	; (80023f0 <printValue+0x70>)
 8002392:	2200      	movs	r2, #0
 8002394:	701a      	strb	r2, [r3, #0]
	}
	if(captured_channel_value > 100){
 8002396:	4b16      	ldr	r3, [pc, #88]	; (80023f0 <printValue+0x70>)
 8002398:	781b      	ldrb	r3, [r3, #0]
 800239a:	b2db      	uxtb	r3, r3
 800239c:	2b64      	cmp	r3, #100	; 0x64
 800239e:	d902      	bls.n	80023a6 <printValue+0x26>
		captured_channel_value = 100;
 80023a0:	4b13      	ldr	r3, [pc, #76]	; (80023f0 <printValue+0x70>)
 80023a2:	2264      	movs	r2, #100	; 0x64
 80023a4:	701a      	strb	r2, [r3, #0]
	}
	char str[4];
	lcd_cursorAt(1, 9);
 80023a6:	2109      	movs	r1, #9
 80023a8:	2001      	movs	r0, #1
 80023aa:	f7ff fd1e 	bl	8001dea <lcd_cursorAt>
	lcd_print("   ");
 80023ae:	4811      	ldr	r0, [pc, #68]	; (80023f4 <printValue+0x74>)
 80023b0:	f7ff fd50 	bl	8001e54 <lcd_print>
	lcd_cursorAt(1, 9);
 80023b4:	2109      	movs	r1, #9
 80023b6:	2001      	movs	r0, #1
 80023b8:	f7ff fd17 	bl	8001dea <lcd_cursorAt>
	if(captured_channel_value > 99){
 80023bc:	4b0c      	ldr	r3, [pc, #48]	; (80023f0 <printValue+0x70>)
 80023be:	781b      	ldrb	r3, [r3, #0]
 80023c0:	b2db      	uxtb	r3, r3
 80023c2:	2b63      	cmp	r3, #99	; 0x63
 80023c4:	d903      	bls.n	80023ce <printValue+0x4e>
		lcd_print("FL");
 80023c6:	480c      	ldr	r0, [pc, #48]	; (80023f8 <printValue+0x78>)
 80023c8:	f7ff fd44 	bl	8001e54 <lcd_print>
 80023cc:	e00c      	b.n	80023e8 <printValue+0x68>
		return;
	}
	sprintf(str, "%d%%", captured_channel_value);
 80023ce:	4b08      	ldr	r3, [pc, #32]	; (80023f0 <printValue+0x70>)
 80023d0:	781b      	ldrb	r3, [r3, #0]
 80023d2:	b2db      	uxtb	r3, r3
 80023d4:	461a      	mov	r2, r3
 80023d6:	1d3b      	adds	r3, r7, #4
 80023d8:	4908      	ldr	r1, [pc, #32]	; (80023fc <printValue+0x7c>)
 80023da:	4618      	mov	r0, r3
 80023dc:	f001 fa72 	bl	80038c4 <siprintf>
	lcd_print(str);
 80023e0:	1d3b      	adds	r3, r7, #4
 80023e2:	4618      	mov	r0, r3
 80023e4:	f7ff fd36 	bl	8001e54 <lcd_print>
}
 80023e8:	3708      	adds	r7, #8
 80023ea:	46bd      	mov	sp, r7
 80023ec:	bd80      	pop	{r7, pc}
 80023ee:	bf00      	nop
 80023f0:	2000043a 	.word	0x2000043a
 80023f4:	08006f7c 	.word	0x08006f7c
 80023f8:	08006f80 	.word	0x08006f80
 80023fc:	08006f84 	.word	0x08006f84

08002400 <mapAndStoreNewValue>:

void mapAndStoreNewValue(){
 8002400:	b5b0      	push	{r4, r5, r7, lr}
 8002402:	af00      	add	r7, sp, #0

	if(captured_channel_value > 200){
 8002404:	4b20      	ldr	r3, [pc, #128]	; (8002488 <mapAndStoreNewValue+0x88>)
 8002406:	781b      	ldrb	r3, [r3, #0]
 8002408:	b2db      	uxtb	r3, r3
 800240a:	2bc8      	cmp	r3, #200	; 0xc8
 800240c:	d902      	bls.n	8002414 <mapAndStoreNewValue+0x14>
			captured_channel_value = 0;
 800240e:	4b1e      	ldr	r3, [pc, #120]	; (8002488 <mapAndStoreNewValue+0x88>)
 8002410:	2200      	movs	r2, #0
 8002412:	701a      	strb	r2, [r3, #0]
		}
		if(captured_channel_value > 100){
 8002414:	4b1c      	ldr	r3, [pc, #112]	; (8002488 <mapAndStoreNewValue+0x88>)
 8002416:	781b      	ldrb	r3, [r3, #0]
 8002418:	b2db      	uxtb	r3, r3
 800241a:	2b64      	cmp	r3, #100	; 0x64
 800241c:	d902      	bls.n	8002424 <mapAndStoreNewValue+0x24>
			captured_channel_value = 100;
 800241e:	4b1a      	ldr	r3, [pc, #104]	; (8002488 <mapAndStoreNewValue+0x88>)
 8002420:	2264      	movs	r2, #100	; 0x64
 8002422:	701a      	strb	r2, [r3, #0]
		}
	//TODO: map 0-100 to 0-255 and write memory;
	if(captured_channel_value == 100){
 8002424:	4b18      	ldr	r3, [pc, #96]	; (8002488 <mapAndStoreNewValue+0x88>)
 8002426:	781b      	ldrb	r3, [r3, #0]
 8002428:	b2db      	uxtb	r3, r3
 800242a:	2b64      	cmp	r3, #100	; 0x64
 800242c:	d109      	bne.n	8002442 <mapAndStoreNewValue+0x42>
		DMX->data[captured_channel-1] = 255;
 800242e:	4b17      	ldr	r3, [pc, #92]	; (800248c <mapAndStoreNewValue+0x8c>)
 8002430:	681a      	ldr	r2, [r3, #0]
 8002432:	4b17      	ldr	r3, [pc, #92]	; (8002490 <mapAndStoreNewValue+0x90>)
 8002434:	881b      	ldrh	r3, [r3, #0]
 8002436:	b29b      	uxth	r3, r3
 8002438:	3b01      	subs	r3, #1
 800243a:	4413      	add	r3, r2
 800243c:	22ff      	movs	r2, #255	; 0xff
 800243e:	705a      	strb	r2, [r3, #1]
	}else{
		DMX->data[captured_channel-1] = (dmxVal)(captured_channel_value * 2.55);
	}
}
 8002440:	e01a      	b.n	8002478 <mapAndStoreNewValue+0x78>
		DMX->data[captured_channel-1] = (dmxVal)(captured_channel_value * 2.55);
 8002442:	4b12      	ldr	r3, [pc, #72]	; (800248c <mapAndStoreNewValue+0x8c>)
 8002444:	681d      	ldr	r5, [r3, #0]
 8002446:	4b12      	ldr	r3, [pc, #72]	; (8002490 <mapAndStoreNewValue+0x90>)
 8002448:	881b      	ldrh	r3, [r3, #0]
 800244a:	b29b      	uxth	r3, r3
 800244c:	1e5c      	subs	r4, r3, #1
 800244e:	4b0e      	ldr	r3, [pc, #56]	; (8002488 <mapAndStoreNewValue+0x88>)
 8002450:	781b      	ldrb	r3, [r3, #0]
 8002452:	b2db      	uxtb	r3, r3
 8002454:	4618      	mov	r0, r3
 8002456:	f7fe f843 	bl	80004e0 <__aeabi_i2d>
 800245a:	a309      	add	r3, pc, #36	; (adr r3, 8002480 <mapAndStoreNewValue+0x80>)
 800245c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002460:	f7fe f8a4 	bl	80005ac <__aeabi_dmul>
 8002464:	4602      	mov	r2, r0
 8002466:	460b      	mov	r3, r1
 8002468:	4610      	mov	r0, r2
 800246a:	4619      	mov	r1, r3
 800246c:	f7fe fab0 	bl	80009d0 <__aeabi_d2uiz>
 8002470:	4603      	mov	r3, r0
 8002472:	b2da      	uxtb	r2, r3
 8002474:	192b      	adds	r3, r5, r4
 8002476:	705a      	strb	r2, [r3, #1]
}
 8002478:	bf00      	nop
 800247a:	bdb0      	pop	{r4, r5, r7, pc}
 800247c:	f3af 8000 	nop.w
 8002480:	66666666 	.word	0x66666666
 8002484:	40046666 	.word	0x40046666
 8002488:	2000043a 	.word	0x2000043a
 800248c:	2000044c 	.word	0x2000044c
 8002490:	20000438 	.word	0x20000438
 8002494:	00000000 	.word	0x00000000

08002498 <requestAndMapCurrentValue>:

void requestAndMapCurrentValue(){
 8002498:	b598      	push	{r3, r4, r7, lr}
 800249a:	af00      	add	r7, sp, #0
	captured_channel_value = (dmxVal)(DMX->data[captured_channel-1] / 2.55);
 800249c:	4b10      	ldr	r3, [pc, #64]	; (80024e0 <requestAndMapCurrentValue+0x48>)
 800249e:	681a      	ldr	r2, [r3, #0]
 80024a0:	4b10      	ldr	r3, [pc, #64]	; (80024e4 <requestAndMapCurrentValue+0x4c>)
 80024a2:	881b      	ldrh	r3, [r3, #0]
 80024a4:	b29b      	uxth	r3, r3
 80024a6:	3b01      	subs	r3, #1
 80024a8:	4413      	add	r3, r2
 80024aa:	785b      	ldrb	r3, [r3, #1]
 80024ac:	4618      	mov	r0, r3
 80024ae:	f7fe f817 	bl	80004e0 <__aeabi_i2d>
 80024b2:	a309      	add	r3, pc, #36	; (adr r3, 80024d8 <requestAndMapCurrentValue+0x40>)
 80024b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024b8:	f7fe f9a2 	bl	8000800 <__aeabi_ddiv>
 80024bc:	4603      	mov	r3, r0
 80024be:	460c      	mov	r4, r1
 80024c0:	4618      	mov	r0, r3
 80024c2:	4621      	mov	r1, r4
 80024c4:	f7fe fa84 	bl	80009d0 <__aeabi_d2uiz>
 80024c8:	4603      	mov	r3, r0
 80024ca:	b2da      	uxtb	r2, r3
 80024cc:	4b06      	ldr	r3, [pc, #24]	; (80024e8 <requestAndMapCurrentValue+0x50>)
 80024ce:	701a      	strb	r2, [r3, #0]
}
 80024d0:	bf00      	nop
 80024d2:	bd98      	pop	{r3, r4, r7, pc}
 80024d4:	f3af 8000 	nop.w
 80024d8:	66666666 	.word	0x66666666
 80024dc:	40046666 	.word	0x40046666
 80024e0:	2000044c 	.word	0x2000044c
 80024e4:	20000438 	.word	0x20000438
 80024e8:	2000043a 	.word	0x2000043a

080024ec <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

int _read (int file, char *ptr, int len)
{
 80024ec:	b580      	push	{r7, lr}
 80024ee:	b086      	sub	sp, #24
 80024f0:	af00      	add	r7, sp, #0
 80024f2:	60f8      	str	r0, [r7, #12]
 80024f4:	60b9      	str	r1, [r7, #8]
 80024f6:	607a      	str	r2, [r7, #4]
	int DataIdx;
// Modified the for loop in order to get the correct behavior for fgets
	int byteCnt = 0;
 80024f8:	2300      	movs	r3, #0
 80024fa:	613b      	str	r3, [r7, #16]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80024fc:	2300      	movs	r3, #0
 80024fe:	617b      	str	r3, [r7, #20]
 8002500:	e012      	b.n	8002528 <_read+0x3c>
	{
		//*ptr++ = __io_getchar();
		byteCnt++;
 8002502:	693b      	ldr	r3, [r7, #16]
 8002504:	3301      	adds	r3, #1
 8002506:	613b      	str	r3, [r7, #16]
		//*ptr++ = usart2_getch();
		*ptr = usart2_getch();
 8002508:	f000 f8c0 	bl	800268c <usart2_getch>
 800250c:	4603      	mov	r3, r0
 800250e:	461a      	mov	r2, r3
 8002510:	68bb      	ldr	r3, [r7, #8]
 8002512:	701a      	strb	r2, [r3, #0]
		if(*ptr == '\n') break;
 8002514:	68bb      	ldr	r3, [r7, #8]
 8002516:	781b      	ldrb	r3, [r3, #0]
 8002518:	2b0a      	cmp	r3, #10
 800251a:	d00a      	beq.n	8002532 <_read+0x46>
		ptr++;
 800251c:	68bb      	ldr	r3, [r7, #8]
 800251e:	3301      	adds	r3, #1
 8002520:	60bb      	str	r3, [r7, #8]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002522:	697b      	ldr	r3, [r7, #20]
 8002524:	3301      	adds	r3, #1
 8002526:	617b      	str	r3, [r7, #20]
 8002528:	697a      	ldr	r2, [r7, #20]
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	429a      	cmp	r2, r3
 800252e:	dbe8      	blt.n	8002502 <_read+0x16>
 8002530:	e000      	b.n	8002534 <_read+0x48>
		if(*ptr == '\n') break;
 8002532:	bf00      	nop
	}

//return len;
	return byteCnt; // Return byte count
 8002534:	693b      	ldr	r3, [r7, #16]
}
 8002536:	4618      	mov	r0, r3
 8002538:	3718      	adds	r7, #24
 800253a:	46bd      	mov	sp, r7
 800253c:	bd80      	pop	{r7, pc}

0800253e <_write>:

int _write(int file, char *ptr, int len)
{
 800253e:	b580      	push	{r7, lr}
 8002540:	b086      	sub	sp, #24
 8002542:	af00      	add	r7, sp, #0
 8002544:	60f8      	str	r0, [r7, #12]
 8002546:	60b9      	str	r1, [r7, #8]
 8002548:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800254a:	2300      	movs	r3, #0
 800254c:	617b      	str	r3, [r7, #20]
 800254e:	e009      	b.n	8002564 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		usart2_putch(*ptr++);
 8002550:	68bb      	ldr	r3, [r7, #8]
 8002552:	1c5a      	adds	r2, r3, #1
 8002554:	60ba      	str	r2, [r7, #8]
 8002556:	781b      	ldrb	r3, [r3, #0]
 8002558:	4618      	mov	r0, r3
 800255a:	f000 f8b9 	bl	80026d0 <usart2_putch>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800255e:	697b      	ldr	r3, [r7, #20]
 8002560:	3301      	adds	r3, #1
 8002562:	617b      	str	r3, [r7, #20]
 8002564:	697a      	ldr	r2, [r7, #20]
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	429a      	cmp	r2, r3
 800256a:	dbf1      	blt.n	8002550 <_write+0x12>
	}
	return len;
 800256c:	687b      	ldr	r3, [r7, #4]
}
 800256e:	4618      	mov	r0, r3
 8002570:	3718      	adds	r7, #24
 8002572:	46bd      	mov	sp, r7
 8002574:	bd80      	pop	{r7, pc}

08002576 <_close>:

	return (caddr_t) prev_heap_end;
}
*/
int _close(int file)
{
 8002576:	b480      	push	{r7}
 8002578:	b083      	sub	sp, #12
 800257a:	af00      	add	r7, sp, #0
 800257c:	6078      	str	r0, [r7, #4]
	return -1;
 800257e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002582:	4618      	mov	r0, r3
 8002584:	370c      	adds	r7, #12
 8002586:	46bd      	mov	sp, r7
 8002588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800258c:	4770      	bx	lr

0800258e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800258e:	b480      	push	{r7}
 8002590:	b083      	sub	sp, #12
 8002592:	af00      	add	r7, sp, #0
 8002594:	6078      	str	r0, [r7, #4]
 8002596:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002598:	683b      	ldr	r3, [r7, #0]
 800259a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800259e:	605a      	str	r2, [r3, #4]
	return 0;
 80025a0:	2300      	movs	r3, #0
}
 80025a2:	4618      	mov	r0, r3
 80025a4:	370c      	adds	r7, #12
 80025a6:	46bd      	mov	sp, r7
 80025a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ac:	4770      	bx	lr

080025ae <_isatty>:

int _isatty(int file)
{
 80025ae:	b480      	push	{r7}
 80025b0:	b083      	sub	sp, #12
 80025b2:	af00      	add	r7, sp, #0
 80025b4:	6078      	str	r0, [r7, #4]
	return 1;
 80025b6:	2301      	movs	r3, #1
}
 80025b8:	4618      	mov	r0, r3
 80025ba:	370c      	adds	r7, #12
 80025bc:	46bd      	mov	sp, r7
 80025be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025c2:	4770      	bx	lr

080025c4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80025c4:	b480      	push	{r7}
 80025c6:	b085      	sub	sp, #20
 80025c8:	af00      	add	r7, sp, #0
 80025ca:	60f8      	str	r0, [r7, #12]
 80025cc:	60b9      	str	r1, [r7, #8]
 80025ce:	607a      	str	r2, [r7, #4]
	return 0;
 80025d0:	2300      	movs	r3, #0
}
 80025d2:	4618      	mov	r0, r3
 80025d4:	3714      	adds	r7, #20
 80025d6:	46bd      	mov	sp, r7
 80025d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025dc:	4770      	bx	lr
	...

080025e0 <init_usart1>:


static _gpio port = {GPIOB};


void init_usart1(){
 80025e0:	b580      	push	{r7, lr}
 80025e2:	af00      	add	r7, sp, #0
	// Enable clocks for GPIOA and USART2
	(*RCC_APB2ENR) |= (1 << USART1EN_BF);
 80025e4:	4a23      	ldr	r2, [pc, #140]	; (8002674 <init_usart1+0x94>)
 80025e6:	4b23      	ldr	r3, [pc, #140]	; (8002674 <init_usart1+0x94>)
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	f043 0310 	orr.w	r3, r3, #16
 80025ee:	6013      	str	r3, [r2, #0]
	Gpio_setup(&port);
 80025f0:	4821      	ldr	r0, [pc, #132]	; (8002678 <init_usart1+0x98>)
 80025f2:	f7fe fcf3 	bl	8000fdc <Gpio_setup>

	Gpio_AlternateFunction(&port, USART1_RX_PIN, AF7);
 80025f6:	2207      	movs	r2, #7
 80025f8:	2107      	movs	r1, #7
 80025fa:	481f      	ldr	r0, [pc, #124]	; (8002678 <init_usart1+0x98>)
 80025fc:	f7fe fdbc 	bl	8001178 <Gpio_AlternateFunction>
	Gpio_AlternateFunction(&port, USART1_TX_PIN, AF7);
 8002600:	2207      	movs	r2, #7
 8002602:	2106      	movs	r1, #6
 8002604:	481c      	ldr	r0, [pc, #112]	; (8002678 <init_usart1+0x98>)
 8002606:	f7fe fdb7 	bl	8001178 <Gpio_AlternateFunction>
	 * DMAT <- 1 // enable DMA access for the transmitter;
	 *
	 * BRR <- 4 << 4 = 250Kbtis/s
	 *
	 */
	(*USART1_CR1) &= 0xFFFF4000; //set all to 0;
 800260a:	4a1c      	ldr	r2, [pc, #112]	; (800267c <init_usart1+0x9c>)
 800260c:	4b1b      	ldr	r3, [pc, #108]	; (800267c <init_usart1+0x9c>)
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	f423 433f 	bic.w	r3, r3, #48896	; 0xbf00
 8002614:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8002618:	6013      	str	r3, [r2, #0]
	(*USART1_CR1) |=  ((1 << UE_BF) | (1 << TE_BF));
 800261a:	4a18      	ldr	r2, [pc, #96]	; (800267c <init_usart1+0x9c>)
 800261c:	4b17      	ldr	r3, [pc, #92]	; (800267c <init_usart1+0x9c>)
 800261e:	681b      	ldr	r3, [r3, #0]
 8002620:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002624:	f043 0308 	orr.w	r3, r3, #8
 8002628:	6013      	str	r3, [r2, #0]

	(*USART1_CR2) &= 0xFFFF8090; //set all to 0;
 800262a:	4a15      	ldr	r2, [pc, #84]	; (8002680 <init_usart1+0xa0>)
 800262c:	4b14      	ldr	r3, [pc, #80]	; (8002680 <init_usart1+0xa0>)
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8002634:	f023 036f 	bic.w	r3, r3, #111	; 0x6f
 8002638:	6013      	str	r3, [r2, #0]
	(*USART1_CR2) |= (0x2 << STOP_BF);
 800263a:	4a11      	ldr	r2, [pc, #68]	; (8002680 <init_usart1+0xa0>)
 800263c:	4b10      	ldr	r3, [pc, #64]	; (8002680 <init_usart1+0xa0>)
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002644:	6013      	str	r3, [r2, #0]

	(*USART1_CR3) &= 0xFFFFF000; //seta all to 0;
 8002646:	4a0f      	ldr	r2, [pc, #60]	; (8002684 <init_usart1+0xa4>)
 8002648:	4b0e      	ldr	r3, [pc, #56]	; (8002684 <init_usart1+0xa4>)
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8002650:	f023 030f 	bic.w	r3, r3, #15
 8002654:	6013      	str	r3, [r2, #0]
	//(*USART1_CR3) |= (1 << DMAT_BF);

	(*USART1_BRR) &= 0xFFFF0000;
 8002656:	4a0c      	ldr	r2, [pc, #48]	; (8002688 <init_usart1+0xa8>)
 8002658:	4b0b      	ldr	r3, [pc, #44]	; (8002688 <init_usart1+0xa8>)
 800265a:	681b      	ldr	r3, [r3, #0]
 800265c:	0c1b      	lsrs	r3, r3, #16
 800265e:	041b      	lsls	r3, r3, #16
 8002660:	6013      	str	r3, [r2, #0]
	(*USART1_BRR) |= (4 << 4);
 8002662:	4a09      	ldr	r2, [pc, #36]	; (8002688 <init_usart1+0xa8>)
 8002664:	4b08      	ldr	r3, [pc, #32]	; (8002688 <init_usart1+0xa8>)
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800266c:	6013      	str	r3, [r2, #0]
}
 800266e:	bf00      	nop
 8002670:	bd80      	pop	{r7, pc}
 8002672:	bf00      	nop
 8002674:	40023844 	.word	0x40023844
 8002678:	20000210 	.word	0x20000210
 800267c:	4001100c 	.word	0x4001100c
 8002680:	40011010 	.word	0x40011010
 8002684:	40011014 	.word	0x40011014
 8002688:	40011008 	.word	0x40011008

0800268c <usart2_getch>:
 */
#include "uart_driver.h"
#include <inttypes.h>
#include <stdio.h>

char usart2_getch(){
 800268c:	b580      	push	{r7, lr}
 800268e:	b082      	sub	sp, #8
 8002690:	af00      	add	r7, sp, #0
	char c;
	while((*(USART_SR)&(1<<RXNE)) != (1<<RXNE));
 8002692:	bf00      	nop
 8002694:	4b0c      	ldr	r3, [pc, #48]	; (80026c8 <usart2_getch+0x3c>)
 8002696:	681b      	ldr	r3, [r3, #0]
 8002698:	f003 0320 	and.w	r3, r3, #32
 800269c:	2b20      	cmp	r3, #32
 800269e:	d1f9      	bne.n	8002694 <usart2_getch+0x8>
	c = ((char) *USART_DR);  // Read character from usart
 80026a0:	4b0a      	ldr	r3, [pc, #40]	; (80026cc <usart2_getch+0x40>)
 80026a2:	681b      	ldr	r3, [r3, #0]
 80026a4:	71fb      	strb	r3, [r7, #7]
	usart2_putch(c);  // Echo back
 80026a6:	79fb      	ldrb	r3, [r7, #7]
 80026a8:	4618      	mov	r0, r3
 80026aa:	f000 f811 	bl	80026d0 <usart2_putch>

	if (c == '\r'){  // If character is CR
 80026ae:	79fb      	ldrb	r3, [r7, #7]
 80026b0:	2b0d      	cmp	r3, #13
 80026b2:	d104      	bne.n	80026be <usart2_getch+0x32>
		usart2_putch('\n');  // send it
 80026b4:	200a      	movs	r0, #10
 80026b6:	f000 f80b 	bl	80026d0 <usart2_putch>
		c = '\n';   // Return LF. fgets is terminated by LF
 80026ba:	230a      	movs	r3, #10
 80026bc:	71fb      	strb	r3, [r7, #7]
	}

	return c;
 80026be:	79fb      	ldrb	r3, [r7, #7]
}
 80026c0:	4618      	mov	r0, r3
 80026c2:	3708      	adds	r7, #8
 80026c4:	46bd      	mov	sp, r7
 80026c6:	bd80      	pop	{r7, pc}
 80026c8:	40004400 	.word	0x40004400
 80026cc:	40004404 	.word	0x40004404

080026d0 <usart2_putch>:

void usart2_putch(char c){
 80026d0:	b480      	push	{r7}
 80026d2:	b083      	sub	sp, #12
 80026d4:	af00      	add	r7, sp, #0
 80026d6:	4603      	mov	r3, r0
 80026d8:	71fb      	strb	r3, [r7, #7]
	while((*(USART_SR)&(1<<TXE)) != (1<<TXE));
 80026da:	bf00      	nop
 80026dc:	4b07      	ldr	r3, [pc, #28]	; (80026fc <usart2_putch+0x2c>)
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80026e4:	2b80      	cmp	r3, #128	; 0x80
 80026e6:	d1f9      	bne.n	80026dc <usart2_putch+0xc>
	*(USART_DR) = c;
 80026e8:	4a05      	ldr	r2, [pc, #20]	; (8002700 <usart2_putch+0x30>)
 80026ea:	79fb      	ldrb	r3, [r7, #7]
 80026ec:	6013      	str	r3, [r2, #0]
}
 80026ee:	bf00      	nop
 80026f0:	370c      	adds	r7, #12
 80026f2:	46bd      	mov	sp, r7
 80026f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026f8:	4770      	bx	lr
 80026fa:	bf00      	nop
 80026fc:	40004400 	.word	0x40004400
 8002700:	40004404 	.word	0x40004404

08002704 <init_usart2>:

void init_usart2(uint32_t baud, uint32_t sysclk){
 8002704:	b580      	push	{r7, lr}
 8002706:	b082      	sub	sp, #8
 8002708:	af00      	add	r7, sp, #0
 800270a:	6078      	str	r0, [r7, #4]
 800270c:	6039      	str	r1, [r7, #0]
	// Enable clocks for GPIOA and USART2
	*(RCC_AHB1ENR) |= (1<<GPIOAEN);
 800270e:	4a20      	ldr	r2, [pc, #128]	; (8002790 <init_usart2+0x8c>)
 8002710:	4b1f      	ldr	r3, [pc, #124]	; (8002790 <init_usart2+0x8c>)
 8002712:	681b      	ldr	r3, [r3, #0]
 8002714:	f043 0301 	orr.w	r3, r3, #1
 8002718:	6013      	str	r3, [r2, #0]
	*(RCC_APB1ENR) |= (1<<USART2EN);
 800271a:	4a1e      	ldr	r2, [pc, #120]	; (8002794 <init_usart2+0x90>)
 800271c:	4b1d      	ldr	r3, [pc, #116]	; (8002794 <init_usart2+0x90>)
 800271e:	681b      	ldr	r3, [r3, #0]
 8002720:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002724:	6013      	str	r3, [r2, #0]

	// Function 7 of PORTA pins is USART
	*(GPIOA_AFRL) &= (0xFFFF00FF); // Clear the bits associated with PA3 and PA2
 8002726:	4a1c      	ldr	r2, [pc, #112]	; (8002798 <init_usart2+0x94>)
 8002728:	4b1b      	ldr	r3, [pc, #108]	; (8002798 <init_usart2+0x94>)
 800272a:	681b      	ldr	r3, [r3, #0]
 800272c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002730:	6013      	str	r3, [r2, #0]
	*(GPIOA_AFRL) |= (0b01110111<<8);  // Choose function 7 for both PA3 and PA2
 8002732:	4a19      	ldr	r2, [pc, #100]	; (8002798 <init_usart2+0x94>)
 8002734:	4b18      	ldr	r3, [pc, #96]	; (8002798 <init_usart2+0x94>)
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 800273c:	6013      	str	r3, [r2, #0]
	*(GPIOA_MODER) &= (0xFFFFFF0F);  // Clear mode bits for PA3 and PA2
 800273e:	4a17      	ldr	r2, [pc, #92]	; (800279c <init_usart2+0x98>)
 8002740:	4b16      	ldr	r3, [pc, #88]	; (800279c <init_usart2+0x98>)
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002748:	6013      	str	r3, [r2, #0]
	*(GPIOA_MODER) |= (0b1010<<4);  // Both PA3 and PA2 in alt function mode
 800274a:	4a14      	ldr	r2, [pc, #80]	; (800279c <init_usart2+0x98>)
 800274c:	4b13      	ldr	r3, [pc, #76]	; (800279c <init_usart2+0x98>)
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8002754:	6013      	str	r3, [r2, #0]
	//USART2_init();  //8n1 no flow control
	// over8 = 0..oversample by 16
	// M = 0..1 start bit, data size is 8, 1 stop bit
	// PCE= 0..Parity check not enabled
	// no interrupts... using polling
	*(USART_CR1) = (1<<UE)|(1<<TE)|(1<<RE); // Enable UART, Tx and Rx
 8002756:	4b12      	ldr	r3, [pc, #72]	; (80027a0 <init_usart2+0x9c>)
 8002758:	f242 020c 	movw	r2, #8204	; 0x200c
 800275c:	601a      	str	r2, [r3, #0]
	*(USART_CR2) = 0;  // This is the default, but do it anyway
 800275e:	4b11      	ldr	r3, [pc, #68]	; (80027a4 <init_usart2+0xa0>)
 8002760:	2200      	movs	r2, #0
 8002762:	601a      	str	r2, [r3, #0]
	*(USART_CR3) = 0;  // This is the default, but do it anyway
 8002764:	4b10      	ldr	r3, [pc, #64]	; (80027a8 <init_usart2+0xa4>)
 8002766:	2200      	movs	r2, #0
 8002768:	601a      	str	r2, [r3, #0]
	*(USART_BRR) = sysclk/baud;
 800276a:	4910      	ldr	r1, [pc, #64]	; (80027ac <init_usart2+0xa8>)
 800276c:	683a      	ldr	r2, [r7, #0]
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	fbb2 f3f3 	udiv	r3, r2, r3
 8002774:	600b      	str	r3, [r1, #0]

	/* I'm not sure if this is needed for standard IO*/
	 //setvbuf(stderr, NULL, _IONBF, 0);
	 //setvbuf(stdin, NULL, _IONBF, 0);
	 setvbuf(stdout, NULL, _IONBF, 0);
 8002776:	4b0e      	ldr	r3, [pc, #56]	; (80027b0 <init_usart2+0xac>)
 8002778:	681b      	ldr	r3, [r3, #0]
 800277a:	6898      	ldr	r0, [r3, #8]
 800277c:	2300      	movs	r3, #0
 800277e:	2202      	movs	r2, #2
 8002780:	2100      	movs	r1, #0
 8002782:	f000 ffeb 	bl	800375c <setvbuf>
}
 8002786:	bf00      	nop
 8002788:	3708      	adds	r7, #8
 800278a:	46bd      	mov	sp, r7
 800278c:	bd80      	pop	{r7, pc}
 800278e:	bf00      	nop
 8002790:	40023830 	.word	0x40023830
 8002794:	40023840 	.word	0x40023840
 8002798:	40020020 	.word	0x40020020
 800279c:	40020000 	.word	0x40020000
 80027a0:	4000440c 	.word	0x4000440c
 80027a4:	40004410 	.word	0x40004410
 80027a8:	40004414 	.word	0x40004414
 80027ac:	40004408 	.word	0x40004408
 80027b0:	20000238 	.word	0x20000238

080027b4 <Reset_Handler>:
Reset_Handler:

// enable floating point - added by DER

	# CPACR is located at address 0xE000ED88
	LDR.W   R0, =0xE000ED88
 80027b4:	f8df 0044 	ldr.w	r0, [pc, #68]	; 80027fc <LoopForever+0x2>
	# Read CPACR
	LDR R1, [R0]
 80027b8:	6801      	ldr	r1, [r0, #0]
	# Set bits 20-23 to enable CP10 and CP11 coprocessors
	ORR R1, R1, #(0xF << 20)
 80027ba:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
	# Write back the modified value to the CPACR
	STR R1, [R0] // wait for store to complete
 80027be:	6001      	str	r1, [r0, #0]
	DSB
 80027c0:	f3bf 8f4f 	dsb	sy
	# reset pipeline now the FPU is enabled
	ISB
 80027c4:	f3bf 8f6f 	isb	sy

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 80027c8:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 80027ca:	e003      	b.n	80027d4 <LoopCopyDataInit>

080027cc <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 80027cc:	4b0c      	ldr	r3, [pc, #48]	; (8002800 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 80027ce:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 80027d0:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 80027d2:	3104      	adds	r1, #4

080027d4 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 80027d4:	480b      	ldr	r0, [pc, #44]	; (8002804 <LoopForever+0xa>)
	ldr	r3, =_edata
 80027d6:	4b0c      	ldr	r3, [pc, #48]	; (8002808 <LoopForever+0xe>)
	adds	r2, r0, r1
 80027d8:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 80027da:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 80027dc:	d3f6      	bcc.n	80027cc <CopyDataInit>
	ldr	r2, =_sbss
 80027de:	4a0b      	ldr	r2, [pc, #44]	; (800280c <LoopForever+0x12>)
	b	LoopFillZerobss
 80027e0:	e002      	b.n	80027e8 <LoopFillZerobss>

080027e2 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs r3, #0
 80027e2:	2300      	movs	r3, #0
 	str  r3, [r2]
 80027e4:	6013      	str	r3, [r2, #0]
	adds r2, r2, #4
 80027e6:	3204      	adds	r2, #4

080027e8 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 80027e8:	4b09      	ldr	r3, [pc, #36]	; (8002810 <LoopForever+0x16>)
	cmp	r2, r3
 80027ea:	429a      	cmp	r2, r3
	bcc	FillZerobss
 80027ec:	d3f9      	bcc.n	80027e2 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 80027ee:	f3af 8000 	nop.w
/* Call static constructors */
    bl __libc_init_array
 80027f2:	f000 f84d 	bl	8002890 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 80027f6:	f7ff fc79 	bl	80020ec <main>

080027fa <LoopForever>:

LoopForever:
    b LoopForever
 80027fa:	e7fe      	b.n	80027fa <LoopForever>
	LDR.W   R0, =0xE000ED88
 80027fc:	e000ed88 	.word	0xe000ed88
	ldr	r3, =_sidata
 8002800:	080072b8 	.word	0x080072b8
	ldr	r0, =_sdata
 8002804:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8002808:	20000408 	.word	0x20000408
	ldr	r2, =_sbss
 800280c:	20000408 	.word	0x20000408
	ldr	r3, = _ebss
 8002810:	20000454 	.word	0x20000454

08002814 <ADC_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b 	Reset_Handler
 8002814:	f7ff bfce 	b.w	80027b4 <Reset_Handler>
	b	Infinite_Loop
 8002818:	e7fc      	b.n	8002814 <ADC_IRQHandler>
	...

0800281c <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 800281c:	b580      	push	{r7, lr}
 800281e:	b084      	sub	sp, #16
 8002820:	af00      	add	r7, sp, #0
 8002822:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002824:	4b11      	ldr	r3, [pc, #68]	; (800286c <_sbrk+0x50>)
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	2b00      	cmp	r3, #0
 800282a:	d102      	bne.n	8002832 <_sbrk+0x16>
		heap_end = &end;
 800282c:	4b0f      	ldr	r3, [pc, #60]	; (800286c <_sbrk+0x50>)
 800282e:	4a10      	ldr	r2, [pc, #64]	; (8002870 <_sbrk+0x54>)
 8002830:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8002832:	4b0e      	ldr	r3, [pc, #56]	; (800286c <_sbrk+0x50>)
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8002838:	4b0c      	ldr	r3, [pc, #48]	; (800286c <_sbrk+0x50>)
 800283a:	681a      	ldr	r2, [r3, #0]
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	4413      	add	r3, r2
 8002840:	466a      	mov	r2, sp
 8002842:	4293      	cmp	r3, r2
 8002844:	d907      	bls.n	8002856 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8002846:	f000 f81d 	bl	8002884 <__errno>
 800284a:	4602      	mov	r2, r0
 800284c:	230c      	movs	r3, #12
 800284e:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8002850:	f04f 33ff 	mov.w	r3, #4294967295
 8002854:	e006      	b.n	8002864 <_sbrk+0x48>
	}

	heap_end += incr;
 8002856:	4b05      	ldr	r3, [pc, #20]	; (800286c <_sbrk+0x50>)
 8002858:	681a      	ldr	r2, [r3, #0]
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	4413      	add	r3, r2
 800285e:	4a03      	ldr	r2, [pc, #12]	; (800286c <_sbrk+0x50>)
 8002860:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8002862:	68fb      	ldr	r3, [r7, #12]
}
 8002864:	4618      	mov	r0, r3
 8002866:	3710      	adds	r7, #16
 8002868:	46bd      	mov	sp, r7
 800286a:	bd80      	pop	{r7, pc}
 800286c:	20000440 	.word	0x20000440
 8002870:	20000458 	.word	0x20000458

08002874 <calloc>:
 8002874:	4b02      	ldr	r3, [pc, #8]	; (8002880 <calloc+0xc>)
 8002876:	460a      	mov	r2, r1
 8002878:	4601      	mov	r1, r0
 800287a:	6818      	ldr	r0, [r3, #0]
 800287c:	f000 b83c 	b.w	80028f8 <_calloc_r>
 8002880:	20000238 	.word	0x20000238

08002884 <__errno>:
 8002884:	4b01      	ldr	r3, [pc, #4]	; (800288c <__errno+0x8>)
 8002886:	6818      	ldr	r0, [r3, #0]
 8002888:	4770      	bx	lr
 800288a:	bf00      	nop
 800288c:	20000238 	.word	0x20000238

08002890 <__libc_init_array>:
 8002890:	b570      	push	{r4, r5, r6, lr}
 8002892:	4e0d      	ldr	r6, [pc, #52]	; (80028c8 <__libc_init_array+0x38>)
 8002894:	4c0d      	ldr	r4, [pc, #52]	; (80028cc <__libc_init_array+0x3c>)
 8002896:	1ba4      	subs	r4, r4, r6
 8002898:	10a4      	asrs	r4, r4, #2
 800289a:	2500      	movs	r5, #0
 800289c:	42a5      	cmp	r5, r4
 800289e:	d109      	bne.n	80028b4 <__libc_init_array+0x24>
 80028a0:	4e0b      	ldr	r6, [pc, #44]	; (80028d0 <__libc_init_array+0x40>)
 80028a2:	4c0c      	ldr	r4, [pc, #48]	; (80028d4 <__libc_init_array+0x44>)
 80028a4:	f004 fabc 	bl	8006e20 <_init>
 80028a8:	1ba4      	subs	r4, r4, r6
 80028aa:	10a4      	asrs	r4, r4, #2
 80028ac:	2500      	movs	r5, #0
 80028ae:	42a5      	cmp	r5, r4
 80028b0:	d105      	bne.n	80028be <__libc_init_array+0x2e>
 80028b2:	bd70      	pop	{r4, r5, r6, pc}
 80028b4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80028b8:	4798      	blx	r3
 80028ba:	3501      	adds	r5, #1
 80028bc:	e7ee      	b.n	800289c <__libc_init_array+0xc>
 80028be:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80028c2:	4798      	blx	r3
 80028c4:	3501      	adds	r5, #1
 80028c6:	e7f2      	b.n	80028ae <__libc_init_array+0x1e>
 80028c8:	080072b0 	.word	0x080072b0
 80028cc:	080072b0 	.word	0x080072b0
 80028d0:	080072b0 	.word	0x080072b0
 80028d4:	080072b4 	.word	0x080072b4

080028d8 <malloc>:
 80028d8:	4b02      	ldr	r3, [pc, #8]	; (80028e4 <malloc+0xc>)
 80028da:	4601      	mov	r1, r0
 80028dc:	6818      	ldr	r0, [r3, #0]
 80028de:	f000 b867 	b.w	80029b0 <_malloc_r>
 80028e2:	bf00      	nop
 80028e4:	20000238 	.word	0x20000238

080028e8 <memset>:
 80028e8:	4402      	add	r2, r0
 80028ea:	4603      	mov	r3, r0
 80028ec:	4293      	cmp	r3, r2
 80028ee:	d100      	bne.n	80028f2 <memset+0xa>
 80028f0:	4770      	bx	lr
 80028f2:	f803 1b01 	strb.w	r1, [r3], #1
 80028f6:	e7f9      	b.n	80028ec <memset+0x4>

080028f8 <_calloc_r>:
 80028f8:	b538      	push	{r3, r4, r5, lr}
 80028fa:	fb02 f401 	mul.w	r4, r2, r1
 80028fe:	4621      	mov	r1, r4
 8002900:	f000 f856 	bl	80029b0 <_malloc_r>
 8002904:	4605      	mov	r5, r0
 8002906:	b118      	cbz	r0, 8002910 <_calloc_r+0x18>
 8002908:	4622      	mov	r2, r4
 800290a:	2100      	movs	r1, #0
 800290c:	f7ff ffec 	bl	80028e8 <memset>
 8002910:	4628      	mov	r0, r5
 8002912:	bd38      	pop	{r3, r4, r5, pc}

08002914 <_free_r>:
 8002914:	b538      	push	{r3, r4, r5, lr}
 8002916:	4605      	mov	r5, r0
 8002918:	2900      	cmp	r1, #0
 800291a:	d045      	beq.n	80029a8 <_free_r+0x94>
 800291c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002920:	1f0c      	subs	r4, r1, #4
 8002922:	2b00      	cmp	r3, #0
 8002924:	bfb8      	it	lt
 8002926:	18e4      	addlt	r4, r4, r3
 8002928:	f003 fa25 	bl	8005d76 <__malloc_lock>
 800292c:	4a1f      	ldr	r2, [pc, #124]	; (80029ac <_free_r+0x98>)
 800292e:	6813      	ldr	r3, [r2, #0]
 8002930:	4610      	mov	r0, r2
 8002932:	b933      	cbnz	r3, 8002942 <_free_r+0x2e>
 8002934:	6063      	str	r3, [r4, #4]
 8002936:	6014      	str	r4, [r2, #0]
 8002938:	4628      	mov	r0, r5
 800293a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800293e:	f003 ba1b 	b.w	8005d78 <__malloc_unlock>
 8002942:	42a3      	cmp	r3, r4
 8002944:	d90c      	bls.n	8002960 <_free_r+0x4c>
 8002946:	6821      	ldr	r1, [r4, #0]
 8002948:	1862      	adds	r2, r4, r1
 800294a:	4293      	cmp	r3, r2
 800294c:	bf04      	itt	eq
 800294e:	681a      	ldreq	r2, [r3, #0]
 8002950:	685b      	ldreq	r3, [r3, #4]
 8002952:	6063      	str	r3, [r4, #4]
 8002954:	bf04      	itt	eq
 8002956:	1852      	addeq	r2, r2, r1
 8002958:	6022      	streq	r2, [r4, #0]
 800295a:	6004      	str	r4, [r0, #0]
 800295c:	e7ec      	b.n	8002938 <_free_r+0x24>
 800295e:	4613      	mov	r3, r2
 8002960:	685a      	ldr	r2, [r3, #4]
 8002962:	b10a      	cbz	r2, 8002968 <_free_r+0x54>
 8002964:	42a2      	cmp	r2, r4
 8002966:	d9fa      	bls.n	800295e <_free_r+0x4a>
 8002968:	6819      	ldr	r1, [r3, #0]
 800296a:	1858      	adds	r0, r3, r1
 800296c:	42a0      	cmp	r0, r4
 800296e:	d10b      	bne.n	8002988 <_free_r+0x74>
 8002970:	6820      	ldr	r0, [r4, #0]
 8002972:	4401      	add	r1, r0
 8002974:	1858      	adds	r0, r3, r1
 8002976:	4282      	cmp	r2, r0
 8002978:	6019      	str	r1, [r3, #0]
 800297a:	d1dd      	bne.n	8002938 <_free_r+0x24>
 800297c:	6810      	ldr	r0, [r2, #0]
 800297e:	6852      	ldr	r2, [r2, #4]
 8002980:	605a      	str	r2, [r3, #4]
 8002982:	4401      	add	r1, r0
 8002984:	6019      	str	r1, [r3, #0]
 8002986:	e7d7      	b.n	8002938 <_free_r+0x24>
 8002988:	d902      	bls.n	8002990 <_free_r+0x7c>
 800298a:	230c      	movs	r3, #12
 800298c:	602b      	str	r3, [r5, #0]
 800298e:	e7d3      	b.n	8002938 <_free_r+0x24>
 8002990:	6820      	ldr	r0, [r4, #0]
 8002992:	1821      	adds	r1, r4, r0
 8002994:	428a      	cmp	r2, r1
 8002996:	bf04      	itt	eq
 8002998:	6811      	ldreq	r1, [r2, #0]
 800299a:	6852      	ldreq	r2, [r2, #4]
 800299c:	6062      	str	r2, [r4, #4]
 800299e:	bf04      	itt	eq
 80029a0:	1809      	addeq	r1, r1, r0
 80029a2:	6021      	streq	r1, [r4, #0]
 80029a4:	605c      	str	r4, [r3, #4]
 80029a6:	e7c7      	b.n	8002938 <_free_r+0x24>
 80029a8:	bd38      	pop	{r3, r4, r5, pc}
 80029aa:	bf00      	nop
 80029ac:	20000444 	.word	0x20000444

080029b0 <_malloc_r>:
 80029b0:	b570      	push	{r4, r5, r6, lr}
 80029b2:	1ccd      	adds	r5, r1, #3
 80029b4:	f025 0503 	bic.w	r5, r5, #3
 80029b8:	3508      	adds	r5, #8
 80029ba:	2d0c      	cmp	r5, #12
 80029bc:	bf38      	it	cc
 80029be:	250c      	movcc	r5, #12
 80029c0:	2d00      	cmp	r5, #0
 80029c2:	4606      	mov	r6, r0
 80029c4:	db01      	blt.n	80029ca <_malloc_r+0x1a>
 80029c6:	42a9      	cmp	r1, r5
 80029c8:	d903      	bls.n	80029d2 <_malloc_r+0x22>
 80029ca:	230c      	movs	r3, #12
 80029cc:	6033      	str	r3, [r6, #0]
 80029ce:	2000      	movs	r0, #0
 80029d0:	bd70      	pop	{r4, r5, r6, pc}
 80029d2:	f003 f9d0 	bl	8005d76 <__malloc_lock>
 80029d6:	4a23      	ldr	r2, [pc, #140]	; (8002a64 <_malloc_r+0xb4>)
 80029d8:	6814      	ldr	r4, [r2, #0]
 80029da:	4621      	mov	r1, r4
 80029dc:	b991      	cbnz	r1, 8002a04 <_malloc_r+0x54>
 80029de:	4c22      	ldr	r4, [pc, #136]	; (8002a68 <_malloc_r+0xb8>)
 80029e0:	6823      	ldr	r3, [r4, #0]
 80029e2:	b91b      	cbnz	r3, 80029ec <_malloc_r+0x3c>
 80029e4:	4630      	mov	r0, r6
 80029e6:	f000 fea9 	bl	800373c <_sbrk_r>
 80029ea:	6020      	str	r0, [r4, #0]
 80029ec:	4629      	mov	r1, r5
 80029ee:	4630      	mov	r0, r6
 80029f0:	f000 fea4 	bl	800373c <_sbrk_r>
 80029f4:	1c43      	adds	r3, r0, #1
 80029f6:	d126      	bne.n	8002a46 <_malloc_r+0x96>
 80029f8:	230c      	movs	r3, #12
 80029fa:	6033      	str	r3, [r6, #0]
 80029fc:	4630      	mov	r0, r6
 80029fe:	f003 f9bb 	bl	8005d78 <__malloc_unlock>
 8002a02:	e7e4      	b.n	80029ce <_malloc_r+0x1e>
 8002a04:	680b      	ldr	r3, [r1, #0]
 8002a06:	1b5b      	subs	r3, r3, r5
 8002a08:	d41a      	bmi.n	8002a40 <_malloc_r+0x90>
 8002a0a:	2b0b      	cmp	r3, #11
 8002a0c:	d90f      	bls.n	8002a2e <_malloc_r+0x7e>
 8002a0e:	600b      	str	r3, [r1, #0]
 8002a10:	50cd      	str	r5, [r1, r3]
 8002a12:	18cc      	adds	r4, r1, r3
 8002a14:	4630      	mov	r0, r6
 8002a16:	f003 f9af 	bl	8005d78 <__malloc_unlock>
 8002a1a:	f104 000b 	add.w	r0, r4, #11
 8002a1e:	1d23      	adds	r3, r4, #4
 8002a20:	f020 0007 	bic.w	r0, r0, #7
 8002a24:	1ac3      	subs	r3, r0, r3
 8002a26:	d01b      	beq.n	8002a60 <_malloc_r+0xb0>
 8002a28:	425a      	negs	r2, r3
 8002a2a:	50e2      	str	r2, [r4, r3]
 8002a2c:	bd70      	pop	{r4, r5, r6, pc}
 8002a2e:	428c      	cmp	r4, r1
 8002a30:	bf0d      	iteet	eq
 8002a32:	6863      	ldreq	r3, [r4, #4]
 8002a34:	684b      	ldrne	r3, [r1, #4]
 8002a36:	6063      	strne	r3, [r4, #4]
 8002a38:	6013      	streq	r3, [r2, #0]
 8002a3a:	bf18      	it	ne
 8002a3c:	460c      	movne	r4, r1
 8002a3e:	e7e9      	b.n	8002a14 <_malloc_r+0x64>
 8002a40:	460c      	mov	r4, r1
 8002a42:	6849      	ldr	r1, [r1, #4]
 8002a44:	e7ca      	b.n	80029dc <_malloc_r+0x2c>
 8002a46:	1cc4      	adds	r4, r0, #3
 8002a48:	f024 0403 	bic.w	r4, r4, #3
 8002a4c:	42a0      	cmp	r0, r4
 8002a4e:	d005      	beq.n	8002a5c <_malloc_r+0xac>
 8002a50:	1a21      	subs	r1, r4, r0
 8002a52:	4630      	mov	r0, r6
 8002a54:	f000 fe72 	bl	800373c <_sbrk_r>
 8002a58:	3001      	adds	r0, #1
 8002a5a:	d0cd      	beq.n	80029f8 <_malloc_r+0x48>
 8002a5c:	6025      	str	r5, [r4, #0]
 8002a5e:	e7d9      	b.n	8002a14 <_malloc_r+0x64>
 8002a60:	bd70      	pop	{r4, r5, r6, pc}
 8002a62:	bf00      	nop
 8002a64:	20000444 	.word	0x20000444
 8002a68:	20000448 	.word	0x20000448

08002a6c <__cvt>:
 8002a6c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002a70:	ec55 4b10 	vmov	r4, r5, d0
 8002a74:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8002a76:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8002a7a:	2d00      	cmp	r5, #0
 8002a7c:	460e      	mov	r6, r1
 8002a7e:	4691      	mov	r9, r2
 8002a80:	4619      	mov	r1, r3
 8002a82:	bfb8      	it	lt
 8002a84:	4622      	movlt	r2, r4
 8002a86:	462b      	mov	r3, r5
 8002a88:	f027 0720 	bic.w	r7, r7, #32
 8002a8c:	bfbb      	ittet	lt
 8002a8e:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8002a92:	461d      	movlt	r5, r3
 8002a94:	2300      	movge	r3, #0
 8002a96:	232d      	movlt	r3, #45	; 0x2d
 8002a98:	bfb8      	it	lt
 8002a9a:	4614      	movlt	r4, r2
 8002a9c:	2f46      	cmp	r7, #70	; 0x46
 8002a9e:	700b      	strb	r3, [r1, #0]
 8002aa0:	d004      	beq.n	8002aac <__cvt+0x40>
 8002aa2:	2f45      	cmp	r7, #69	; 0x45
 8002aa4:	d100      	bne.n	8002aa8 <__cvt+0x3c>
 8002aa6:	3601      	adds	r6, #1
 8002aa8:	2102      	movs	r1, #2
 8002aaa:	e000      	b.n	8002aae <__cvt+0x42>
 8002aac:	2103      	movs	r1, #3
 8002aae:	ab03      	add	r3, sp, #12
 8002ab0:	9301      	str	r3, [sp, #4]
 8002ab2:	ab02      	add	r3, sp, #8
 8002ab4:	9300      	str	r3, [sp, #0]
 8002ab6:	4632      	mov	r2, r6
 8002ab8:	4653      	mov	r3, sl
 8002aba:	ec45 4b10 	vmov	d0, r4, r5
 8002abe:	f001 fe5f 	bl	8004780 <_dtoa_r>
 8002ac2:	2f47      	cmp	r7, #71	; 0x47
 8002ac4:	4680      	mov	r8, r0
 8002ac6:	d102      	bne.n	8002ace <__cvt+0x62>
 8002ac8:	f019 0f01 	tst.w	r9, #1
 8002acc:	d026      	beq.n	8002b1c <__cvt+0xb0>
 8002ace:	2f46      	cmp	r7, #70	; 0x46
 8002ad0:	eb08 0906 	add.w	r9, r8, r6
 8002ad4:	d111      	bne.n	8002afa <__cvt+0x8e>
 8002ad6:	f898 3000 	ldrb.w	r3, [r8]
 8002ada:	2b30      	cmp	r3, #48	; 0x30
 8002adc:	d10a      	bne.n	8002af4 <__cvt+0x88>
 8002ade:	2200      	movs	r2, #0
 8002ae0:	2300      	movs	r3, #0
 8002ae2:	4620      	mov	r0, r4
 8002ae4:	4629      	mov	r1, r5
 8002ae6:	f7fe f841 	bl	8000b6c <__aeabi_dcmpeq>
 8002aea:	b918      	cbnz	r0, 8002af4 <__cvt+0x88>
 8002aec:	f1c6 0601 	rsb	r6, r6, #1
 8002af0:	f8ca 6000 	str.w	r6, [sl]
 8002af4:	f8da 3000 	ldr.w	r3, [sl]
 8002af8:	4499      	add	r9, r3
 8002afa:	2200      	movs	r2, #0
 8002afc:	2300      	movs	r3, #0
 8002afe:	4620      	mov	r0, r4
 8002b00:	4629      	mov	r1, r5
 8002b02:	f7fe f833 	bl	8000b6c <__aeabi_dcmpeq>
 8002b06:	b938      	cbnz	r0, 8002b18 <__cvt+0xac>
 8002b08:	2230      	movs	r2, #48	; 0x30
 8002b0a:	9b03      	ldr	r3, [sp, #12]
 8002b0c:	4599      	cmp	r9, r3
 8002b0e:	d905      	bls.n	8002b1c <__cvt+0xb0>
 8002b10:	1c59      	adds	r1, r3, #1
 8002b12:	9103      	str	r1, [sp, #12]
 8002b14:	701a      	strb	r2, [r3, #0]
 8002b16:	e7f8      	b.n	8002b0a <__cvt+0x9e>
 8002b18:	f8cd 900c 	str.w	r9, [sp, #12]
 8002b1c:	9b03      	ldr	r3, [sp, #12]
 8002b1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002b20:	eba3 0308 	sub.w	r3, r3, r8
 8002b24:	4640      	mov	r0, r8
 8002b26:	6013      	str	r3, [r2, #0]
 8002b28:	b004      	add	sp, #16
 8002b2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08002b2e <__exponent>:
 8002b2e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002b30:	4603      	mov	r3, r0
 8002b32:	2900      	cmp	r1, #0
 8002b34:	bfb8      	it	lt
 8002b36:	4249      	neglt	r1, r1
 8002b38:	f803 2b02 	strb.w	r2, [r3], #2
 8002b3c:	bfb4      	ite	lt
 8002b3e:	222d      	movlt	r2, #45	; 0x2d
 8002b40:	222b      	movge	r2, #43	; 0x2b
 8002b42:	2909      	cmp	r1, #9
 8002b44:	7042      	strb	r2, [r0, #1]
 8002b46:	dd20      	ble.n	8002b8a <__exponent+0x5c>
 8002b48:	f10d 0207 	add.w	r2, sp, #7
 8002b4c:	4617      	mov	r7, r2
 8002b4e:	260a      	movs	r6, #10
 8002b50:	fb91 f5f6 	sdiv	r5, r1, r6
 8002b54:	fb06 1115 	mls	r1, r6, r5, r1
 8002b58:	3130      	adds	r1, #48	; 0x30
 8002b5a:	2d09      	cmp	r5, #9
 8002b5c:	f802 1c01 	strb.w	r1, [r2, #-1]
 8002b60:	f102 34ff 	add.w	r4, r2, #4294967295
 8002b64:	4629      	mov	r1, r5
 8002b66:	dc09      	bgt.n	8002b7c <__exponent+0x4e>
 8002b68:	3130      	adds	r1, #48	; 0x30
 8002b6a:	3a02      	subs	r2, #2
 8002b6c:	f804 1c01 	strb.w	r1, [r4, #-1]
 8002b70:	42ba      	cmp	r2, r7
 8002b72:	461c      	mov	r4, r3
 8002b74:	d304      	bcc.n	8002b80 <__exponent+0x52>
 8002b76:	1a20      	subs	r0, r4, r0
 8002b78:	b003      	add	sp, #12
 8002b7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b7c:	4622      	mov	r2, r4
 8002b7e:	e7e7      	b.n	8002b50 <__exponent+0x22>
 8002b80:	f812 1b01 	ldrb.w	r1, [r2], #1
 8002b84:	f803 1b01 	strb.w	r1, [r3], #1
 8002b88:	e7f2      	b.n	8002b70 <__exponent+0x42>
 8002b8a:	2230      	movs	r2, #48	; 0x30
 8002b8c:	461c      	mov	r4, r3
 8002b8e:	4411      	add	r1, r2
 8002b90:	f804 2b02 	strb.w	r2, [r4], #2
 8002b94:	7059      	strb	r1, [r3, #1]
 8002b96:	e7ee      	b.n	8002b76 <__exponent+0x48>

08002b98 <_printf_float>:
 8002b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b9c:	b08d      	sub	sp, #52	; 0x34
 8002b9e:	460c      	mov	r4, r1
 8002ba0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8002ba4:	4616      	mov	r6, r2
 8002ba6:	461f      	mov	r7, r3
 8002ba8:	4605      	mov	r5, r0
 8002baa:	f003 f855 	bl	8005c58 <_localeconv_r>
 8002bae:	6803      	ldr	r3, [r0, #0]
 8002bb0:	9304      	str	r3, [sp, #16]
 8002bb2:	4618      	mov	r0, r3
 8002bb4:	f7fd ff2c 	bl	8000a10 <strlen>
 8002bb8:	2300      	movs	r3, #0
 8002bba:	930a      	str	r3, [sp, #40]	; 0x28
 8002bbc:	f8d8 3000 	ldr.w	r3, [r8]
 8002bc0:	9005      	str	r0, [sp, #20]
 8002bc2:	3307      	adds	r3, #7
 8002bc4:	f023 0307 	bic.w	r3, r3, #7
 8002bc8:	f103 0208 	add.w	r2, r3, #8
 8002bcc:	f894 a018 	ldrb.w	sl, [r4, #24]
 8002bd0:	f8d4 b000 	ldr.w	fp, [r4]
 8002bd4:	f8c8 2000 	str.w	r2, [r8]
 8002bd8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bdc:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8002be0:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8002be4:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8002be8:	9307      	str	r3, [sp, #28]
 8002bea:	f8cd 8018 	str.w	r8, [sp, #24]
 8002bee:	f04f 32ff 	mov.w	r2, #4294967295
 8002bf2:	4ba5      	ldr	r3, [pc, #660]	; (8002e88 <_printf_float+0x2f0>)
 8002bf4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002bf8:	f7fd ffea 	bl	8000bd0 <__aeabi_dcmpun>
 8002bfc:	2800      	cmp	r0, #0
 8002bfe:	f040 81fb 	bne.w	8002ff8 <_printf_float+0x460>
 8002c02:	f04f 32ff 	mov.w	r2, #4294967295
 8002c06:	4ba0      	ldr	r3, [pc, #640]	; (8002e88 <_printf_float+0x2f0>)
 8002c08:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002c0c:	f7fd ffc2 	bl	8000b94 <__aeabi_dcmple>
 8002c10:	2800      	cmp	r0, #0
 8002c12:	f040 81f1 	bne.w	8002ff8 <_printf_float+0x460>
 8002c16:	2200      	movs	r2, #0
 8002c18:	2300      	movs	r3, #0
 8002c1a:	4640      	mov	r0, r8
 8002c1c:	4649      	mov	r1, r9
 8002c1e:	f7fd ffaf 	bl	8000b80 <__aeabi_dcmplt>
 8002c22:	b110      	cbz	r0, 8002c2a <_printf_float+0x92>
 8002c24:	232d      	movs	r3, #45	; 0x2d
 8002c26:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002c2a:	4b98      	ldr	r3, [pc, #608]	; (8002e8c <_printf_float+0x2f4>)
 8002c2c:	4a98      	ldr	r2, [pc, #608]	; (8002e90 <_printf_float+0x2f8>)
 8002c2e:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 8002c32:	bf8c      	ite	hi
 8002c34:	4690      	movhi	r8, r2
 8002c36:	4698      	movls	r8, r3
 8002c38:	2303      	movs	r3, #3
 8002c3a:	f02b 0204 	bic.w	r2, fp, #4
 8002c3e:	6123      	str	r3, [r4, #16]
 8002c40:	6022      	str	r2, [r4, #0]
 8002c42:	f04f 0900 	mov.w	r9, #0
 8002c46:	9700      	str	r7, [sp, #0]
 8002c48:	4633      	mov	r3, r6
 8002c4a:	aa0b      	add	r2, sp, #44	; 0x2c
 8002c4c:	4621      	mov	r1, r4
 8002c4e:	4628      	mov	r0, r5
 8002c50:	f000 f9e2 	bl	8003018 <_printf_common>
 8002c54:	3001      	adds	r0, #1
 8002c56:	f040 8093 	bne.w	8002d80 <_printf_float+0x1e8>
 8002c5a:	f04f 30ff 	mov.w	r0, #4294967295
 8002c5e:	b00d      	add	sp, #52	; 0x34
 8002c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c64:	6861      	ldr	r1, [r4, #4]
 8002c66:	1c4b      	adds	r3, r1, #1
 8002c68:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
 8002c6c:	d13f      	bne.n	8002cee <_printf_float+0x156>
 8002c6e:	2306      	movs	r3, #6
 8002c70:	6063      	str	r3, [r4, #4]
 8002c72:	2300      	movs	r3, #0
 8002c74:	9303      	str	r3, [sp, #12]
 8002c76:	ab0a      	add	r3, sp, #40	; 0x28
 8002c78:	9302      	str	r3, [sp, #8]
 8002c7a:	ab09      	add	r3, sp, #36	; 0x24
 8002c7c:	9300      	str	r3, [sp, #0]
 8002c7e:	ec49 8b10 	vmov	d0, r8, r9
 8002c82:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8002c86:	6022      	str	r2, [r4, #0]
 8002c88:	f8cd a004 	str.w	sl, [sp, #4]
 8002c8c:	6861      	ldr	r1, [r4, #4]
 8002c8e:	4628      	mov	r0, r5
 8002c90:	f7ff feec 	bl	8002a6c <__cvt>
 8002c94:	f00a 03df 	and.w	r3, sl, #223	; 0xdf
 8002c98:	2b47      	cmp	r3, #71	; 0x47
 8002c9a:	4680      	mov	r8, r0
 8002c9c:	d109      	bne.n	8002cb2 <_printf_float+0x11a>
 8002c9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002ca0:	1cd8      	adds	r0, r3, #3
 8002ca2:	db02      	blt.n	8002caa <_printf_float+0x112>
 8002ca4:	6862      	ldr	r2, [r4, #4]
 8002ca6:	4293      	cmp	r3, r2
 8002ca8:	dd57      	ble.n	8002d5a <_printf_float+0x1c2>
 8002caa:	f1aa 0a02 	sub.w	sl, sl, #2
 8002cae:	fa5f fa8a 	uxtb.w	sl, sl
 8002cb2:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 8002cb6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002cb8:	d834      	bhi.n	8002d24 <_printf_float+0x18c>
 8002cba:	3901      	subs	r1, #1
 8002cbc:	4652      	mov	r2, sl
 8002cbe:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002cc2:	9109      	str	r1, [sp, #36]	; 0x24
 8002cc4:	f7ff ff33 	bl	8002b2e <__exponent>
 8002cc8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002cca:	1883      	adds	r3, r0, r2
 8002ccc:	2a01      	cmp	r2, #1
 8002cce:	4681      	mov	r9, r0
 8002cd0:	6123      	str	r3, [r4, #16]
 8002cd2:	dc02      	bgt.n	8002cda <_printf_float+0x142>
 8002cd4:	6822      	ldr	r2, [r4, #0]
 8002cd6:	07d1      	lsls	r1, r2, #31
 8002cd8:	d501      	bpl.n	8002cde <_printf_float+0x146>
 8002cda:	3301      	adds	r3, #1
 8002cdc:	6123      	str	r3, [r4, #16]
 8002cde:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8002ce2:	2b00      	cmp	r3, #0
 8002ce4:	d0af      	beq.n	8002c46 <_printf_float+0xae>
 8002ce6:	232d      	movs	r3, #45	; 0x2d
 8002ce8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002cec:	e7ab      	b.n	8002c46 <_printf_float+0xae>
 8002cee:	f1ba 0f67 	cmp.w	sl, #103	; 0x67
 8002cf2:	d002      	beq.n	8002cfa <_printf_float+0x162>
 8002cf4:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 8002cf8:	d1bb      	bne.n	8002c72 <_printf_float+0xda>
 8002cfa:	b189      	cbz	r1, 8002d20 <_printf_float+0x188>
 8002cfc:	2300      	movs	r3, #0
 8002cfe:	9303      	str	r3, [sp, #12]
 8002d00:	ab0a      	add	r3, sp, #40	; 0x28
 8002d02:	9302      	str	r3, [sp, #8]
 8002d04:	ab09      	add	r3, sp, #36	; 0x24
 8002d06:	9300      	str	r3, [sp, #0]
 8002d08:	ec49 8b10 	vmov	d0, r8, r9
 8002d0c:	6022      	str	r2, [r4, #0]
 8002d0e:	f8cd a004 	str.w	sl, [sp, #4]
 8002d12:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8002d16:	4628      	mov	r0, r5
 8002d18:	f7ff fea8 	bl	8002a6c <__cvt>
 8002d1c:	4680      	mov	r8, r0
 8002d1e:	e7be      	b.n	8002c9e <_printf_float+0x106>
 8002d20:	2301      	movs	r3, #1
 8002d22:	e7a5      	b.n	8002c70 <_printf_float+0xd8>
 8002d24:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
 8002d28:	d119      	bne.n	8002d5e <_printf_float+0x1c6>
 8002d2a:	2900      	cmp	r1, #0
 8002d2c:	6863      	ldr	r3, [r4, #4]
 8002d2e:	dd0c      	ble.n	8002d4a <_printf_float+0x1b2>
 8002d30:	6121      	str	r1, [r4, #16]
 8002d32:	b913      	cbnz	r3, 8002d3a <_printf_float+0x1a2>
 8002d34:	6822      	ldr	r2, [r4, #0]
 8002d36:	07d2      	lsls	r2, r2, #31
 8002d38:	d502      	bpl.n	8002d40 <_printf_float+0x1a8>
 8002d3a:	3301      	adds	r3, #1
 8002d3c:	440b      	add	r3, r1
 8002d3e:	6123      	str	r3, [r4, #16]
 8002d40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002d42:	65a3      	str	r3, [r4, #88]	; 0x58
 8002d44:	f04f 0900 	mov.w	r9, #0
 8002d48:	e7c9      	b.n	8002cde <_printf_float+0x146>
 8002d4a:	b913      	cbnz	r3, 8002d52 <_printf_float+0x1ba>
 8002d4c:	6822      	ldr	r2, [r4, #0]
 8002d4e:	07d0      	lsls	r0, r2, #31
 8002d50:	d501      	bpl.n	8002d56 <_printf_float+0x1be>
 8002d52:	3302      	adds	r3, #2
 8002d54:	e7f3      	b.n	8002d3e <_printf_float+0x1a6>
 8002d56:	2301      	movs	r3, #1
 8002d58:	e7f1      	b.n	8002d3e <_printf_float+0x1a6>
 8002d5a:	f04f 0a67 	mov.w	sl, #103	; 0x67
 8002d5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002d60:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002d62:	4293      	cmp	r3, r2
 8002d64:	db05      	blt.n	8002d72 <_printf_float+0x1da>
 8002d66:	6822      	ldr	r2, [r4, #0]
 8002d68:	6123      	str	r3, [r4, #16]
 8002d6a:	07d1      	lsls	r1, r2, #31
 8002d6c:	d5e8      	bpl.n	8002d40 <_printf_float+0x1a8>
 8002d6e:	3301      	adds	r3, #1
 8002d70:	e7e5      	b.n	8002d3e <_printf_float+0x1a6>
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	bfd4      	ite	le
 8002d76:	f1c3 0302 	rsble	r3, r3, #2
 8002d7a:	2301      	movgt	r3, #1
 8002d7c:	4413      	add	r3, r2
 8002d7e:	e7de      	b.n	8002d3e <_printf_float+0x1a6>
 8002d80:	6823      	ldr	r3, [r4, #0]
 8002d82:	055a      	lsls	r2, r3, #21
 8002d84:	d407      	bmi.n	8002d96 <_printf_float+0x1fe>
 8002d86:	6923      	ldr	r3, [r4, #16]
 8002d88:	4642      	mov	r2, r8
 8002d8a:	4631      	mov	r1, r6
 8002d8c:	4628      	mov	r0, r5
 8002d8e:	47b8      	blx	r7
 8002d90:	3001      	adds	r0, #1
 8002d92:	d12b      	bne.n	8002dec <_printf_float+0x254>
 8002d94:	e761      	b.n	8002c5a <_printf_float+0xc2>
 8002d96:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 8002d9a:	f240 80e2 	bls.w	8002f62 <_printf_float+0x3ca>
 8002d9e:	2200      	movs	r2, #0
 8002da0:	2300      	movs	r3, #0
 8002da2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002da6:	f7fd fee1 	bl	8000b6c <__aeabi_dcmpeq>
 8002daa:	2800      	cmp	r0, #0
 8002dac:	d03c      	beq.n	8002e28 <_printf_float+0x290>
 8002dae:	2301      	movs	r3, #1
 8002db0:	4a38      	ldr	r2, [pc, #224]	; (8002e94 <_printf_float+0x2fc>)
 8002db2:	4631      	mov	r1, r6
 8002db4:	4628      	mov	r0, r5
 8002db6:	47b8      	blx	r7
 8002db8:	3001      	adds	r0, #1
 8002dba:	f43f af4e 	beq.w	8002c5a <_printf_float+0xc2>
 8002dbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002dc0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002dc2:	429a      	cmp	r2, r3
 8002dc4:	db02      	blt.n	8002dcc <_printf_float+0x234>
 8002dc6:	6823      	ldr	r3, [r4, #0]
 8002dc8:	07d8      	lsls	r0, r3, #31
 8002dca:	d50f      	bpl.n	8002dec <_printf_float+0x254>
 8002dcc:	9b05      	ldr	r3, [sp, #20]
 8002dce:	9a04      	ldr	r2, [sp, #16]
 8002dd0:	4631      	mov	r1, r6
 8002dd2:	4628      	mov	r0, r5
 8002dd4:	47b8      	blx	r7
 8002dd6:	3001      	adds	r0, #1
 8002dd8:	f43f af3f 	beq.w	8002c5a <_printf_float+0xc2>
 8002ddc:	f04f 0800 	mov.w	r8, #0
 8002de0:	f104 091a 	add.w	r9, r4, #26
 8002de4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002de6:	3b01      	subs	r3, #1
 8002de8:	4598      	cmp	r8, r3
 8002dea:	db12      	blt.n	8002e12 <_printf_float+0x27a>
 8002dec:	6823      	ldr	r3, [r4, #0]
 8002dee:	079b      	lsls	r3, r3, #30
 8002df0:	d509      	bpl.n	8002e06 <_printf_float+0x26e>
 8002df2:	f04f 0800 	mov.w	r8, #0
 8002df6:	f104 0919 	add.w	r9, r4, #25
 8002dfa:	68e3      	ldr	r3, [r4, #12]
 8002dfc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002dfe:	1a9b      	subs	r3, r3, r2
 8002e00:	4598      	cmp	r8, r3
 8002e02:	f2c0 80ee 	blt.w	8002fe2 <_printf_float+0x44a>
 8002e06:	68e0      	ldr	r0, [r4, #12]
 8002e08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002e0a:	4298      	cmp	r0, r3
 8002e0c:	bfb8      	it	lt
 8002e0e:	4618      	movlt	r0, r3
 8002e10:	e725      	b.n	8002c5e <_printf_float+0xc6>
 8002e12:	2301      	movs	r3, #1
 8002e14:	464a      	mov	r2, r9
 8002e16:	4631      	mov	r1, r6
 8002e18:	4628      	mov	r0, r5
 8002e1a:	47b8      	blx	r7
 8002e1c:	3001      	adds	r0, #1
 8002e1e:	f43f af1c 	beq.w	8002c5a <_printf_float+0xc2>
 8002e22:	f108 0801 	add.w	r8, r8, #1
 8002e26:	e7dd      	b.n	8002de4 <_printf_float+0x24c>
 8002e28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002e2a:	2b00      	cmp	r3, #0
 8002e2c:	dc34      	bgt.n	8002e98 <_printf_float+0x300>
 8002e2e:	2301      	movs	r3, #1
 8002e30:	4a18      	ldr	r2, [pc, #96]	; (8002e94 <_printf_float+0x2fc>)
 8002e32:	4631      	mov	r1, r6
 8002e34:	4628      	mov	r0, r5
 8002e36:	47b8      	blx	r7
 8002e38:	3001      	adds	r0, #1
 8002e3a:	f43f af0e 	beq.w	8002c5a <_printf_float+0xc2>
 8002e3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002e40:	b923      	cbnz	r3, 8002e4c <_printf_float+0x2b4>
 8002e42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002e44:	b913      	cbnz	r3, 8002e4c <_printf_float+0x2b4>
 8002e46:	6823      	ldr	r3, [r4, #0]
 8002e48:	07d9      	lsls	r1, r3, #31
 8002e4a:	d5cf      	bpl.n	8002dec <_printf_float+0x254>
 8002e4c:	9b05      	ldr	r3, [sp, #20]
 8002e4e:	9a04      	ldr	r2, [sp, #16]
 8002e50:	4631      	mov	r1, r6
 8002e52:	4628      	mov	r0, r5
 8002e54:	47b8      	blx	r7
 8002e56:	3001      	adds	r0, #1
 8002e58:	f43f aeff 	beq.w	8002c5a <_printf_float+0xc2>
 8002e5c:	f04f 0900 	mov.w	r9, #0
 8002e60:	f104 0a1a 	add.w	sl, r4, #26
 8002e64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002e66:	425b      	negs	r3, r3
 8002e68:	4599      	cmp	r9, r3
 8002e6a:	db01      	blt.n	8002e70 <_printf_float+0x2d8>
 8002e6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002e6e:	e78b      	b.n	8002d88 <_printf_float+0x1f0>
 8002e70:	2301      	movs	r3, #1
 8002e72:	4652      	mov	r2, sl
 8002e74:	4631      	mov	r1, r6
 8002e76:	4628      	mov	r0, r5
 8002e78:	47b8      	blx	r7
 8002e7a:	3001      	adds	r0, #1
 8002e7c:	f43f aeed 	beq.w	8002c5a <_printf_float+0xc2>
 8002e80:	f109 0901 	add.w	r9, r9, #1
 8002e84:	e7ee      	b.n	8002e64 <_printf_float+0x2cc>
 8002e86:	bf00      	nop
 8002e88:	7fefffff 	.word	0x7fefffff
 8002e8c:	08006f90 	.word	0x08006f90
 8002e90:	08006f94 	.word	0x08006f94
 8002e94:	08006fa0 	.word	0x08006fa0
 8002e98:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002e9a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8002e9c:	429a      	cmp	r2, r3
 8002e9e:	bfa8      	it	ge
 8002ea0:	461a      	movge	r2, r3
 8002ea2:	2a00      	cmp	r2, #0
 8002ea4:	4691      	mov	r9, r2
 8002ea6:	dc38      	bgt.n	8002f1a <_printf_float+0x382>
 8002ea8:	f104 031a 	add.w	r3, r4, #26
 8002eac:	f04f 0b00 	mov.w	fp, #0
 8002eb0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002eb4:	9306      	str	r3, [sp, #24]
 8002eb6:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8002eba:	ebaa 0309 	sub.w	r3, sl, r9
 8002ebe:	459b      	cmp	fp, r3
 8002ec0:	db33      	blt.n	8002f2a <_printf_float+0x392>
 8002ec2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002ec4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002ec6:	429a      	cmp	r2, r3
 8002ec8:	db3a      	blt.n	8002f40 <_printf_float+0x3a8>
 8002eca:	6823      	ldr	r3, [r4, #0]
 8002ecc:	07da      	lsls	r2, r3, #31
 8002ece:	d437      	bmi.n	8002f40 <_printf_float+0x3a8>
 8002ed0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002ed2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002ed4:	eba3 020a 	sub.w	r2, r3, sl
 8002ed8:	eba3 0901 	sub.w	r9, r3, r1
 8002edc:	4591      	cmp	r9, r2
 8002ede:	bfa8      	it	ge
 8002ee0:	4691      	movge	r9, r2
 8002ee2:	f1b9 0f00 	cmp.w	r9, #0
 8002ee6:	dc33      	bgt.n	8002f50 <_printf_float+0x3b8>
 8002ee8:	f04f 0800 	mov.w	r8, #0
 8002eec:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002ef0:	f104 0a1a 	add.w	sl, r4, #26
 8002ef4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002ef6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002ef8:	1a9b      	subs	r3, r3, r2
 8002efa:	eba3 0309 	sub.w	r3, r3, r9
 8002efe:	4598      	cmp	r8, r3
 8002f00:	f6bf af74 	bge.w	8002dec <_printf_float+0x254>
 8002f04:	2301      	movs	r3, #1
 8002f06:	4652      	mov	r2, sl
 8002f08:	4631      	mov	r1, r6
 8002f0a:	4628      	mov	r0, r5
 8002f0c:	47b8      	blx	r7
 8002f0e:	3001      	adds	r0, #1
 8002f10:	f43f aea3 	beq.w	8002c5a <_printf_float+0xc2>
 8002f14:	f108 0801 	add.w	r8, r8, #1
 8002f18:	e7ec      	b.n	8002ef4 <_printf_float+0x35c>
 8002f1a:	4613      	mov	r3, r2
 8002f1c:	4631      	mov	r1, r6
 8002f1e:	4642      	mov	r2, r8
 8002f20:	4628      	mov	r0, r5
 8002f22:	47b8      	blx	r7
 8002f24:	3001      	adds	r0, #1
 8002f26:	d1bf      	bne.n	8002ea8 <_printf_float+0x310>
 8002f28:	e697      	b.n	8002c5a <_printf_float+0xc2>
 8002f2a:	2301      	movs	r3, #1
 8002f2c:	9a06      	ldr	r2, [sp, #24]
 8002f2e:	4631      	mov	r1, r6
 8002f30:	4628      	mov	r0, r5
 8002f32:	47b8      	blx	r7
 8002f34:	3001      	adds	r0, #1
 8002f36:	f43f ae90 	beq.w	8002c5a <_printf_float+0xc2>
 8002f3a:	f10b 0b01 	add.w	fp, fp, #1
 8002f3e:	e7ba      	b.n	8002eb6 <_printf_float+0x31e>
 8002f40:	9b05      	ldr	r3, [sp, #20]
 8002f42:	9a04      	ldr	r2, [sp, #16]
 8002f44:	4631      	mov	r1, r6
 8002f46:	4628      	mov	r0, r5
 8002f48:	47b8      	blx	r7
 8002f4a:	3001      	adds	r0, #1
 8002f4c:	d1c0      	bne.n	8002ed0 <_printf_float+0x338>
 8002f4e:	e684      	b.n	8002c5a <_printf_float+0xc2>
 8002f50:	464b      	mov	r3, r9
 8002f52:	eb08 020a 	add.w	r2, r8, sl
 8002f56:	4631      	mov	r1, r6
 8002f58:	4628      	mov	r0, r5
 8002f5a:	47b8      	blx	r7
 8002f5c:	3001      	adds	r0, #1
 8002f5e:	d1c3      	bne.n	8002ee8 <_printf_float+0x350>
 8002f60:	e67b      	b.n	8002c5a <_printf_float+0xc2>
 8002f62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002f64:	2a01      	cmp	r2, #1
 8002f66:	dc01      	bgt.n	8002f6c <_printf_float+0x3d4>
 8002f68:	07db      	lsls	r3, r3, #31
 8002f6a:	d537      	bpl.n	8002fdc <_printf_float+0x444>
 8002f6c:	2301      	movs	r3, #1
 8002f6e:	4642      	mov	r2, r8
 8002f70:	4631      	mov	r1, r6
 8002f72:	4628      	mov	r0, r5
 8002f74:	47b8      	blx	r7
 8002f76:	3001      	adds	r0, #1
 8002f78:	f43f ae6f 	beq.w	8002c5a <_printf_float+0xc2>
 8002f7c:	9b05      	ldr	r3, [sp, #20]
 8002f7e:	9a04      	ldr	r2, [sp, #16]
 8002f80:	4631      	mov	r1, r6
 8002f82:	4628      	mov	r0, r5
 8002f84:	47b8      	blx	r7
 8002f86:	3001      	adds	r0, #1
 8002f88:	f43f ae67 	beq.w	8002c5a <_printf_float+0xc2>
 8002f8c:	2200      	movs	r2, #0
 8002f8e:	2300      	movs	r3, #0
 8002f90:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002f94:	f7fd fdea 	bl	8000b6c <__aeabi_dcmpeq>
 8002f98:	b158      	cbz	r0, 8002fb2 <_printf_float+0x41a>
 8002f9a:	f04f 0800 	mov.w	r8, #0
 8002f9e:	f104 0a1a 	add.w	sl, r4, #26
 8002fa2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002fa4:	3b01      	subs	r3, #1
 8002fa6:	4598      	cmp	r8, r3
 8002fa8:	db0d      	blt.n	8002fc6 <_printf_float+0x42e>
 8002faa:	464b      	mov	r3, r9
 8002fac:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8002fb0:	e6eb      	b.n	8002d8a <_printf_float+0x1f2>
 8002fb2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002fb4:	f108 0201 	add.w	r2, r8, #1
 8002fb8:	3b01      	subs	r3, #1
 8002fba:	4631      	mov	r1, r6
 8002fbc:	4628      	mov	r0, r5
 8002fbe:	47b8      	blx	r7
 8002fc0:	3001      	adds	r0, #1
 8002fc2:	d1f2      	bne.n	8002faa <_printf_float+0x412>
 8002fc4:	e649      	b.n	8002c5a <_printf_float+0xc2>
 8002fc6:	2301      	movs	r3, #1
 8002fc8:	4652      	mov	r2, sl
 8002fca:	4631      	mov	r1, r6
 8002fcc:	4628      	mov	r0, r5
 8002fce:	47b8      	blx	r7
 8002fd0:	3001      	adds	r0, #1
 8002fd2:	f43f ae42 	beq.w	8002c5a <_printf_float+0xc2>
 8002fd6:	f108 0801 	add.w	r8, r8, #1
 8002fda:	e7e2      	b.n	8002fa2 <_printf_float+0x40a>
 8002fdc:	2301      	movs	r3, #1
 8002fde:	4642      	mov	r2, r8
 8002fe0:	e7eb      	b.n	8002fba <_printf_float+0x422>
 8002fe2:	2301      	movs	r3, #1
 8002fe4:	464a      	mov	r2, r9
 8002fe6:	4631      	mov	r1, r6
 8002fe8:	4628      	mov	r0, r5
 8002fea:	47b8      	blx	r7
 8002fec:	3001      	adds	r0, #1
 8002fee:	f43f ae34 	beq.w	8002c5a <_printf_float+0xc2>
 8002ff2:	f108 0801 	add.w	r8, r8, #1
 8002ff6:	e700      	b.n	8002dfa <_printf_float+0x262>
 8002ff8:	4642      	mov	r2, r8
 8002ffa:	464b      	mov	r3, r9
 8002ffc:	4640      	mov	r0, r8
 8002ffe:	4649      	mov	r1, r9
 8003000:	f7fd fde6 	bl	8000bd0 <__aeabi_dcmpun>
 8003004:	2800      	cmp	r0, #0
 8003006:	f43f ae2d 	beq.w	8002c64 <_printf_float+0xcc>
 800300a:	4b01      	ldr	r3, [pc, #4]	; (8003010 <_printf_float+0x478>)
 800300c:	4a01      	ldr	r2, [pc, #4]	; (8003014 <_printf_float+0x47c>)
 800300e:	e60e      	b.n	8002c2e <_printf_float+0x96>
 8003010:	08006f98 	.word	0x08006f98
 8003014:	08006f9c 	.word	0x08006f9c

08003018 <_printf_common>:
 8003018:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800301c:	4691      	mov	r9, r2
 800301e:	461f      	mov	r7, r3
 8003020:	688a      	ldr	r2, [r1, #8]
 8003022:	690b      	ldr	r3, [r1, #16]
 8003024:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003028:	4293      	cmp	r3, r2
 800302a:	bfb8      	it	lt
 800302c:	4613      	movlt	r3, r2
 800302e:	f8c9 3000 	str.w	r3, [r9]
 8003032:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003036:	4606      	mov	r6, r0
 8003038:	460c      	mov	r4, r1
 800303a:	b112      	cbz	r2, 8003042 <_printf_common+0x2a>
 800303c:	3301      	adds	r3, #1
 800303e:	f8c9 3000 	str.w	r3, [r9]
 8003042:	6823      	ldr	r3, [r4, #0]
 8003044:	0699      	lsls	r1, r3, #26
 8003046:	bf42      	ittt	mi
 8003048:	f8d9 3000 	ldrmi.w	r3, [r9]
 800304c:	3302      	addmi	r3, #2
 800304e:	f8c9 3000 	strmi.w	r3, [r9]
 8003052:	6825      	ldr	r5, [r4, #0]
 8003054:	f015 0506 	ands.w	r5, r5, #6
 8003058:	d107      	bne.n	800306a <_printf_common+0x52>
 800305a:	f104 0a19 	add.w	sl, r4, #25
 800305e:	68e3      	ldr	r3, [r4, #12]
 8003060:	f8d9 2000 	ldr.w	r2, [r9]
 8003064:	1a9b      	subs	r3, r3, r2
 8003066:	429d      	cmp	r5, r3
 8003068:	db29      	blt.n	80030be <_printf_common+0xa6>
 800306a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800306e:	6822      	ldr	r2, [r4, #0]
 8003070:	3300      	adds	r3, #0
 8003072:	bf18      	it	ne
 8003074:	2301      	movne	r3, #1
 8003076:	0692      	lsls	r2, r2, #26
 8003078:	d42e      	bmi.n	80030d8 <_printf_common+0xc0>
 800307a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800307e:	4639      	mov	r1, r7
 8003080:	4630      	mov	r0, r6
 8003082:	47c0      	blx	r8
 8003084:	3001      	adds	r0, #1
 8003086:	d021      	beq.n	80030cc <_printf_common+0xb4>
 8003088:	6823      	ldr	r3, [r4, #0]
 800308a:	68e5      	ldr	r5, [r4, #12]
 800308c:	f8d9 2000 	ldr.w	r2, [r9]
 8003090:	f003 0306 	and.w	r3, r3, #6
 8003094:	2b04      	cmp	r3, #4
 8003096:	bf08      	it	eq
 8003098:	1aad      	subeq	r5, r5, r2
 800309a:	68a3      	ldr	r3, [r4, #8]
 800309c:	6922      	ldr	r2, [r4, #16]
 800309e:	bf0c      	ite	eq
 80030a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80030a4:	2500      	movne	r5, #0
 80030a6:	4293      	cmp	r3, r2
 80030a8:	bfc4      	itt	gt
 80030aa:	1a9b      	subgt	r3, r3, r2
 80030ac:	18ed      	addgt	r5, r5, r3
 80030ae:	f04f 0900 	mov.w	r9, #0
 80030b2:	341a      	adds	r4, #26
 80030b4:	454d      	cmp	r5, r9
 80030b6:	d11b      	bne.n	80030f0 <_printf_common+0xd8>
 80030b8:	2000      	movs	r0, #0
 80030ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80030be:	2301      	movs	r3, #1
 80030c0:	4652      	mov	r2, sl
 80030c2:	4639      	mov	r1, r7
 80030c4:	4630      	mov	r0, r6
 80030c6:	47c0      	blx	r8
 80030c8:	3001      	adds	r0, #1
 80030ca:	d103      	bne.n	80030d4 <_printf_common+0xbc>
 80030cc:	f04f 30ff 	mov.w	r0, #4294967295
 80030d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80030d4:	3501      	adds	r5, #1
 80030d6:	e7c2      	b.n	800305e <_printf_common+0x46>
 80030d8:	18e1      	adds	r1, r4, r3
 80030da:	1c5a      	adds	r2, r3, #1
 80030dc:	2030      	movs	r0, #48	; 0x30
 80030de:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80030e2:	4422      	add	r2, r4
 80030e4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80030e8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80030ec:	3302      	adds	r3, #2
 80030ee:	e7c4      	b.n	800307a <_printf_common+0x62>
 80030f0:	2301      	movs	r3, #1
 80030f2:	4622      	mov	r2, r4
 80030f4:	4639      	mov	r1, r7
 80030f6:	4630      	mov	r0, r6
 80030f8:	47c0      	blx	r8
 80030fa:	3001      	adds	r0, #1
 80030fc:	d0e6      	beq.n	80030cc <_printf_common+0xb4>
 80030fe:	f109 0901 	add.w	r9, r9, #1
 8003102:	e7d7      	b.n	80030b4 <_printf_common+0x9c>

08003104 <_printf_i>:
 8003104:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003108:	4617      	mov	r7, r2
 800310a:	7e0a      	ldrb	r2, [r1, #24]
 800310c:	b085      	sub	sp, #20
 800310e:	2a6e      	cmp	r2, #110	; 0x6e
 8003110:	4698      	mov	r8, r3
 8003112:	4606      	mov	r6, r0
 8003114:	460c      	mov	r4, r1
 8003116:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003118:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 800311c:	f000 80bc 	beq.w	8003298 <_printf_i+0x194>
 8003120:	d81a      	bhi.n	8003158 <_printf_i+0x54>
 8003122:	2a63      	cmp	r2, #99	; 0x63
 8003124:	d02e      	beq.n	8003184 <_printf_i+0x80>
 8003126:	d80a      	bhi.n	800313e <_printf_i+0x3a>
 8003128:	2a00      	cmp	r2, #0
 800312a:	f000 80c8 	beq.w	80032be <_printf_i+0x1ba>
 800312e:	2a58      	cmp	r2, #88	; 0x58
 8003130:	f000 808a 	beq.w	8003248 <_printf_i+0x144>
 8003134:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003138:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 800313c:	e02a      	b.n	8003194 <_printf_i+0x90>
 800313e:	2a64      	cmp	r2, #100	; 0x64
 8003140:	d001      	beq.n	8003146 <_printf_i+0x42>
 8003142:	2a69      	cmp	r2, #105	; 0x69
 8003144:	d1f6      	bne.n	8003134 <_printf_i+0x30>
 8003146:	6821      	ldr	r1, [r4, #0]
 8003148:	681a      	ldr	r2, [r3, #0]
 800314a:	f011 0f80 	tst.w	r1, #128	; 0x80
 800314e:	d023      	beq.n	8003198 <_printf_i+0x94>
 8003150:	1d11      	adds	r1, r2, #4
 8003152:	6019      	str	r1, [r3, #0]
 8003154:	6813      	ldr	r3, [r2, #0]
 8003156:	e027      	b.n	80031a8 <_printf_i+0xa4>
 8003158:	2a73      	cmp	r2, #115	; 0x73
 800315a:	f000 80b4 	beq.w	80032c6 <_printf_i+0x1c2>
 800315e:	d808      	bhi.n	8003172 <_printf_i+0x6e>
 8003160:	2a6f      	cmp	r2, #111	; 0x6f
 8003162:	d02a      	beq.n	80031ba <_printf_i+0xb6>
 8003164:	2a70      	cmp	r2, #112	; 0x70
 8003166:	d1e5      	bne.n	8003134 <_printf_i+0x30>
 8003168:	680a      	ldr	r2, [r1, #0]
 800316a:	f042 0220 	orr.w	r2, r2, #32
 800316e:	600a      	str	r2, [r1, #0]
 8003170:	e003      	b.n	800317a <_printf_i+0x76>
 8003172:	2a75      	cmp	r2, #117	; 0x75
 8003174:	d021      	beq.n	80031ba <_printf_i+0xb6>
 8003176:	2a78      	cmp	r2, #120	; 0x78
 8003178:	d1dc      	bne.n	8003134 <_printf_i+0x30>
 800317a:	2278      	movs	r2, #120	; 0x78
 800317c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8003180:	496e      	ldr	r1, [pc, #440]	; (800333c <_printf_i+0x238>)
 8003182:	e064      	b.n	800324e <_printf_i+0x14a>
 8003184:	681a      	ldr	r2, [r3, #0]
 8003186:	f101 0542 	add.w	r5, r1, #66	; 0x42
 800318a:	1d11      	adds	r1, r2, #4
 800318c:	6019      	str	r1, [r3, #0]
 800318e:	6813      	ldr	r3, [r2, #0]
 8003190:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003194:	2301      	movs	r3, #1
 8003196:	e0a3      	b.n	80032e0 <_printf_i+0x1dc>
 8003198:	f011 0f40 	tst.w	r1, #64	; 0x40
 800319c:	f102 0104 	add.w	r1, r2, #4
 80031a0:	6019      	str	r1, [r3, #0]
 80031a2:	d0d7      	beq.n	8003154 <_printf_i+0x50>
 80031a4:	f9b2 3000 	ldrsh.w	r3, [r2]
 80031a8:	2b00      	cmp	r3, #0
 80031aa:	da03      	bge.n	80031b4 <_printf_i+0xb0>
 80031ac:	222d      	movs	r2, #45	; 0x2d
 80031ae:	425b      	negs	r3, r3
 80031b0:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80031b4:	4962      	ldr	r1, [pc, #392]	; (8003340 <_printf_i+0x23c>)
 80031b6:	220a      	movs	r2, #10
 80031b8:	e017      	b.n	80031ea <_printf_i+0xe6>
 80031ba:	6820      	ldr	r0, [r4, #0]
 80031bc:	6819      	ldr	r1, [r3, #0]
 80031be:	f010 0f80 	tst.w	r0, #128	; 0x80
 80031c2:	d003      	beq.n	80031cc <_printf_i+0xc8>
 80031c4:	1d08      	adds	r0, r1, #4
 80031c6:	6018      	str	r0, [r3, #0]
 80031c8:	680b      	ldr	r3, [r1, #0]
 80031ca:	e006      	b.n	80031da <_printf_i+0xd6>
 80031cc:	f010 0f40 	tst.w	r0, #64	; 0x40
 80031d0:	f101 0004 	add.w	r0, r1, #4
 80031d4:	6018      	str	r0, [r3, #0]
 80031d6:	d0f7      	beq.n	80031c8 <_printf_i+0xc4>
 80031d8:	880b      	ldrh	r3, [r1, #0]
 80031da:	4959      	ldr	r1, [pc, #356]	; (8003340 <_printf_i+0x23c>)
 80031dc:	2a6f      	cmp	r2, #111	; 0x6f
 80031de:	bf14      	ite	ne
 80031e0:	220a      	movne	r2, #10
 80031e2:	2208      	moveq	r2, #8
 80031e4:	2000      	movs	r0, #0
 80031e6:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 80031ea:	6865      	ldr	r5, [r4, #4]
 80031ec:	60a5      	str	r5, [r4, #8]
 80031ee:	2d00      	cmp	r5, #0
 80031f0:	f2c0 809c 	blt.w	800332c <_printf_i+0x228>
 80031f4:	6820      	ldr	r0, [r4, #0]
 80031f6:	f020 0004 	bic.w	r0, r0, #4
 80031fa:	6020      	str	r0, [r4, #0]
 80031fc:	2b00      	cmp	r3, #0
 80031fe:	d13f      	bne.n	8003280 <_printf_i+0x17c>
 8003200:	2d00      	cmp	r5, #0
 8003202:	f040 8095 	bne.w	8003330 <_printf_i+0x22c>
 8003206:	4675      	mov	r5, lr
 8003208:	2a08      	cmp	r2, #8
 800320a:	d10b      	bne.n	8003224 <_printf_i+0x120>
 800320c:	6823      	ldr	r3, [r4, #0]
 800320e:	07da      	lsls	r2, r3, #31
 8003210:	d508      	bpl.n	8003224 <_printf_i+0x120>
 8003212:	6923      	ldr	r3, [r4, #16]
 8003214:	6862      	ldr	r2, [r4, #4]
 8003216:	429a      	cmp	r2, r3
 8003218:	bfde      	ittt	le
 800321a:	2330      	movle	r3, #48	; 0x30
 800321c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003220:	f105 35ff 	addle.w	r5, r5, #4294967295
 8003224:	ebae 0305 	sub.w	r3, lr, r5
 8003228:	6123      	str	r3, [r4, #16]
 800322a:	f8cd 8000 	str.w	r8, [sp]
 800322e:	463b      	mov	r3, r7
 8003230:	aa03      	add	r2, sp, #12
 8003232:	4621      	mov	r1, r4
 8003234:	4630      	mov	r0, r6
 8003236:	f7ff feef 	bl	8003018 <_printf_common>
 800323a:	3001      	adds	r0, #1
 800323c:	d155      	bne.n	80032ea <_printf_i+0x1e6>
 800323e:	f04f 30ff 	mov.w	r0, #4294967295
 8003242:	b005      	add	sp, #20
 8003244:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003248:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 800324c:	493c      	ldr	r1, [pc, #240]	; (8003340 <_printf_i+0x23c>)
 800324e:	6822      	ldr	r2, [r4, #0]
 8003250:	6818      	ldr	r0, [r3, #0]
 8003252:	f012 0f80 	tst.w	r2, #128	; 0x80
 8003256:	f100 0504 	add.w	r5, r0, #4
 800325a:	601d      	str	r5, [r3, #0]
 800325c:	d001      	beq.n	8003262 <_printf_i+0x15e>
 800325e:	6803      	ldr	r3, [r0, #0]
 8003260:	e002      	b.n	8003268 <_printf_i+0x164>
 8003262:	0655      	lsls	r5, r2, #25
 8003264:	d5fb      	bpl.n	800325e <_printf_i+0x15a>
 8003266:	8803      	ldrh	r3, [r0, #0]
 8003268:	07d0      	lsls	r0, r2, #31
 800326a:	bf44      	itt	mi
 800326c:	f042 0220 	orrmi.w	r2, r2, #32
 8003270:	6022      	strmi	r2, [r4, #0]
 8003272:	b91b      	cbnz	r3, 800327c <_printf_i+0x178>
 8003274:	6822      	ldr	r2, [r4, #0]
 8003276:	f022 0220 	bic.w	r2, r2, #32
 800327a:	6022      	str	r2, [r4, #0]
 800327c:	2210      	movs	r2, #16
 800327e:	e7b1      	b.n	80031e4 <_printf_i+0xe0>
 8003280:	4675      	mov	r5, lr
 8003282:	fbb3 f0f2 	udiv	r0, r3, r2
 8003286:	fb02 3310 	mls	r3, r2, r0, r3
 800328a:	5ccb      	ldrb	r3, [r1, r3]
 800328c:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8003290:	4603      	mov	r3, r0
 8003292:	2800      	cmp	r0, #0
 8003294:	d1f5      	bne.n	8003282 <_printf_i+0x17e>
 8003296:	e7b7      	b.n	8003208 <_printf_i+0x104>
 8003298:	6808      	ldr	r0, [r1, #0]
 800329a:	681a      	ldr	r2, [r3, #0]
 800329c:	6949      	ldr	r1, [r1, #20]
 800329e:	f010 0f80 	tst.w	r0, #128	; 0x80
 80032a2:	d004      	beq.n	80032ae <_printf_i+0x1aa>
 80032a4:	1d10      	adds	r0, r2, #4
 80032a6:	6018      	str	r0, [r3, #0]
 80032a8:	6813      	ldr	r3, [r2, #0]
 80032aa:	6019      	str	r1, [r3, #0]
 80032ac:	e007      	b.n	80032be <_printf_i+0x1ba>
 80032ae:	f010 0f40 	tst.w	r0, #64	; 0x40
 80032b2:	f102 0004 	add.w	r0, r2, #4
 80032b6:	6018      	str	r0, [r3, #0]
 80032b8:	6813      	ldr	r3, [r2, #0]
 80032ba:	d0f6      	beq.n	80032aa <_printf_i+0x1a6>
 80032bc:	8019      	strh	r1, [r3, #0]
 80032be:	2300      	movs	r3, #0
 80032c0:	6123      	str	r3, [r4, #16]
 80032c2:	4675      	mov	r5, lr
 80032c4:	e7b1      	b.n	800322a <_printf_i+0x126>
 80032c6:	681a      	ldr	r2, [r3, #0]
 80032c8:	1d11      	adds	r1, r2, #4
 80032ca:	6019      	str	r1, [r3, #0]
 80032cc:	6815      	ldr	r5, [r2, #0]
 80032ce:	6862      	ldr	r2, [r4, #4]
 80032d0:	2100      	movs	r1, #0
 80032d2:	4628      	mov	r0, r5
 80032d4:	f7fd fba4 	bl	8000a20 <memchr>
 80032d8:	b108      	cbz	r0, 80032de <_printf_i+0x1da>
 80032da:	1b40      	subs	r0, r0, r5
 80032dc:	6060      	str	r0, [r4, #4]
 80032de:	6863      	ldr	r3, [r4, #4]
 80032e0:	6123      	str	r3, [r4, #16]
 80032e2:	2300      	movs	r3, #0
 80032e4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80032e8:	e79f      	b.n	800322a <_printf_i+0x126>
 80032ea:	6923      	ldr	r3, [r4, #16]
 80032ec:	462a      	mov	r2, r5
 80032ee:	4639      	mov	r1, r7
 80032f0:	4630      	mov	r0, r6
 80032f2:	47c0      	blx	r8
 80032f4:	3001      	adds	r0, #1
 80032f6:	d0a2      	beq.n	800323e <_printf_i+0x13a>
 80032f8:	6823      	ldr	r3, [r4, #0]
 80032fa:	079b      	lsls	r3, r3, #30
 80032fc:	d507      	bpl.n	800330e <_printf_i+0x20a>
 80032fe:	2500      	movs	r5, #0
 8003300:	f104 0919 	add.w	r9, r4, #25
 8003304:	68e3      	ldr	r3, [r4, #12]
 8003306:	9a03      	ldr	r2, [sp, #12]
 8003308:	1a9b      	subs	r3, r3, r2
 800330a:	429d      	cmp	r5, r3
 800330c:	db05      	blt.n	800331a <_printf_i+0x216>
 800330e:	68e0      	ldr	r0, [r4, #12]
 8003310:	9b03      	ldr	r3, [sp, #12]
 8003312:	4298      	cmp	r0, r3
 8003314:	bfb8      	it	lt
 8003316:	4618      	movlt	r0, r3
 8003318:	e793      	b.n	8003242 <_printf_i+0x13e>
 800331a:	2301      	movs	r3, #1
 800331c:	464a      	mov	r2, r9
 800331e:	4639      	mov	r1, r7
 8003320:	4630      	mov	r0, r6
 8003322:	47c0      	blx	r8
 8003324:	3001      	adds	r0, #1
 8003326:	d08a      	beq.n	800323e <_printf_i+0x13a>
 8003328:	3501      	adds	r5, #1
 800332a:	e7eb      	b.n	8003304 <_printf_i+0x200>
 800332c:	2b00      	cmp	r3, #0
 800332e:	d1a7      	bne.n	8003280 <_printf_i+0x17c>
 8003330:	780b      	ldrb	r3, [r1, #0]
 8003332:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003336:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800333a:	e765      	b.n	8003208 <_printf_i+0x104>
 800333c:	08006fb3 	.word	0x08006fb3
 8003340:	08006fa2 	.word	0x08006fa2

08003344 <_scanf_float>:
 8003344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003348:	469a      	mov	sl, r3
 800334a:	688b      	ldr	r3, [r1, #8]
 800334c:	4616      	mov	r6, r2
 800334e:	1e5a      	subs	r2, r3, #1
 8003350:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8003354:	b087      	sub	sp, #28
 8003356:	bf83      	ittte	hi
 8003358:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
 800335c:	189b      	addhi	r3, r3, r2
 800335e:	9301      	strhi	r3, [sp, #4]
 8003360:	2300      	movls	r3, #0
 8003362:	bf86      	itte	hi
 8003364:	f240 135d 	movwhi	r3, #349	; 0x15d
 8003368:	608b      	strhi	r3, [r1, #8]
 800336a:	9301      	strls	r3, [sp, #4]
 800336c:	680b      	ldr	r3, [r1, #0]
 800336e:	4688      	mov	r8, r1
 8003370:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8003374:	f848 3b1c 	str.w	r3, [r8], #28
 8003378:	f04f 0b00 	mov.w	fp, #0
 800337c:	4607      	mov	r7, r0
 800337e:	460c      	mov	r4, r1
 8003380:	4645      	mov	r5, r8
 8003382:	465a      	mov	r2, fp
 8003384:	f8cd b010 	str.w	fp, [sp, #16]
 8003388:	f8cd b00c 	str.w	fp, [sp, #12]
 800338c:	46d9      	mov	r9, fp
 800338e:	f8cd b008 	str.w	fp, [sp, #8]
 8003392:	68a1      	ldr	r1, [r4, #8]
 8003394:	b181      	cbz	r1, 80033b8 <_scanf_float+0x74>
 8003396:	6833      	ldr	r3, [r6, #0]
 8003398:	781b      	ldrb	r3, [r3, #0]
 800339a:	2b49      	cmp	r3, #73	; 0x49
 800339c:	d071      	beq.n	8003482 <_scanf_float+0x13e>
 800339e:	d84d      	bhi.n	800343c <_scanf_float+0xf8>
 80033a0:	2b39      	cmp	r3, #57	; 0x39
 80033a2:	d840      	bhi.n	8003426 <_scanf_float+0xe2>
 80033a4:	2b31      	cmp	r3, #49	; 0x31
 80033a6:	f080 8088 	bcs.w	80034ba <_scanf_float+0x176>
 80033aa:	2b2d      	cmp	r3, #45	; 0x2d
 80033ac:	f000 8090 	beq.w	80034d0 <_scanf_float+0x18c>
 80033b0:	d815      	bhi.n	80033de <_scanf_float+0x9a>
 80033b2:	2b2b      	cmp	r3, #43	; 0x2b
 80033b4:	f000 808c 	beq.w	80034d0 <_scanf_float+0x18c>
 80033b8:	f1b9 0f00 	cmp.w	r9, #0
 80033bc:	d003      	beq.n	80033c6 <_scanf_float+0x82>
 80033be:	6823      	ldr	r3, [r4, #0]
 80033c0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80033c4:	6023      	str	r3, [r4, #0]
 80033c6:	3a01      	subs	r2, #1
 80033c8:	2a01      	cmp	r2, #1
 80033ca:	f200 80ea 	bhi.w	80035a2 <_scanf_float+0x25e>
 80033ce:	4545      	cmp	r5, r8
 80033d0:	f200 80dc 	bhi.w	800358c <_scanf_float+0x248>
 80033d4:	2601      	movs	r6, #1
 80033d6:	4630      	mov	r0, r6
 80033d8:	b007      	add	sp, #28
 80033da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033de:	2b2e      	cmp	r3, #46	; 0x2e
 80033e0:	f000 809f 	beq.w	8003522 <_scanf_float+0x1de>
 80033e4:	2b30      	cmp	r3, #48	; 0x30
 80033e6:	d1e7      	bne.n	80033b8 <_scanf_float+0x74>
 80033e8:	6820      	ldr	r0, [r4, #0]
 80033ea:	f410 7f80 	tst.w	r0, #256	; 0x100
 80033ee:	d064      	beq.n	80034ba <_scanf_float+0x176>
 80033f0:	9b01      	ldr	r3, [sp, #4]
 80033f2:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 80033f6:	6020      	str	r0, [r4, #0]
 80033f8:	f109 0901 	add.w	r9, r9, #1
 80033fc:	b11b      	cbz	r3, 8003406 <_scanf_float+0xc2>
 80033fe:	3b01      	subs	r3, #1
 8003400:	3101      	adds	r1, #1
 8003402:	9301      	str	r3, [sp, #4]
 8003404:	60a1      	str	r1, [r4, #8]
 8003406:	68a3      	ldr	r3, [r4, #8]
 8003408:	3b01      	subs	r3, #1
 800340a:	60a3      	str	r3, [r4, #8]
 800340c:	6923      	ldr	r3, [r4, #16]
 800340e:	3301      	adds	r3, #1
 8003410:	6123      	str	r3, [r4, #16]
 8003412:	6873      	ldr	r3, [r6, #4]
 8003414:	3b01      	subs	r3, #1
 8003416:	2b00      	cmp	r3, #0
 8003418:	6073      	str	r3, [r6, #4]
 800341a:	f340 80ac 	ble.w	8003576 <_scanf_float+0x232>
 800341e:	6833      	ldr	r3, [r6, #0]
 8003420:	3301      	adds	r3, #1
 8003422:	6033      	str	r3, [r6, #0]
 8003424:	e7b5      	b.n	8003392 <_scanf_float+0x4e>
 8003426:	2b45      	cmp	r3, #69	; 0x45
 8003428:	f000 8085 	beq.w	8003536 <_scanf_float+0x1f2>
 800342c:	2b46      	cmp	r3, #70	; 0x46
 800342e:	d06a      	beq.n	8003506 <_scanf_float+0x1c2>
 8003430:	2b41      	cmp	r3, #65	; 0x41
 8003432:	d1c1      	bne.n	80033b8 <_scanf_float+0x74>
 8003434:	2a01      	cmp	r2, #1
 8003436:	d1bf      	bne.n	80033b8 <_scanf_float+0x74>
 8003438:	2202      	movs	r2, #2
 800343a:	e046      	b.n	80034ca <_scanf_float+0x186>
 800343c:	2b65      	cmp	r3, #101	; 0x65
 800343e:	d07a      	beq.n	8003536 <_scanf_float+0x1f2>
 8003440:	d818      	bhi.n	8003474 <_scanf_float+0x130>
 8003442:	2b54      	cmp	r3, #84	; 0x54
 8003444:	d066      	beq.n	8003514 <_scanf_float+0x1d0>
 8003446:	d811      	bhi.n	800346c <_scanf_float+0x128>
 8003448:	2b4e      	cmp	r3, #78	; 0x4e
 800344a:	d1b5      	bne.n	80033b8 <_scanf_float+0x74>
 800344c:	2a00      	cmp	r2, #0
 800344e:	d146      	bne.n	80034de <_scanf_float+0x19a>
 8003450:	f1b9 0f00 	cmp.w	r9, #0
 8003454:	d145      	bne.n	80034e2 <_scanf_float+0x19e>
 8003456:	6821      	ldr	r1, [r4, #0]
 8003458:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 800345c:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 8003460:	d13f      	bne.n	80034e2 <_scanf_float+0x19e>
 8003462:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8003466:	6021      	str	r1, [r4, #0]
 8003468:	2201      	movs	r2, #1
 800346a:	e02e      	b.n	80034ca <_scanf_float+0x186>
 800346c:	2b59      	cmp	r3, #89	; 0x59
 800346e:	d01e      	beq.n	80034ae <_scanf_float+0x16a>
 8003470:	2b61      	cmp	r3, #97	; 0x61
 8003472:	e7de      	b.n	8003432 <_scanf_float+0xee>
 8003474:	2b6e      	cmp	r3, #110	; 0x6e
 8003476:	d0e9      	beq.n	800344c <_scanf_float+0x108>
 8003478:	d815      	bhi.n	80034a6 <_scanf_float+0x162>
 800347a:	2b66      	cmp	r3, #102	; 0x66
 800347c:	d043      	beq.n	8003506 <_scanf_float+0x1c2>
 800347e:	2b69      	cmp	r3, #105	; 0x69
 8003480:	d19a      	bne.n	80033b8 <_scanf_float+0x74>
 8003482:	f1bb 0f00 	cmp.w	fp, #0
 8003486:	d138      	bne.n	80034fa <_scanf_float+0x1b6>
 8003488:	f1b9 0f00 	cmp.w	r9, #0
 800348c:	d197      	bne.n	80033be <_scanf_float+0x7a>
 800348e:	6821      	ldr	r1, [r4, #0]
 8003490:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 8003494:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 8003498:	d195      	bne.n	80033c6 <_scanf_float+0x82>
 800349a:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 800349e:	6021      	str	r1, [r4, #0]
 80034a0:	f04f 0b01 	mov.w	fp, #1
 80034a4:	e011      	b.n	80034ca <_scanf_float+0x186>
 80034a6:	2b74      	cmp	r3, #116	; 0x74
 80034a8:	d034      	beq.n	8003514 <_scanf_float+0x1d0>
 80034aa:	2b79      	cmp	r3, #121	; 0x79
 80034ac:	d184      	bne.n	80033b8 <_scanf_float+0x74>
 80034ae:	f1bb 0f07 	cmp.w	fp, #7
 80034b2:	d181      	bne.n	80033b8 <_scanf_float+0x74>
 80034b4:	f04f 0b08 	mov.w	fp, #8
 80034b8:	e007      	b.n	80034ca <_scanf_float+0x186>
 80034ba:	eb12 0f0b 	cmn.w	r2, fp
 80034be:	f47f af7b 	bne.w	80033b8 <_scanf_float+0x74>
 80034c2:	6821      	ldr	r1, [r4, #0]
 80034c4:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
 80034c8:	6021      	str	r1, [r4, #0]
 80034ca:	702b      	strb	r3, [r5, #0]
 80034cc:	3501      	adds	r5, #1
 80034ce:	e79a      	b.n	8003406 <_scanf_float+0xc2>
 80034d0:	6821      	ldr	r1, [r4, #0]
 80034d2:	0608      	lsls	r0, r1, #24
 80034d4:	f57f af70 	bpl.w	80033b8 <_scanf_float+0x74>
 80034d8:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 80034dc:	e7f4      	b.n	80034c8 <_scanf_float+0x184>
 80034de:	2a02      	cmp	r2, #2
 80034e0:	d047      	beq.n	8003572 <_scanf_float+0x22e>
 80034e2:	f1bb 0f01 	cmp.w	fp, #1
 80034e6:	d003      	beq.n	80034f0 <_scanf_float+0x1ac>
 80034e8:	f1bb 0f04 	cmp.w	fp, #4
 80034ec:	f47f af64 	bne.w	80033b8 <_scanf_float+0x74>
 80034f0:	f10b 0b01 	add.w	fp, fp, #1
 80034f4:	fa5f fb8b 	uxtb.w	fp, fp
 80034f8:	e7e7      	b.n	80034ca <_scanf_float+0x186>
 80034fa:	f1bb 0f03 	cmp.w	fp, #3
 80034fe:	d0f7      	beq.n	80034f0 <_scanf_float+0x1ac>
 8003500:	f1bb 0f05 	cmp.w	fp, #5
 8003504:	e7f2      	b.n	80034ec <_scanf_float+0x1a8>
 8003506:	f1bb 0f02 	cmp.w	fp, #2
 800350a:	f47f af55 	bne.w	80033b8 <_scanf_float+0x74>
 800350e:	f04f 0b03 	mov.w	fp, #3
 8003512:	e7da      	b.n	80034ca <_scanf_float+0x186>
 8003514:	f1bb 0f06 	cmp.w	fp, #6
 8003518:	f47f af4e 	bne.w	80033b8 <_scanf_float+0x74>
 800351c:	f04f 0b07 	mov.w	fp, #7
 8003520:	e7d3      	b.n	80034ca <_scanf_float+0x186>
 8003522:	6821      	ldr	r1, [r4, #0]
 8003524:	0588      	lsls	r0, r1, #22
 8003526:	f57f af47 	bpl.w	80033b8 <_scanf_float+0x74>
 800352a:	f421 7120 	bic.w	r1, r1, #640	; 0x280
 800352e:	6021      	str	r1, [r4, #0]
 8003530:	f8cd 9008 	str.w	r9, [sp, #8]
 8003534:	e7c9      	b.n	80034ca <_scanf_float+0x186>
 8003536:	6821      	ldr	r1, [r4, #0]
 8003538:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
 800353c:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8003540:	d006      	beq.n	8003550 <_scanf_float+0x20c>
 8003542:	0548      	lsls	r0, r1, #21
 8003544:	f57f af38 	bpl.w	80033b8 <_scanf_float+0x74>
 8003548:	f1b9 0f00 	cmp.w	r9, #0
 800354c:	f43f af3b 	beq.w	80033c6 <_scanf_float+0x82>
 8003550:	0588      	lsls	r0, r1, #22
 8003552:	bf5c      	itt	pl
 8003554:	9802      	ldrpl	r0, [sp, #8]
 8003556:	9504      	strpl	r5, [sp, #16]
 8003558:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 800355c:	bf58      	it	pl
 800355e:	eba9 0000 	subpl.w	r0, r9, r0
 8003562:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
 8003566:	bf58      	it	pl
 8003568:	9003      	strpl	r0, [sp, #12]
 800356a:	6021      	str	r1, [r4, #0]
 800356c:	f04f 0900 	mov.w	r9, #0
 8003570:	e7ab      	b.n	80034ca <_scanf_float+0x186>
 8003572:	2203      	movs	r2, #3
 8003574:	e7a9      	b.n	80034ca <_scanf_float+0x186>
 8003576:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800357a:	9205      	str	r2, [sp, #20]
 800357c:	4631      	mov	r1, r6
 800357e:	4638      	mov	r0, r7
 8003580:	4798      	blx	r3
 8003582:	9a05      	ldr	r2, [sp, #20]
 8003584:	2800      	cmp	r0, #0
 8003586:	f43f af04 	beq.w	8003392 <_scanf_float+0x4e>
 800358a:	e715      	b.n	80033b8 <_scanf_float+0x74>
 800358c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003590:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8003594:	4632      	mov	r2, r6
 8003596:	4638      	mov	r0, r7
 8003598:	4798      	blx	r3
 800359a:	6923      	ldr	r3, [r4, #16]
 800359c:	3b01      	subs	r3, #1
 800359e:	6123      	str	r3, [r4, #16]
 80035a0:	e715      	b.n	80033ce <_scanf_float+0x8a>
 80035a2:	f10b 33ff 	add.w	r3, fp, #4294967295
 80035a6:	2b06      	cmp	r3, #6
 80035a8:	d80a      	bhi.n	80035c0 <_scanf_float+0x27c>
 80035aa:	f1bb 0f02 	cmp.w	fp, #2
 80035ae:	d92f      	bls.n	8003610 <_scanf_float+0x2cc>
 80035b0:	f1ab 0b03 	sub.w	fp, fp, #3
 80035b4:	fa5f fb8b 	uxtb.w	fp, fp
 80035b8:	eba5 0b0b 	sub.w	fp, r5, fp
 80035bc:	455d      	cmp	r5, fp
 80035be:	d112      	bne.n	80035e6 <_scanf_float+0x2a2>
 80035c0:	6823      	ldr	r3, [r4, #0]
 80035c2:	05da      	lsls	r2, r3, #23
 80035c4:	d545      	bpl.n	8003652 <_scanf_float+0x30e>
 80035c6:	055b      	lsls	r3, r3, #21
 80035c8:	d525      	bpl.n	8003616 <_scanf_float+0x2d2>
 80035ca:	4545      	cmp	r5, r8
 80035cc:	f67f af02 	bls.w	80033d4 <_scanf_float+0x90>
 80035d0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80035d4:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 80035d8:	4632      	mov	r2, r6
 80035da:	4638      	mov	r0, r7
 80035dc:	4798      	blx	r3
 80035de:	6923      	ldr	r3, [r4, #16]
 80035e0:	3b01      	subs	r3, #1
 80035e2:	6123      	str	r3, [r4, #16]
 80035e4:	e7f1      	b.n	80035ca <_scanf_float+0x286>
 80035e6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80035ea:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 80035ee:	4632      	mov	r2, r6
 80035f0:	4638      	mov	r0, r7
 80035f2:	4798      	blx	r3
 80035f4:	6923      	ldr	r3, [r4, #16]
 80035f6:	3b01      	subs	r3, #1
 80035f8:	6123      	str	r3, [r4, #16]
 80035fa:	e7df      	b.n	80035bc <_scanf_float+0x278>
 80035fc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003600:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8003604:	4632      	mov	r2, r6
 8003606:	4638      	mov	r0, r7
 8003608:	4798      	blx	r3
 800360a:	6923      	ldr	r3, [r4, #16]
 800360c:	3b01      	subs	r3, #1
 800360e:	6123      	str	r3, [r4, #16]
 8003610:	4545      	cmp	r5, r8
 8003612:	d8f3      	bhi.n	80035fc <_scanf_float+0x2b8>
 8003614:	e6de      	b.n	80033d4 <_scanf_float+0x90>
 8003616:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800361a:	6923      	ldr	r3, [r4, #16]
 800361c:	2965      	cmp	r1, #101	; 0x65
 800361e:	f103 33ff 	add.w	r3, r3, #4294967295
 8003622:	f105 3bff 	add.w	fp, r5, #4294967295
 8003626:	6123      	str	r3, [r4, #16]
 8003628:	d00d      	beq.n	8003646 <_scanf_float+0x302>
 800362a:	2945      	cmp	r1, #69	; 0x45
 800362c:	d00b      	beq.n	8003646 <_scanf_float+0x302>
 800362e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003632:	4632      	mov	r2, r6
 8003634:	4638      	mov	r0, r7
 8003636:	4798      	blx	r3
 8003638:	6923      	ldr	r3, [r4, #16]
 800363a:	f815 1c02 	ldrb.w	r1, [r5, #-2]
 800363e:	3b01      	subs	r3, #1
 8003640:	f1a5 0b02 	sub.w	fp, r5, #2
 8003644:	6123      	str	r3, [r4, #16]
 8003646:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800364a:	4632      	mov	r2, r6
 800364c:	4638      	mov	r0, r7
 800364e:	4798      	blx	r3
 8003650:	465d      	mov	r5, fp
 8003652:	6826      	ldr	r6, [r4, #0]
 8003654:	f016 0610 	ands.w	r6, r6, #16
 8003658:	d154      	bne.n	8003704 <_scanf_float+0x3c0>
 800365a:	702e      	strb	r6, [r5, #0]
 800365c:	6823      	ldr	r3, [r4, #0]
 800365e:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8003662:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003666:	d11c      	bne.n	80036a2 <_scanf_float+0x35e>
 8003668:	9b02      	ldr	r3, [sp, #8]
 800366a:	eba9 0303 	sub.w	r3, r9, r3
 800366e:	425a      	negs	r2, r3
 8003670:	bb23      	cbnz	r3, 80036bc <_scanf_float+0x378>
 8003672:	2200      	movs	r2, #0
 8003674:	4641      	mov	r1, r8
 8003676:	4638      	mov	r0, r7
 8003678:	f000 ff52 	bl	8004520 <_strtod_r>
 800367c:	6825      	ldr	r5, [r4, #0]
 800367e:	f8da 3000 	ldr.w	r3, [sl]
 8003682:	f015 0f02 	tst.w	r5, #2
 8003686:	f103 0204 	add.w	r2, r3, #4
 800368a:	ec59 8b10 	vmov	r8, r9, d0
 800368e:	f8ca 2000 	str.w	r2, [sl]
 8003692:	d01e      	beq.n	80036d2 <_scanf_float+0x38e>
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	e9c3 8900 	strd	r8, r9, [r3]
 800369a:	68e3      	ldr	r3, [r4, #12]
 800369c:	3301      	adds	r3, #1
 800369e:	60e3      	str	r3, [r4, #12]
 80036a0:	e699      	b.n	80033d6 <_scanf_float+0x92>
 80036a2:	9b03      	ldr	r3, [sp, #12]
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	d0e4      	beq.n	8003672 <_scanf_float+0x32e>
 80036a8:	9904      	ldr	r1, [sp, #16]
 80036aa:	230a      	movs	r3, #10
 80036ac:	4632      	mov	r2, r6
 80036ae:	3101      	adds	r1, #1
 80036b0:	4638      	mov	r0, r7
 80036b2:	f000 ffc5 	bl	8004640 <_strtol_r>
 80036b6:	9b03      	ldr	r3, [sp, #12]
 80036b8:	9d04      	ldr	r5, [sp, #16]
 80036ba:	1ac2      	subs	r2, r0, r3
 80036bc:	f204 136f 	addw	r3, r4, #367	; 0x16f
 80036c0:	429d      	cmp	r5, r3
 80036c2:	bf28      	it	cs
 80036c4:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
 80036c8:	490f      	ldr	r1, [pc, #60]	; (8003708 <_scanf_float+0x3c4>)
 80036ca:	4628      	mov	r0, r5
 80036cc:	f000 f8fa 	bl	80038c4 <siprintf>
 80036d0:	e7cf      	b.n	8003672 <_scanf_float+0x32e>
 80036d2:	f015 0504 	ands.w	r5, r5, #4
 80036d6:	d1dd      	bne.n	8003694 <_scanf_float+0x350>
 80036d8:	681f      	ldr	r7, [r3, #0]
 80036da:	ee10 2a10 	vmov	r2, s0
 80036de:	464b      	mov	r3, r9
 80036e0:	ee10 0a10 	vmov	r0, s0
 80036e4:	4649      	mov	r1, r9
 80036e6:	f7fd fa73 	bl	8000bd0 <__aeabi_dcmpun>
 80036ea:	b128      	cbz	r0, 80036f8 <_scanf_float+0x3b4>
 80036ec:	4628      	mov	r0, r5
 80036ee:	f000 f8e3 	bl	80038b8 <nanf>
 80036f2:	ed87 0a00 	vstr	s0, [r7]
 80036f6:	e7d0      	b.n	800369a <_scanf_float+0x356>
 80036f8:	4640      	mov	r0, r8
 80036fa:	4649      	mov	r1, r9
 80036fc:	f7fd faa6 	bl	8000c4c <__aeabi_d2f>
 8003700:	6038      	str	r0, [r7, #0]
 8003702:	e7ca      	b.n	800369a <_scanf_float+0x356>
 8003704:	2600      	movs	r6, #0
 8003706:	e666      	b.n	80033d6 <_scanf_float+0x92>
 8003708:	08006fc4 	.word	0x08006fc4

0800370c <iprintf>:
 800370c:	b40f      	push	{r0, r1, r2, r3}
 800370e:	4b0a      	ldr	r3, [pc, #40]	; (8003738 <iprintf+0x2c>)
 8003710:	b513      	push	{r0, r1, r4, lr}
 8003712:	681c      	ldr	r4, [r3, #0]
 8003714:	b124      	cbz	r4, 8003720 <iprintf+0x14>
 8003716:	69a3      	ldr	r3, [r4, #24]
 8003718:	b913      	cbnz	r3, 8003720 <iprintf+0x14>
 800371a:	4620      	mov	r0, r4
 800371c:	f001 fef0 	bl	8005500 <__sinit>
 8003720:	ab05      	add	r3, sp, #20
 8003722:	9a04      	ldr	r2, [sp, #16]
 8003724:	68a1      	ldr	r1, [r4, #8]
 8003726:	9301      	str	r3, [sp, #4]
 8003728:	4620      	mov	r0, r4
 800372a:	f003 f88d 	bl	8006848 <_vfiprintf_r>
 800372e:	b002      	add	sp, #8
 8003730:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003734:	b004      	add	sp, #16
 8003736:	4770      	bx	lr
 8003738:	20000238 	.word	0x20000238

0800373c <_sbrk_r>:
 800373c:	b538      	push	{r3, r4, r5, lr}
 800373e:	4c06      	ldr	r4, [pc, #24]	; (8003758 <_sbrk_r+0x1c>)
 8003740:	2300      	movs	r3, #0
 8003742:	4605      	mov	r5, r0
 8003744:	4608      	mov	r0, r1
 8003746:	6023      	str	r3, [r4, #0]
 8003748:	f7ff f868 	bl	800281c <_sbrk>
 800374c:	1c43      	adds	r3, r0, #1
 800374e:	d102      	bne.n	8003756 <_sbrk_r+0x1a>
 8003750:	6823      	ldr	r3, [r4, #0]
 8003752:	b103      	cbz	r3, 8003756 <_sbrk_r+0x1a>
 8003754:	602b      	str	r3, [r5, #0]
 8003756:	bd38      	pop	{r3, r4, r5, pc}
 8003758:	20000450 	.word	0x20000450

0800375c <setvbuf>:
 800375c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003760:	461d      	mov	r5, r3
 8003762:	4b51      	ldr	r3, [pc, #324]	; (80038a8 <setvbuf+0x14c>)
 8003764:	681e      	ldr	r6, [r3, #0]
 8003766:	4604      	mov	r4, r0
 8003768:	460f      	mov	r7, r1
 800376a:	4690      	mov	r8, r2
 800376c:	b126      	cbz	r6, 8003778 <setvbuf+0x1c>
 800376e:	69b3      	ldr	r3, [r6, #24]
 8003770:	b913      	cbnz	r3, 8003778 <setvbuf+0x1c>
 8003772:	4630      	mov	r0, r6
 8003774:	f001 fec4 	bl	8005500 <__sinit>
 8003778:	4b4c      	ldr	r3, [pc, #304]	; (80038ac <setvbuf+0x150>)
 800377a:	429c      	cmp	r4, r3
 800377c:	d152      	bne.n	8003824 <setvbuf+0xc8>
 800377e:	6874      	ldr	r4, [r6, #4]
 8003780:	f1b8 0f02 	cmp.w	r8, #2
 8003784:	d006      	beq.n	8003794 <setvbuf+0x38>
 8003786:	f1b8 0f01 	cmp.w	r8, #1
 800378a:	f200 8089 	bhi.w	80038a0 <setvbuf+0x144>
 800378e:	2d00      	cmp	r5, #0
 8003790:	f2c0 8086 	blt.w	80038a0 <setvbuf+0x144>
 8003794:	4621      	mov	r1, r4
 8003796:	4630      	mov	r0, r6
 8003798:	f001 fe48 	bl	800542c <_fflush_r>
 800379c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800379e:	b141      	cbz	r1, 80037b2 <setvbuf+0x56>
 80037a0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80037a4:	4299      	cmp	r1, r3
 80037a6:	d002      	beq.n	80037ae <setvbuf+0x52>
 80037a8:	4630      	mov	r0, r6
 80037aa:	f7ff f8b3 	bl	8002914 <_free_r>
 80037ae:	2300      	movs	r3, #0
 80037b0:	6363      	str	r3, [r4, #52]	; 0x34
 80037b2:	2300      	movs	r3, #0
 80037b4:	61a3      	str	r3, [r4, #24]
 80037b6:	6063      	str	r3, [r4, #4]
 80037b8:	89a3      	ldrh	r3, [r4, #12]
 80037ba:	061b      	lsls	r3, r3, #24
 80037bc:	d503      	bpl.n	80037c6 <setvbuf+0x6a>
 80037be:	6921      	ldr	r1, [r4, #16]
 80037c0:	4630      	mov	r0, r6
 80037c2:	f7ff f8a7 	bl	8002914 <_free_r>
 80037c6:	89a3      	ldrh	r3, [r4, #12]
 80037c8:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 80037cc:	f023 0303 	bic.w	r3, r3, #3
 80037d0:	f1b8 0f02 	cmp.w	r8, #2
 80037d4:	81a3      	strh	r3, [r4, #12]
 80037d6:	d05d      	beq.n	8003894 <setvbuf+0x138>
 80037d8:	ab01      	add	r3, sp, #4
 80037da:	466a      	mov	r2, sp
 80037dc:	4621      	mov	r1, r4
 80037de:	4630      	mov	r0, r6
 80037e0:	f002 fa48 	bl	8005c74 <__swhatbuf_r>
 80037e4:	89a3      	ldrh	r3, [r4, #12]
 80037e6:	4318      	orrs	r0, r3
 80037e8:	81a0      	strh	r0, [r4, #12]
 80037ea:	bb2d      	cbnz	r5, 8003838 <setvbuf+0xdc>
 80037ec:	9d00      	ldr	r5, [sp, #0]
 80037ee:	4628      	mov	r0, r5
 80037f0:	f7ff f872 	bl	80028d8 <malloc>
 80037f4:	4607      	mov	r7, r0
 80037f6:	2800      	cmp	r0, #0
 80037f8:	d14e      	bne.n	8003898 <setvbuf+0x13c>
 80037fa:	f8dd 9000 	ldr.w	r9, [sp]
 80037fe:	45a9      	cmp	r9, r5
 8003800:	d13c      	bne.n	800387c <setvbuf+0x120>
 8003802:	f04f 30ff 	mov.w	r0, #4294967295
 8003806:	89a3      	ldrh	r3, [r4, #12]
 8003808:	f043 0302 	orr.w	r3, r3, #2
 800380c:	81a3      	strh	r3, [r4, #12]
 800380e:	2300      	movs	r3, #0
 8003810:	60a3      	str	r3, [r4, #8]
 8003812:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003816:	6023      	str	r3, [r4, #0]
 8003818:	6123      	str	r3, [r4, #16]
 800381a:	2301      	movs	r3, #1
 800381c:	6163      	str	r3, [r4, #20]
 800381e:	b003      	add	sp, #12
 8003820:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003824:	4b22      	ldr	r3, [pc, #136]	; (80038b0 <setvbuf+0x154>)
 8003826:	429c      	cmp	r4, r3
 8003828:	d101      	bne.n	800382e <setvbuf+0xd2>
 800382a:	68b4      	ldr	r4, [r6, #8]
 800382c:	e7a8      	b.n	8003780 <setvbuf+0x24>
 800382e:	4b21      	ldr	r3, [pc, #132]	; (80038b4 <setvbuf+0x158>)
 8003830:	429c      	cmp	r4, r3
 8003832:	bf08      	it	eq
 8003834:	68f4      	ldreq	r4, [r6, #12]
 8003836:	e7a3      	b.n	8003780 <setvbuf+0x24>
 8003838:	2f00      	cmp	r7, #0
 800383a:	d0d8      	beq.n	80037ee <setvbuf+0x92>
 800383c:	69b3      	ldr	r3, [r6, #24]
 800383e:	b913      	cbnz	r3, 8003846 <setvbuf+0xea>
 8003840:	4630      	mov	r0, r6
 8003842:	f001 fe5d 	bl	8005500 <__sinit>
 8003846:	f1b8 0f01 	cmp.w	r8, #1
 800384a:	bf08      	it	eq
 800384c:	89a3      	ldrheq	r3, [r4, #12]
 800384e:	6027      	str	r7, [r4, #0]
 8003850:	bf04      	itt	eq
 8003852:	f043 0301 	orreq.w	r3, r3, #1
 8003856:	81a3      	strheq	r3, [r4, #12]
 8003858:	89a3      	ldrh	r3, [r4, #12]
 800385a:	6127      	str	r7, [r4, #16]
 800385c:	f013 0008 	ands.w	r0, r3, #8
 8003860:	6165      	str	r5, [r4, #20]
 8003862:	d01b      	beq.n	800389c <setvbuf+0x140>
 8003864:	f013 0001 	ands.w	r0, r3, #1
 8003868:	bf18      	it	ne
 800386a:	426d      	negne	r5, r5
 800386c:	f04f 0300 	mov.w	r3, #0
 8003870:	bf1d      	ittte	ne
 8003872:	60a3      	strne	r3, [r4, #8]
 8003874:	61a5      	strne	r5, [r4, #24]
 8003876:	4618      	movne	r0, r3
 8003878:	60a5      	streq	r5, [r4, #8]
 800387a:	e7d0      	b.n	800381e <setvbuf+0xc2>
 800387c:	4648      	mov	r0, r9
 800387e:	f7ff f82b 	bl	80028d8 <malloc>
 8003882:	4607      	mov	r7, r0
 8003884:	2800      	cmp	r0, #0
 8003886:	d0bc      	beq.n	8003802 <setvbuf+0xa6>
 8003888:	89a3      	ldrh	r3, [r4, #12]
 800388a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800388e:	81a3      	strh	r3, [r4, #12]
 8003890:	464d      	mov	r5, r9
 8003892:	e7d3      	b.n	800383c <setvbuf+0xe0>
 8003894:	2000      	movs	r0, #0
 8003896:	e7b6      	b.n	8003806 <setvbuf+0xaa>
 8003898:	46a9      	mov	r9, r5
 800389a:	e7f5      	b.n	8003888 <setvbuf+0x12c>
 800389c:	60a0      	str	r0, [r4, #8]
 800389e:	e7be      	b.n	800381e <setvbuf+0xc2>
 80038a0:	f04f 30ff 	mov.w	r0, #4294967295
 80038a4:	e7bb      	b.n	800381e <setvbuf+0xc2>
 80038a6:	bf00      	nop
 80038a8:	20000238 	.word	0x20000238
 80038ac:	08007050 	.word	0x08007050
 80038b0:	08007070 	.word	0x08007070
 80038b4:	08007030 	.word	0x08007030

080038b8 <nanf>:
 80038b8:	ed9f 0a01 	vldr	s0, [pc, #4]	; 80038c0 <nanf+0x8>
 80038bc:	4770      	bx	lr
 80038be:	bf00      	nop
 80038c0:	7fc00000 	.word	0x7fc00000

080038c4 <siprintf>:
 80038c4:	b40e      	push	{r1, r2, r3}
 80038c6:	b500      	push	{lr}
 80038c8:	b09c      	sub	sp, #112	; 0x70
 80038ca:	f44f 7102 	mov.w	r1, #520	; 0x208
 80038ce:	ab1d      	add	r3, sp, #116	; 0x74
 80038d0:	f8ad 1014 	strh.w	r1, [sp, #20]
 80038d4:	9002      	str	r0, [sp, #8]
 80038d6:	9006      	str	r0, [sp, #24]
 80038d8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80038dc:	480a      	ldr	r0, [pc, #40]	; (8003908 <siprintf+0x44>)
 80038de:	9104      	str	r1, [sp, #16]
 80038e0:	9107      	str	r1, [sp, #28]
 80038e2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80038e6:	f853 2b04 	ldr.w	r2, [r3], #4
 80038ea:	f8ad 1016 	strh.w	r1, [sp, #22]
 80038ee:	6800      	ldr	r0, [r0, #0]
 80038f0:	9301      	str	r3, [sp, #4]
 80038f2:	a902      	add	r1, sp, #8
 80038f4:	f002 fe8a 	bl	800660c <_svfiprintf_r>
 80038f8:	9b02      	ldr	r3, [sp, #8]
 80038fa:	2200      	movs	r2, #0
 80038fc:	701a      	strb	r2, [r3, #0]
 80038fe:	b01c      	add	sp, #112	; 0x70
 8003900:	f85d eb04 	ldr.w	lr, [sp], #4
 8003904:	b003      	add	sp, #12
 8003906:	4770      	bx	lr
 8003908:	20000238 	.word	0x20000238

0800390c <sulp>:
 800390c:	b570      	push	{r4, r5, r6, lr}
 800390e:	4604      	mov	r4, r0
 8003910:	460d      	mov	r5, r1
 8003912:	ec45 4b10 	vmov	d0, r4, r5
 8003916:	4616      	mov	r6, r2
 8003918:	f002 fcf0 	bl	80062fc <__ulp>
 800391c:	ec51 0b10 	vmov	r0, r1, d0
 8003920:	b17e      	cbz	r6, 8003942 <sulp+0x36>
 8003922:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8003926:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800392a:	2b00      	cmp	r3, #0
 800392c:	dd09      	ble.n	8003942 <sulp+0x36>
 800392e:	051b      	lsls	r3, r3, #20
 8003930:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8003934:	2400      	movs	r4, #0
 8003936:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800393a:	4622      	mov	r2, r4
 800393c:	462b      	mov	r3, r5
 800393e:	f7fc fe35 	bl	80005ac <__aeabi_dmul>
 8003942:	bd70      	pop	{r4, r5, r6, pc}
 8003944:	0000      	movs	r0, r0
	...

08003948 <_strtod_l>:
 8003948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800394c:	b09f      	sub	sp, #124	; 0x7c
 800394e:	4698      	mov	r8, r3
 8003950:	9004      	str	r0, [sp, #16]
 8003952:	2300      	movs	r3, #0
 8003954:	4640      	mov	r0, r8
 8003956:	460c      	mov	r4, r1
 8003958:	9215      	str	r2, [sp, #84]	; 0x54
 800395a:	931a      	str	r3, [sp, #104]	; 0x68
 800395c:	f002 f97a 	bl	8005c54 <__localeconv_l>
 8003960:	4607      	mov	r7, r0
 8003962:	6800      	ldr	r0, [r0, #0]
 8003964:	f7fd f854 	bl	8000a10 <strlen>
 8003968:	f04f 0a00 	mov.w	sl, #0
 800396c:	4605      	mov	r5, r0
 800396e:	f04f 0b00 	mov.w	fp, #0
 8003972:	9419      	str	r4, [sp, #100]	; 0x64
 8003974:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003976:	781a      	ldrb	r2, [r3, #0]
 8003978:	2a0d      	cmp	r2, #13
 800397a:	d833      	bhi.n	80039e4 <_strtod_l+0x9c>
 800397c:	2a09      	cmp	r2, #9
 800397e:	d237      	bcs.n	80039f0 <_strtod_l+0xa8>
 8003980:	2a00      	cmp	r2, #0
 8003982:	d03f      	beq.n	8003a04 <_strtod_l+0xbc>
 8003984:	2300      	movs	r3, #0
 8003986:	9309      	str	r3, [sp, #36]	; 0x24
 8003988:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800398a:	7833      	ldrb	r3, [r6, #0]
 800398c:	2b30      	cmp	r3, #48	; 0x30
 800398e:	f040 8103 	bne.w	8003b98 <_strtod_l+0x250>
 8003992:	7873      	ldrb	r3, [r6, #1]
 8003994:	2b58      	cmp	r3, #88	; 0x58
 8003996:	d001      	beq.n	800399c <_strtod_l+0x54>
 8003998:	2b78      	cmp	r3, #120	; 0x78
 800399a:	d16b      	bne.n	8003a74 <_strtod_l+0x12c>
 800399c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800399e:	9301      	str	r3, [sp, #4]
 80039a0:	ab1a      	add	r3, sp, #104	; 0x68
 80039a2:	9300      	str	r3, [sp, #0]
 80039a4:	f8cd 8008 	str.w	r8, [sp, #8]
 80039a8:	ab1b      	add	r3, sp, #108	; 0x6c
 80039aa:	4aad      	ldr	r2, [pc, #692]	; (8003c60 <_strtod_l+0x318>)
 80039ac:	9804      	ldr	r0, [sp, #16]
 80039ae:	a919      	add	r1, sp, #100	; 0x64
 80039b0:	f001 fe7a 	bl	80056a8 <__gethex>
 80039b4:	f010 0407 	ands.w	r4, r0, #7
 80039b8:	4605      	mov	r5, r0
 80039ba:	d005      	beq.n	80039c8 <_strtod_l+0x80>
 80039bc:	2c06      	cmp	r4, #6
 80039be:	d12b      	bne.n	8003a18 <_strtod_l+0xd0>
 80039c0:	3601      	adds	r6, #1
 80039c2:	2300      	movs	r3, #0
 80039c4:	9619      	str	r6, [sp, #100]	; 0x64
 80039c6:	9309      	str	r3, [sp, #36]	; 0x24
 80039c8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80039ca:	2b00      	cmp	r3, #0
 80039cc:	f040 8590 	bne.w	80044f0 <_strtod_l+0xba8>
 80039d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80039d2:	b1e3      	cbz	r3, 8003a0e <_strtod_l+0xc6>
 80039d4:	4652      	mov	r2, sl
 80039d6:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 80039da:	ec43 2b10 	vmov	d0, r2, r3
 80039de:	b01f      	add	sp, #124	; 0x7c
 80039e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80039e4:	2a2b      	cmp	r2, #43	; 0x2b
 80039e6:	d006      	beq.n	80039f6 <_strtod_l+0xae>
 80039e8:	2a2d      	cmp	r2, #45	; 0x2d
 80039ea:	d013      	beq.n	8003a14 <_strtod_l+0xcc>
 80039ec:	2a20      	cmp	r2, #32
 80039ee:	d1c9      	bne.n	8003984 <_strtod_l+0x3c>
 80039f0:	3301      	adds	r3, #1
 80039f2:	9319      	str	r3, [sp, #100]	; 0x64
 80039f4:	e7be      	b.n	8003974 <_strtod_l+0x2c>
 80039f6:	2200      	movs	r2, #0
 80039f8:	9209      	str	r2, [sp, #36]	; 0x24
 80039fa:	1c5a      	adds	r2, r3, #1
 80039fc:	9219      	str	r2, [sp, #100]	; 0x64
 80039fe:	785b      	ldrb	r3, [r3, #1]
 8003a00:	2b00      	cmp	r3, #0
 8003a02:	d1c1      	bne.n	8003988 <_strtod_l+0x40>
 8003a04:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003a06:	9419      	str	r4, [sp, #100]	; 0x64
 8003a08:	2b00      	cmp	r3, #0
 8003a0a:	f040 856f 	bne.w	80044ec <_strtod_l+0xba4>
 8003a0e:	4652      	mov	r2, sl
 8003a10:	465b      	mov	r3, fp
 8003a12:	e7e2      	b.n	80039da <_strtod_l+0x92>
 8003a14:	2201      	movs	r2, #1
 8003a16:	e7ef      	b.n	80039f8 <_strtod_l+0xb0>
 8003a18:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8003a1a:	b13a      	cbz	r2, 8003a2c <_strtod_l+0xe4>
 8003a1c:	2135      	movs	r1, #53	; 0x35
 8003a1e:	a81c      	add	r0, sp, #112	; 0x70
 8003a20:	f002 fd5d 	bl	80064de <__copybits>
 8003a24:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003a26:	9804      	ldr	r0, [sp, #16]
 8003a28:	f002 f9db 	bl	8005de2 <_Bfree>
 8003a2c:	3c01      	subs	r4, #1
 8003a2e:	2c04      	cmp	r4, #4
 8003a30:	d808      	bhi.n	8003a44 <_strtod_l+0xfc>
 8003a32:	e8df f004 	tbb	[pc, r4]
 8003a36:	030c      	.short	0x030c
 8003a38:	1a17      	.short	0x1a17
 8003a3a:	0c          	.byte	0x0c
 8003a3b:	00          	.byte	0x00
 8003a3c:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
 8003a40:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 8003a44:	0729      	lsls	r1, r5, #28
 8003a46:	d5bf      	bpl.n	80039c8 <_strtod_l+0x80>
 8003a48:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 8003a4c:	e7bc      	b.n	80039c8 <_strtod_l+0x80>
 8003a4e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8003a50:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8003a52:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
 8003a56:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8003a5a:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8003a5e:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8003a62:	e7ef      	b.n	8003a44 <_strtod_l+0xfc>
 8003a64:	f8df b204 	ldr.w	fp, [pc, #516]	; 8003c6c <_strtod_l+0x324>
 8003a68:	e7ec      	b.n	8003a44 <_strtod_l+0xfc>
 8003a6a:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8003a6e:	f04f 3aff 	mov.w	sl, #4294967295
 8003a72:	e7e7      	b.n	8003a44 <_strtod_l+0xfc>
 8003a74:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003a76:	1c5a      	adds	r2, r3, #1
 8003a78:	9219      	str	r2, [sp, #100]	; 0x64
 8003a7a:	785b      	ldrb	r3, [r3, #1]
 8003a7c:	2b30      	cmp	r3, #48	; 0x30
 8003a7e:	d0f9      	beq.n	8003a74 <_strtod_l+0x12c>
 8003a80:	2b00      	cmp	r3, #0
 8003a82:	d0a1      	beq.n	80039c8 <_strtod_l+0x80>
 8003a84:	2301      	movs	r3, #1
 8003a86:	f04f 0900 	mov.w	r9, #0
 8003a8a:	9308      	str	r3, [sp, #32]
 8003a8c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003a8e:	930a      	str	r3, [sp, #40]	; 0x28
 8003a90:	f8cd 901c 	str.w	r9, [sp, #28]
 8003a94:	f8cd 9018 	str.w	r9, [sp, #24]
 8003a98:	220a      	movs	r2, #10
 8003a9a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003a9c:	7806      	ldrb	r6, [r0, #0]
 8003a9e:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8003aa2:	b2d9      	uxtb	r1, r3
 8003aa4:	2909      	cmp	r1, #9
 8003aa6:	d979      	bls.n	8003b9c <_strtod_l+0x254>
 8003aa8:	462a      	mov	r2, r5
 8003aaa:	6839      	ldr	r1, [r7, #0]
 8003aac:	f003 f825 	bl	8006afa <strncmp>
 8003ab0:	2800      	cmp	r0, #0
 8003ab2:	f000 8082 	beq.w	8003bba <_strtod_l+0x272>
 8003ab6:	2000      	movs	r0, #0
 8003ab8:	9d06      	ldr	r5, [sp, #24]
 8003aba:	4633      	mov	r3, r6
 8003abc:	4602      	mov	r2, r0
 8003abe:	4601      	mov	r1, r0
 8003ac0:	2b65      	cmp	r3, #101	; 0x65
 8003ac2:	d002      	beq.n	8003aca <_strtod_l+0x182>
 8003ac4:	2b45      	cmp	r3, #69	; 0x45
 8003ac6:	f040 80e8 	bne.w	8003c9a <_strtod_l+0x352>
 8003aca:	b925      	cbnz	r5, 8003ad6 <_strtod_l+0x18e>
 8003acc:	b910      	cbnz	r0, 8003ad4 <_strtod_l+0x18c>
 8003ace:	9b08      	ldr	r3, [sp, #32]
 8003ad0:	2b00      	cmp	r3, #0
 8003ad2:	d097      	beq.n	8003a04 <_strtod_l+0xbc>
 8003ad4:	2500      	movs	r5, #0
 8003ad6:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8003ad8:	1c63      	adds	r3, r4, #1
 8003ada:	9319      	str	r3, [sp, #100]	; 0x64
 8003adc:	7863      	ldrb	r3, [r4, #1]
 8003ade:	2b2b      	cmp	r3, #43	; 0x2b
 8003ae0:	f000 80c8 	beq.w	8003c74 <_strtod_l+0x32c>
 8003ae4:	2b2d      	cmp	r3, #45	; 0x2d
 8003ae6:	f000 80cb 	beq.w	8003c80 <_strtod_l+0x338>
 8003aea:	2600      	movs	r6, #0
 8003aec:	9605      	str	r6, [sp, #20]
 8003aee:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
 8003af2:	2e09      	cmp	r6, #9
 8003af4:	f200 80d0 	bhi.w	8003c98 <_strtod_l+0x350>
 8003af8:	2b30      	cmp	r3, #48	; 0x30
 8003afa:	f000 80c3 	beq.w	8003c84 <_strtod_l+0x33c>
 8003afe:	f1a3 0631 	sub.w	r6, r3, #49	; 0x31
 8003b02:	2e08      	cmp	r6, #8
 8003b04:	f200 80c9 	bhi.w	8003c9a <_strtod_l+0x352>
 8003b08:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 8003b0c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003b0e:	f04f 0c0a 	mov.w	ip, #10
 8003b12:	461f      	mov	r7, r3
 8003b14:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003b16:	1c5e      	adds	r6, r3, #1
 8003b18:	9619      	str	r6, [sp, #100]	; 0x64
 8003b1a:	785b      	ldrb	r3, [r3, #1]
 8003b1c:	f1a3 0830 	sub.w	r8, r3, #48	; 0x30
 8003b20:	f1b8 0f09 	cmp.w	r8, #9
 8003b24:	f240 80b3 	bls.w	8003c8e <_strtod_l+0x346>
 8003b28:	1bf6      	subs	r6, r6, r7
 8003b2a:	2e08      	cmp	r6, #8
 8003b2c:	f644 681f 	movw	r8, #19999	; 0x4e1f
 8003b30:	dc02      	bgt.n	8003b38 <_strtod_l+0x1f0>
 8003b32:	45f0      	cmp	r8, lr
 8003b34:	bfa8      	it	ge
 8003b36:	46f0      	movge	r8, lr
 8003b38:	9e05      	ldr	r6, [sp, #20]
 8003b3a:	b10e      	cbz	r6, 8003b40 <_strtod_l+0x1f8>
 8003b3c:	f1c8 0800 	rsb	r8, r8, #0
 8003b40:	2d00      	cmp	r5, #0
 8003b42:	f040 80d0 	bne.w	8003ce6 <_strtod_l+0x39e>
 8003b46:	2800      	cmp	r0, #0
 8003b48:	f47f af3e 	bne.w	80039c8 <_strtod_l+0x80>
 8003b4c:	9a08      	ldr	r2, [sp, #32]
 8003b4e:	2a00      	cmp	r2, #0
 8003b50:	f47f af3a 	bne.w	80039c8 <_strtod_l+0x80>
 8003b54:	2900      	cmp	r1, #0
 8003b56:	f47f af55 	bne.w	8003a04 <_strtod_l+0xbc>
 8003b5a:	2b4e      	cmp	r3, #78	; 0x4e
 8003b5c:	f000 80a6 	beq.w	8003cac <_strtod_l+0x364>
 8003b60:	f300 809e 	bgt.w	8003ca0 <_strtod_l+0x358>
 8003b64:	2b49      	cmp	r3, #73	; 0x49
 8003b66:	f47f af4d 	bne.w	8003a04 <_strtod_l+0xbc>
 8003b6a:	493e      	ldr	r1, [pc, #248]	; (8003c64 <_strtod_l+0x31c>)
 8003b6c:	a819      	add	r0, sp, #100	; 0x64
 8003b6e:	f001 ffcb 	bl	8005b08 <__match>
 8003b72:	2800      	cmp	r0, #0
 8003b74:	f43f af46 	beq.w	8003a04 <_strtod_l+0xbc>
 8003b78:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003b7a:	493b      	ldr	r1, [pc, #236]	; (8003c68 <_strtod_l+0x320>)
 8003b7c:	3b01      	subs	r3, #1
 8003b7e:	a819      	add	r0, sp, #100	; 0x64
 8003b80:	9319      	str	r3, [sp, #100]	; 0x64
 8003b82:	f001 ffc1 	bl	8005b08 <__match>
 8003b86:	b910      	cbnz	r0, 8003b8e <_strtod_l+0x246>
 8003b88:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003b8a:	3301      	adds	r3, #1
 8003b8c:	9319      	str	r3, [sp, #100]	; 0x64
 8003b8e:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8003c6c <_strtod_l+0x324>
 8003b92:	f04f 0a00 	mov.w	sl, #0
 8003b96:	e717      	b.n	80039c8 <_strtod_l+0x80>
 8003b98:	2300      	movs	r3, #0
 8003b9a:	e774      	b.n	8003a86 <_strtod_l+0x13e>
 8003b9c:	9906      	ldr	r1, [sp, #24]
 8003b9e:	2908      	cmp	r1, #8
 8003ba0:	bfdd      	ittte	le
 8003ba2:	9907      	ldrle	r1, [sp, #28]
 8003ba4:	fb02 3301 	mlale	r3, r2, r1, r3
 8003ba8:	9307      	strle	r3, [sp, #28]
 8003baa:	fb02 3909 	mlagt	r9, r2, r9, r3
 8003bae:	9b06      	ldr	r3, [sp, #24]
 8003bb0:	3001      	adds	r0, #1
 8003bb2:	3301      	adds	r3, #1
 8003bb4:	9306      	str	r3, [sp, #24]
 8003bb6:	9019      	str	r0, [sp, #100]	; 0x64
 8003bb8:	e76f      	b.n	8003a9a <_strtod_l+0x152>
 8003bba:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003bbc:	195a      	adds	r2, r3, r5
 8003bbe:	9219      	str	r2, [sp, #100]	; 0x64
 8003bc0:	9a06      	ldr	r2, [sp, #24]
 8003bc2:	5d5b      	ldrb	r3, [r3, r5]
 8003bc4:	2a00      	cmp	r2, #0
 8003bc6:	d148      	bne.n	8003c5a <_strtod_l+0x312>
 8003bc8:	4610      	mov	r0, r2
 8003bca:	2b30      	cmp	r3, #48	; 0x30
 8003bcc:	d02a      	beq.n	8003c24 <_strtod_l+0x2dc>
 8003bce:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 8003bd2:	2a08      	cmp	r2, #8
 8003bd4:	f200 8491 	bhi.w	80044fa <_strtod_l+0xbb2>
 8003bd8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8003bda:	920a      	str	r2, [sp, #40]	; 0x28
 8003bdc:	4602      	mov	r2, r0
 8003bde:	2000      	movs	r0, #0
 8003be0:	4605      	mov	r5, r0
 8003be2:	3b30      	subs	r3, #48	; 0x30
 8003be4:	f100 0101 	add.w	r1, r0, #1
 8003be8:	d011      	beq.n	8003c0e <_strtod_l+0x2c6>
 8003bea:	440a      	add	r2, r1
 8003bec:	eb00 0c05 	add.w	ip, r0, r5
 8003bf0:	4629      	mov	r1, r5
 8003bf2:	260a      	movs	r6, #10
 8003bf4:	4561      	cmp	r1, ip
 8003bf6:	d11b      	bne.n	8003c30 <_strtod_l+0x2e8>
 8003bf8:	4428      	add	r0, r5
 8003bfa:	2808      	cmp	r0, #8
 8003bfc:	f100 0501 	add.w	r5, r0, #1
 8003c00:	dc25      	bgt.n	8003c4e <_strtod_l+0x306>
 8003c02:	9807      	ldr	r0, [sp, #28]
 8003c04:	210a      	movs	r1, #10
 8003c06:	fb01 3300 	mla	r3, r1, r0, r3
 8003c0a:	9307      	str	r3, [sp, #28]
 8003c0c:	2100      	movs	r1, #0
 8003c0e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003c10:	1c58      	adds	r0, r3, #1
 8003c12:	9019      	str	r0, [sp, #100]	; 0x64
 8003c14:	785b      	ldrb	r3, [r3, #1]
 8003c16:	4608      	mov	r0, r1
 8003c18:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8003c1c:	2909      	cmp	r1, #9
 8003c1e:	d9e0      	bls.n	8003be2 <_strtod_l+0x29a>
 8003c20:	2101      	movs	r1, #1
 8003c22:	e74d      	b.n	8003ac0 <_strtod_l+0x178>
 8003c24:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003c26:	1c5a      	adds	r2, r3, #1
 8003c28:	9219      	str	r2, [sp, #100]	; 0x64
 8003c2a:	3001      	adds	r0, #1
 8003c2c:	785b      	ldrb	r3, [r3, #1]
 8003c2e:	e7cc      	b.n	8003bca <_strtod_l+0x282>
 8003c30:	3101      	adds	r1, #1
 8003c32:	f101 3eff 	add.w	lr, r1, #4294967295
 8003c36:	f1be 0f08 	cmp.w	lr, #8
 8003c3a:	dc03      	bgt.n	8003c44 <_strtod_l+0x2fc>
 8003c3c:	9f07      	ldr	r7, [sp, #28]
 8003c3e:	4377      	muls	r7, r6
 8003c40:	9707      	str	r7, [sp, #28]
 8003c42:	e7d7      	b.n	8003bf4 <_strtod_l+0x2ac>
 8003c44:	2910      	cmp	r1, #16
 8003c46:	bfd8      	it	le
 8003c48:	fb06 f909 	mulle.w	r9, r6, r9
 8003c4c:	e7d2      	b.n	8003bf4 <_strtod_l+0x2ac>
 8003c4e:	2d10      	cmp	r5, #16
 8003c50:	bfdc      	itt	le
 8003c52:	210a      	movle	r1, #10
 8003c54:	fb01 3909 	mlale	r9, r1, r9, r3
 8003c58:	e7d8      	b.n	8003c0c <_strtod_l+0x2c4>
 8003c5a:	4602      	mov	r2, r0
 8003c5c:	9d06      	ldr	r5, [sp, #24]
 8003c5e:	e7db      	b.n	8003c18 <_strtod_l+0x2d0>
 8003c60:	08006fcc 	.word	0x08006fcc
 8003c64:	08006f95 	.word	0x08006f95
 8003c68:	08007023 	.word	0x08007023
 8003c6c:	7ff00000 	.word	0x7ff00000
 8003c70:	2101      	movs	r1, #1
 8003c72:	e72b      	b.n	8003acc <_strtod_l+0x184>
 8003c74:	2300      	movs	r3, #0
 8003c76:	9305      	str	r3, [sp, #20]
 8003c78:	1ca3      	adds	r3, r4, #2
 8003c7a:	9319      	str	r3, [sp, #100]	; 0x64
 8003c7c:	78a3      	ldrb	r3, [r4, #2]
 8003c7e:	e736      	b.n	8003aee <_strtod_l+0x1a6>
 8003c80:	2301      	movs	r3, #1
 8003c82:	e7f8      	b.n	8003c76 <_strtod_l+0x32e>
 8003c84:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003c86:	1c5e      	adds	r6, r3, #1
 8003c88:	9619      	str	r6, [sp, #100]	; 0x64
 8003c8a:	785b      	ldrb	r3, [r3, #1]
 8003c8c:	e734      	b.n	8003af8 <_strtod_l+0x1b0>
 8003c8e:	fb0c 3e0e 	mla	lr, ip, lr, r3
 8003c92:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8003c96:	e73d      	b.n	8003b14 <_strtod_l+0x1cc>
 8003c98:	9419      	str	r4, [sp, #100]	; 0x64
 8003c9a:	f04f 0800 	mov.w	r8, #0
 8003c9e:	e74f      	b.n	8003b40 <_strtod_l+0x1f8>
 8003ca0:	2b69      	cmp	r3, #105	; 0x69
 8003ca2:	f43f af62 	beq.w	8003b6a <_strtod_l+0x222>
 8003ca6:	2b6e      	cmp	r3, #110	; 0x6e
 8003ca8:	f47f aeac 	bne.w	8003a04 <_strtod_l+0xbc>
 8003cac:	4988      	ldr	r1, [pc, #544]	; (8003ed0 <_strtod_l+0x588>)
 8003cae:	a819      	add	r0, sp, #100	; 0x64
 8003cb0:	f001 ff2a 	bl	8005b08 <__match>
 8003cb4:	2800      	cmp	r0, #0
 8003cb6:	f43f aea5 	beq.w	8003a04 <_strtod_l+0xbc>
 8003cba:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003cbc:	781b      	ldrb	r3, [r3, #0]
 8003cbe:	2b28      	cmp	r3, #40	; 0x28
 8003cc0:	d10e      	bne.n	8003ce0 <_strtod_l+0x398>
 8003cc2:	aa1c      	add	r2, sp, #112	; 0x70
 8003cc4:	4983      	ldr	r1, [pc, #524]	; (8003ed4 <_strtod_l+0x58c>)
 8003cc6:	a819      	add	r0, sp, #100	; 0x64
 8003cc8:	f001 ff31 	bl	8005b2e <__hexnan>
 8003ccc:	2805      	cmp	r0, #5
 8003cce:	d107      	bne.n	8003ce0 <_strtod_l+0x398>
 8003cd0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8003cd2:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
 8003cd6:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8003cda:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8003cde:	e673      	b.n	80039c8 <_strtod_l+0x80>
 8003ce0:	f8df b200 	ldr.w	fp, [pc, #512]	; 8003ee4 <_strtod_l+0x59c>
 8003ce4:	e755      	b.n	8003b92 <_strtod_l+0x24a>
 8003ce6:	9b06      	ldr	r3, [sp, #24]
 8003ce8:	9807      	ldr	r0, [sp, #28]
 8003cea:	2b00      	cmp	r3, #0
 8003cec:	bf08      	it	eq
 8003cee:	462b      	moveq	r3, r5
 8003cf0:	2d10      	cmp	r5, #16
 8003cf2:	462c      	mov	r4, r5
 8003cf4:	eba8 0802 	sub.w	r8, r8, r2
 8003cf8:	bfa8      	it	ge
 8003cfa:	2410      	movge	r4, #16
 8003cfc:	9306      	str	r3, [sp, #24]
 8003cfe:	f7fc fbdf 	bl	80004c0 <__aeabi_ui2d>
 8003d02:	2c09      	cmp	r4, #9
 8003d04:	4682      	mov	sl, r0
 8003d06:	468b      	mov	fp, r1
 8003d08:	dd13      	ble.n	8003d32 <_strtod_l+0x3ea>
 8003d0a:	4b73      	ldr	r3, [pc, #460]	; (8003ed8 <_strtod_l+0x590>)
 8003d0c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003d10:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8003d14:	f7fc fc4a 	bl	80005ac <__aeabi_dmul>
 8003d18:	4606      	mov	r6, r0
 8003d1a:	4648      	mov	r0, r9
 8003d1c:	460f      	mov	r7, r1
 8003d1e:	f7fc fbcf 	bl	80004c0 <__aeabi_ui2d>
 8003d22:	4602      	mov	r2, r0
 8003d24:	460b      	mov	r3, r1
 8003d26:	4630      	mov	r0, r6
 8003d28:	4639      	mov	r1, r7
 8003d2a:	f7fc fa8d 	bl	8000248 <__adddf3>
 8003d2e:	4682      	mov	sl, r0
 8003d30:	468b      	mov	fp, r1
 8003d32:	2d0f      	cmp	r5, #15
 8003d34:	dc36      	bgt.n	8003da4 <_strtod_l+0x45c>
 8003d36:	f1b8 0f00 	cmp.w	r8, #0
 8003d3a:	f43f ae45 	beq.w	80039c8 <_strtod_l+0x80>
 8003d3e:	dd24      	ble.n	8003d8a <_strtod_l+0x442>
 8003d40:	f1b8 0f16 	cmp.w	r8, #22
 8003d44:	dc0b      	bgt.n	8003d5e <_strtod_l+0x416>
 8003d46:	4d64      	ldr	r5, [pc, #400]	; (8003ed8 <_strtod_l+0x590>)
 8003d48:	eb05 08c8 	add.w	r8, r5, r8, lsl #3
 8003d4c:	e9d8 0100 	ldrd	r0, r1, [r8]
 8003d50:	4652      	mov	r2, sl
 8003d52:	465b      	mov	r3, fp
 8003d54:	f7fc fc2a 	bl	80005ac <__aeabi_dmul>
 8003d58:	4682      	mov	sl, r0
 8003d5a:	468b      	mov	fp, r1
 8003d5c:	e634      	b.n	80039c8 <_strtod_l+0x80>
 8003d5e:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8003d62:	4598      	cmp	r8, r3
 8003d64:	dc1e      	bgt.n	8003da4 <_strtod_l+0x45c>
 8003d66:	4c5c      	ldr	r4, [pc, #368]	; (8003ed8 <_strtod_l+0x590>)
 8003d68:	f1c5 050f 	rsb	r5, r5, #15
 8003d6c:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8003d70:	eba8 0505 	sub.w	r5, r8, r5
 8003d74:	4652      	mov	r2, sl
 8003d76:	465b      	mov	r3, fp
 8003d78:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003d7c:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8003d80:	f7fc fc14 	bl	80005ac <__aeabi_dmul>
 8003d84:	e9d4 2300 	ldrd	r2, r3, [r4]
 8003d88:	e7e4      	b.n	8003d54 <_strtod_l+0x40c>
 8003d8a:	f118 0f16 	cmn.w	r8, #22
 8003d8e:	db09      	blt.n	8003da4 <_strtod_l+0x45c>
 8003d90:	4d51      	ldr	r5, [pc, #324]	; (8003ed8 <_strtod_l+0x590>)
 8003d92:	eba5 08c8 	sub.w	r8, r5, r8, lsl #3
 8003d96:	e9d8 2300 	ldrd	r2, r3, [r8]
 8003d9a:	4650      	mov	r0, sl
 8003d9c:	4659      	mov	r1, fp
 8003d9e:	f7fc fd2f 	bl	8000800 <__aeabi_ddiv>
 8003da2:	e7d9      	b.n	8003d58 <_strtod_l+0x410>
 8003da4:	1b2c      	subs	r4, r5, r4
 8003da6:	4444      	add	r4, r8
 8003da8:	2c00      	cmp	r4, #0
 8003daa:	dd70      	ble.n	8003e8e <_strtod_l+0x546>
 8003dac:	f014 030f 	ands.w	r3, r4, #15
 8003db0:	d00a      	beq.n	8003dc8 <_strtod_l+0x480>
 8003db2:	4949      	ldr	r1, [pc, #292]	; (8003ed8 <_strtod_l+0x590>)
 8003db4:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8003db8:	4652      	mov	r2, sl
 8003dba:	465b      	mov	r3, fp
 8003dbc:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003dc0:	f7fc fbf4 	bl	80005ac <__aeabi_dmul>
 8003dc4:	4682      	mov	sl, r0
 8003dc6:	468b      	mov	fp, r1
 8003dc8:	f034 040f 	bics.w	r4, r4, #15
 8003dcc:	d050      	beq.n	8003e70 <_strtod_l+0x528>
 8003dce:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
 8003dd2:	dd23      	ble.n	8003e1c <_strtod_l+0x4d4>
 8003dd4:	2400      	movs	r4, #0
 8003dd6:	4625      	mov	r5, r4
 8003dd8:	9407      	str	r4, [sp, #28]
 8003dda:	9406      	str	r4, [sp, #24]
 8003ddc:	9a04      	ldr	r2, [sp, #16]
 8003dde:	f8df b108 	ldr.w	fp, [pc, #264]	; 8003ee8 <_strtod_l+0x5a0>
 8003de2:	2322      	movs	r3, #34	; 0x22
 8003de4:	6013      	str	r3, [r2, #0]
 8003de6:	f04f 0a00 	mov.w	sl, #0
 8003dea:	9b07      	ldr	r3, [sp, #28]
 8003dec:	2b00      	cmp	r3, #0
 8003dee:	f43f adeb 	beq.w	80039c8 <_strtod_l+0x80>
 8003df2:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003df4:	9804      	ldr	r0, [sp, #16]
 8003df6:	f001 fff4 	bl	8005de2 <_Bfree>
 8003dfa:	9906      	ldr	r1, [sp, #24]
 8003dfc:	9804      	ldr	r0, [sp, #16]
 8003dfe:	f001 fff0 	bl	8005de2 <_Bfree>
 8003e02:	4629      	mov	r1, r5
 8003e04:	9804      	ldr	r0, [sp, #16]
 8003e06:	f001 ffec 	bl	8005de2 <_Bfree>
 8003e0a:	9907      	ldr	r1, [sp, #28]
 8003e0c:	9804      	ldr	r0, [sp, #16]
 8003e0e:	f001 ffe8 	bl	8005de2 <_Bfree>
 8003e12:	4621      	mov	r1, r4
 8003e14:	9804      	ldr	r0, [sp, #16]
 8003e16:	f001 ffe4 	bl	8005de2 <_Bfree>
 8003e1a:	e5d5      	b.n	80039c8 <_strtod_l+0x80>
 8003e1c:	4e2f      	ldr	r6, [pc, #188]	; (8003edc <_strtod_l+0x594>)
 8003e1e:	2300      	movs	r3, #0
 8003e20:	1124      	asrs	r4, r4, #4
 8003e22:	4650      	mov	r0, sl
 8003e24:	4659      	mov	r1, fp
 8003e26:	4699      	mov	r9, r3
 8003e28:	4637      	mov	r7, r6
 8003e2a:	2c01      	cmp	r4, #1
 8003e2c:	dc23      	bgt.n	8003e76 <_strtod_l+0x52e>
 8003e2e:	b10b      	cbz	r3, 8003e34 <_strtod_l+0x4ec>
 8003e30:	4682      	mov	sl, r0
 8003e32:	468b      	mov	fp, r1
 8003e34:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8003e38:	eb07 07c9 	add.w	r7, r7, r9, lsl #3
 8003e3c:	4652      	mov	r2, sl
 8003e3e:	465b      	mov	r3, fp
 8003e40:	e9d7 0100 	ldrd	r0, r1, [r7]
 8003e44:	f7fc fbb2 	bl	80005ac <__aeabi_dmul>
 8003e48:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8003e4c:	468b      	mov	fp, r1
 8003e4e:	460a      	mov	r2, r1
 8003e50:	0d1b      	lsrs	r3, r3, #20
 8003e52:	4923      	ldr	r1, [pc, #140]	; (8003ee0 <_strtod_l+0x598>)
 8003e54:	051b      	lsls	r3, r3, #20
 8003e56:	428b      	cmp	r3, r1
 8003e58:	4682      	mov	sl, r0
 8003e5a:	d8bb      	bhi.n	8003dd4 <_strtod_l+0x48c>
 8003e5c:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8003e60:	428b      	cmp	r3, r1
 8003e62:	bf86      	itte	hi
 8003e64:	f8df b084 	ldrhi.w	fp, [pc, #132]	; 8003eec <_strtod_l+0x5a4>
 8003e68:	f04f 3aff 	movhi.w	sl, #4294967295
 8003e6c:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8003e70:	2300      	movs	r3, #0
 8003e72:	9305      	str	r3, [sp, #20]
 8003e74:	e06d      	b.n	8003f52 <_strtod_l+0x60a>
 8003e76:	07e2      	lsls	r2, r4, #31
 8003e78:	d504      	bpl.n	8003e84 <_strtod_l+0x53c>
 8003e7a:	e9d6 2300 	ldrd	r2, r3, [r6]
 8003e7e:	f7fc fb95 	bl	80005ac <__aeabi_dmul>
 8003e82:	2301      	movs	r3, #1
 8003e84:	f109 0901 	add.w	r9, r9, #1
 8003e88:	1064      	asrs	r4, r4, #1
 8003e8a:	3608      	adds	r6, #8
 8003e8c:	e7cd      	b.n	8003e2a <_strtod_l+0x4e2>
 8003e8e:	d0ef      	beq.n	8003e70 <_strtod_l+0x528>
 8003e90:	4264      	negs	r4, r4
 8003e92:	f014 020f 	ands.w	r2, r4, #15
 8003e96:	d00a      	beq.n	8003eae <_strtod_l+0x566>
 8003e98:	4b0f      	ldr	r3, [pc, #60]	; (8003ed8 <_strtod_l+0x590>)
 8003e9a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003e9e:	4650      	mov	r0, sl
 8003ea0:	4659      	mov	r1, fp
 8003ea2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ea6:	f7fc fcab 	bl	8000800 <__aeabi_ddiv>
 8003eaa:	4682      	mov	sl, r0
 8003eac:	468b      	mov	fp, r1
 8003eae:	1124      	asrs	r4, r4, #4
 8003eb0:	d0de      	beq.n	8003e70 <_strtod_l+0x528>
 8003eb2:	2c1f      	cmp	r4, #31
 8003eb4:	dd1c      	ble.n	8003ef0 <_strtod_l+0x5a8>
 8003eb6:	2400      	movs	r4, #0
 8003eb8:	4625      	mov	r5, r4
 8003eba:	9407      	str	r4, [sp, #28]
 8003ebc:	9406      	str	r4, [sp, #24]
 8003ebe:	9a04      	ldr	r2, [sp, #16]
 8003ec0:	2322      	movs	r3, #34	; 0x22
 8003ec2:	f04f 0a00 	mov.w	sl, #0
 8003ec6:	f04f 0b00 	mov.w	fp, #0
 8003eca:	6013      	str	r3, [r2, #0]
 8003ecc:	e78d      	b.n	8003dea <_strtod_l+0x4a2>
 8003ece:	bf00      	nop
 8003ed0:	08006f9d 	.word	0x08006f9d
 8003ed4:	08006fe0 	.word	0x08006fe0
 8003ed8:	080070c8 	.word	0x080070c8
 8003edc:	080070a0 	.word	0x080070a0
 8003ee0:	7ca00000 	.word	0x7ca00000
 8003ee4:	fff80000 	.word	0xfff80000
 8003ee8:	7ff00000 	.word	0x7ff00000
 8003eec:	7fefffff 	.word	0x7fefffff
 8003ef0:	f014 0310 	ands.w	r3, r4, #16
 8003ef4:	bf18      	it	ne
 8003ef6:	236a      	movne	r3, #106	; 0x6a
 8003ef8:	4ea0      	ldr	r6, [pc, #640]	; (800417c <_strtod_l+0x834>)
 8003efa:	9305      	str	r3, [sp, #20]
 8003efc:	4650      	mov	r0, sl
 8003efe:	4659      	mov	r1, fp
 8003f00:	2300      	movs	r3, #0
 8003f02:	2c00      	cmp	r4, #0
 8003f04:	f300 8106 	bgt.w	8004114 <_strtod_l+0x7cc>
 8003f08:	b10b      	cbz	r3, 8003f0e <_strtod_l+0x5c6>
 8003f0a:	4682      	mov	sl, r0
 8003f0c:	468b      	mov	fp, r1
 8003f0e:	9b05      	ldr	r3, [sp, #20]
 8003f10:	b1bb      	cbz	r3, 8003f42 <_strtod_l+0x5fa>
 8003f12:	f3cb 530a 	ubfx	r3, fp, #20, #11
 8003f16:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003f1a:	2b00      	cmp	r3, #0
 8003f1c:	4659      	mov	r1, fp
 8003f1e:	dd10      	ble.n	8003f42 <_strtod_l+0x5fa>
 8003f20:	2b1f      	cmp	r3, #31
 8003f22:	f340 8101 	ble.w	8004128 <_strtod_l+0x7e0>
 8003f26:	2b34      	cmp	r3, #52	; 0x34
 8003f28:	bfde      	ittt	le
 8003f2a:	3b20      	suble	r3, #32
 8003f2c:	f04f 32ff 	movle.w	r2, #4294967295
 8003f30:	fa02 f303 	lslle.w	r3, r2, r3
 8003f34:	f04f 0a00 	mov.w	sl, #0
 8003f38:	bfcc      	ite	gt
 8003f3a:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 8003f3e:	ea03 0b01 	andle.w	fp, r3, r1
 8003f42:	2200      	movs	r2, #0
 8003f44:	2300      	movs	r3, #0
 8003f46:	4650      	mov	r0, sl
 8003f48:	4659      	mov	r1, fp
 8003f4a:	f7fc fe0f 	bl	8000b6c <__aeabi_dcmpeq>
 8003f4e:	2800      	cmp	r0, #0
 8003f50:	d1b1      	bne.n	8003eb6 <_strtod_l+0x56e>
 8003f52:	9b07      	ldr	r3, [sp, #28]
 8003f54:	9300      	str	r3, [sp, #0]
 8003f56:	9a06      	ldr	r2, [sp, #24]
 8003f58:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003f5a:	9804      	ldr	r0, [sp, #16]
 8003f5c:	462b      	mov	r3, r5
 8003f5e:	f001 ff92 	bl	8005e86 <__s2b>
 8003f62:	9007      	str	r0, [sp, #28]
 8003f64:	2800      	cmp	r0, #0
 8003f66:	f43f af35 	beq.w	8003dd4 <_strtod_l+0x48c>
 8003f6a:	f1b8 0f00 	cmp.w	r8, #0
 8003f6e:	f1c8 0300 	rsb	r3, r8, #0
 8003f72:	bfa8      	it	ge
 8003f74:	2300      	movge	r3, #0
 8003f76:	930e      	str	r3, [sp, #56]	; 0x38
 8003f78:	2400      	movs	r4, #0
 8003f7a:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8003f7e:	930f      	str	r3, [sp, #60]	; 0x3c
 8003f80:	4625      	mov	r5, r4
 8003f82:	9b07      	ldr	r3, [sp, #28]
 8003f84:	9804      	ldr	r0, [sp, #16]
 8003f86:	6859      	ldr	r1, [r3, #4]
 8003f88:	f001 fef7 	bl	8005d7a <_Balloc>
 8003f8c:	9006      	str	r0, [sp, #24]
 8003f8e:	2800      	cmp	r0, #0
 8003f90:	f43f af24 	beq.w	8003ddc <_strtod_l+0x494>
 8003f94:	9b07      	ldr	r3, [sp, #28]
 8003f96:	691a      	ldr	r2, [r3, #16]
 8003f98:	3202      	adds	r2, #2
 8003f9a:	f103 010c 	add.w	r1, r3, #12
 8003f9e:	0092      	lsls	r2, r2, #2
 8003fa0:	300c      	adds	r0, #12
 8003fa2:	f001 fedd 	bl	8005d60 <memcpy>
 8003fa6:	aa1c      	add	r2, sp, #112	; 0x70
 8003fa8:	a91b      	add	r1, sp, #108	; 0x6c
 8003faa:	ec4b ab10 	vmov	d0, sl, fp
 8003fae:	9804      	ldr	r0, [sp, #16]
 8003fb0:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 8003fb4:	f002 fa18 	bl	80063e8 <__d2b>
 8003fb8:	901a      	str	r0, [sp, #104]	; 0x68
 8003fba:	2800      	cmp	r0, #0
 8003fbc:	f43f af0e 	beq.w	8003ddc <_strtod_l+0x494>
 8003fc0:	2101      	movs	r1, #1
 8003fc2:	9804      	ldr	r0, [sp, #16]
 8003fc4:	f001 ffeb 	bl	8005f9e <__i2b>
 8003fc8:	4605      	mov	r5, r0
 8003fca:	2800      	cmp	r0, #0
 8003fcc:	f43f af06 	beq.w	8003ddc <_strtod_l+0x494>
 8003fd0:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8003fd2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003fd4:	2e00      	cmp	r6, #0
 8003fd6:	bfab      	itete	ge
 8003fd8:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8003fda:	9b0f      	ldrlt	r3, [sp, #60]	; 0x3c
 8003fdc:	9f0f      	ldrge	r7, [sp, #60]	; 0x3c
 8003fde:	f8dd 8038 	ldrlt.w	r8, [sp, #56]	; 0x38
 8003fe2:	bfac      	ite	ge
 8003fe4:	eb03 0806 	addge.w	r8, r3, r6
 8003fe8:	1b9f      	sublt	r7, r3, r6
 8003fea:	9b05      	ldr	r3, [sp, #20]
 8003fec:	1af6      	subs	r6, r6, r3
 8003fee:	4416      	add	r6, r2
 8003ff0:	4b63      	ldr	r3, [pc, #396]	; (8004180 <_strtod_l+0x838>)
 8003ff2:	3e01      	subs	r6, #1
 8003ff4:	429e      	cmp	r6, r3
 8003ff6:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8003ffa:	f280 80a8 	bge.w	800414e <_strtod_l+0x806>
 8003ffe:	1b9b      	subs	r3, r3, r6
 8004000:	2b1f      	cmp	r3, #31
 8004002:	eba2 0203 	sub.w	r2, r2, r3
 8004006:	f04f 0901 	mov.w	r9, #1
 800400a:	f300 8094 	bgt.w	8004136 <_strtod_l+0x7ee>
 800400e:	fa09 f303 	lsl.w	r3, r9, r3
 8004012:	9314      	str	r3, [sp, #80]	; 0x50
 8004014:	2600      	movs	r6, #0
 8004016:	eb08 0902 	add.w	r9, r8, r2
 800401a:	9b05      	ldr	r3, [sp, #20]
 800401c:	45c8      	cmp	r8, r9
 800401e:	4417      	add	r7, r2
 8004020:	441f      	add	r7, r3
 8004022:	4643      	mov	r3, r8
 8004024:	bfa8      	it	ge
 8004026:	464b      	movge	r3, r9
 8004028:	42bb      	cmp	r3, r7
 800402a:	bfa8      	it	ge
 800402c:	463b      	movge	r3, r7
 800402e:	2b00      	cmp	r3, #0
 8004030:	bfc2      	ittt	gt
 8004032:	eba9 0903 	subgt.w	r9, r9, r3
 8004036:	1aff      	subgt	r7, r7, r3
 8004038:	eba8 0803 	subgt.w	r8, r8, r3
 800403c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800403e:	b1bb      	cbz	r3, 8004070 <_strtod_l+0x728>
 8004040:	4629      	mov	r1, r5
 8004042:	461a      	mov	r2, r3
 8004044:	9804      	ldr	r0, [sp, #16]
 8004046:	f002 f841 	bl	80060cc <__pow5mult>
 800404a:	4605      	mov	r5, r0
 800404c:	2800      	cmp	r0, #0
 800404e:	f43f aec5 	beq.w	8003ddc <_strtod_l+0x494>
 8004052:	4601      	mov	r1, r0
 8004054:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8004056:	9804      	ldr	r0, [sp, #16]
 8004058:	f001 ffaa 	bl	8005fb0 <__multiply>
 800405c:	9008      	str	r0, [sp, #32]
 800405e:	2800      	cmp	r0, #0
 8004060:	f43f aebc 	beq.w	8003ddc <_strtod_l+0x494>
 8004064:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004066:	9804      	ldr	r0, [sp, #16]
 8004068:	f001 febb 	bl	8005de2 <_Bfree>
 800406c:	9b08      	ldr	r3, [sp, #32]
 800406e:	931a      	str	r3, [sp, #104]	; 0x68
 8004070:	f1b9 0f00 	cmp.w	r9, #0
 8004074:	dc6f      	bgt.n	8004156 <_strtod_l+0x80e>
 8004076:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004078:	2b00      	cmp	r3, #0
 800407a:	d175      	bne.n	8004168 <_strtod_l+0x820>
 800407c:	2f00      	cmp	r7, #0
 800407e:	dd08      	ble.n	8004092 <_strtod_l+0x74a>
 8004080:	463a      	mov	r2, r7
 8004082:	9906      	ldr	r1, [sp, #24]
 8004084:	9804      	ldr	r0, [sp, #16]
 8004086:	f002 f86f 	bl	8006168 <__lshift>
 800408a:	9006      	str	r0, [sp, #24]
 800408c:	2800      	cmp	r0, #0
 800408e:	f43f aea5 	beq.w	8003ddc <_strtod_l+0x494>
 8004092:	f1b8 0f00 	cmp.w	r8, #0
 8004096:	dd08      	ble.n	80040aa <_strtod_l+0x762>
 8004098:	4629      	mov	r1, r5
 800409a:	4642      	mov	r2, r8
 800409c:	9804      	ldr	r0, [sp, #16]
 800409e:	f002 f863 	bl	8006168 <__lshift>
 80040a2:	4605      	mov	r5, r0
 80040a4:	2800      	cmp	r0, #0
 80040a6:	f43f ae99 	beq.w	8003ddc <_strtod_l+0x494>
 80040aa:	9a06      	ldr	r2, [sp, #24]
 80040ac:	991a      	ldr	r1, [sp, #104]	; 0x68
 80040ae:	9804      	ldr	r0, [sp, #16]
 80040b0:	f002 f8c5 	bl	800623e <__mdiff>
 80040b4:	4604      	mov	r4, r0
 80040b6:	2800      	cmp	r0, #0
 80040b8:	f43f ae90 	beq.w	8003ddc <_strtod_l+0x494>
 80040bc:	68c3      	ldr	r3, [r0, #12]
 80040be:	9308      	str	r3, [sp, #32]
 80040c0:	2300      	movs	r3, #0
 80040c2:	60c3      	str	r3, [r0, #12]
 80040c4:	4629      	mov	r1, r5
 80040c6:	f002 f8a0 	bl	800620a <__mcmp>
 80040ca:	2800      	cmp	r0, #0
 80040cc:	da5a      	bge.n	8004184 <_strtod_l+0x83c>
 80040ce:	9b08      	ldr	r3, [sp, #32]
 80040d0:	b9e3      	cbnz	r3, 800410c <_strtod_l+0x7c4>
 80040d2:	f1ba 0f00 	cmp.w	sl, #0
 80040d6:	d119      	bne.n	800410c <_strtod_l+0x7c4>
 80040d8:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80040dc:	b9b3      	cbnz	r3, 800410c <_strtod_l+0x7c4>
 80040de:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80040e2:	0d1b      	lsrs	r3, r3, #20
 80040e4:	051b      	lsls	r3, r3, #20
 80040e6:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80040ea:	d90f      	bls.n	800410c <_strtod_l+0x7c4>
 80040ec:	6963      	ldr	r3, [r4, #20]
 80040ee:	b913      	cbnz	r3, 80040f6 <_strtod_l+0x7ae>
 80040f0:	6923      	ldr	r3, [r4, #16]
 80040f2:	2b01      	cmp	r3, #1
 80040f4:	dd0a      	ble.n	800410c <_strtod_l+0x7c4>
 80040f6:	4621      	mov	r1, r4
 80040f8:	2201      	movs	r2, #1
 80040fa:	9804      	ldr	r0, [sp, #16]
 80040fc:	f002 f834 	bl	8006168 <__lshift>
 8004100:	4629      	mov	r1, r5
 8004102:	4604      	mov	r4, r0
 8004104:	f002 f881 	bl	800620a <__mcmp>
 8004108:	2800      	cmp	r0, #0
 800410a:	dc6c      	bgt.n	80041e6 <_strtod_l+0x89e>
 800410c:	9b05      	ldr	r3, [sp, #20]
 800410e:	2b00      	cmp	r3, #0
 8004110:	d176      	bne.n	8004200 <_strtod_l+0x8b8>
 8004112:	e66e      	b.n	8003df2 <_strtod_l+0x4aa>
 8004114:	07e2      	lsls	r2, r4, #31
 8004116:	d504      	bpl.n	8004122 <_strtod_l+0x7da>
 8004118:	e9d6 2300 	ldrd	r2, r3, [r6]
 800411c:	f7fc fa46 	bl	80005ac <__aeabi_dmul>
 8004120:	2301      	movs	r3, #1
 8004122:	1064      	asrs	r4, r4, #1
 8004124:	3608      	adds	r6, #8
 8004126:	e6ec      	b.n	8003f02 <_strtod_l+0x5ba>
 8004128:	f04f 32ff 	mov.w	r2, #4294967295
 800412c:	fa02 f303 	lsl.w	r3, r2, r3
 8004130:	ea03 0a0a 	and.w	sl, r3, sl
 8004134:	e705      	b.n	8003f42 <_strtod_l+0x5fa>
 8004136:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 800413a:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 800413e:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 8004142:	36e2      	adds	r6, #226	; 0xe2
 8004144:	fa09 f606 	lsl.w	r6, r9, r6
 8004148:	f8cd 9050 	str.w	r9, [sp, #80]	; 0x50
 800414c:	e763      	b.n	8004016 <_strtod_l+0x6ce>
 800414e:	2301      	movs	r3, #1
 8004150:	2600      	movs	r6, #0
 8004152:	9314      	str	r3, [sp, #80]	; 0x50
 8004154:	e75f      	b.n	8004016 <_strtod_l+0x6ce>
 8004156:	464a      	mov	r2, r9
 8004158:	991a      	ldr	r1, [sp, #104]	; 0x68
 800415a:	9804      	ldr	r0, [sp, #16]
 800415c:	f002 f804 	bl	8006168 <__lshift>
 8004160:	901a      	str	r0, [sp, #104]	; 0x68
 8004162:	2800      	cmp	r0, #0
 8004164:	d187      	bne.n	8004076 <_strtod_l+0x72e>
 8004166:	e639      	b.n	8003ddc <_strtod_l+0x494>
 8004168:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800416a:	9906      	ldr	r1, [sp, #24]
 800416c:	9804      	ldr	r0, [sp, #16]
 800416e:	f001 ffad 	bl	80060cc <__pow5mult>
 8004172:	9006      	str	r0, [sp, #24]
 8004174:	2800      	cmp	r0, #0
 8004176:	d181      	bne.n	800407c <_strtod_l+0x734>
 8004178:	e630      	b.n	8003ddc <_strtod_l+0x494>
 800417a:	bf00      	nop
 800417c:	08006ff8 	.word	0x08006ff8
 8004180:	fffffc02 	.word	0xfffffc02
 8004184:	f040 8086 	bne.w	8004294 <_strtod_l+0x94c>
 8004188:	9a08      	ldr	r2, [sp, #32]
 800418a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800418e:	b332      	cbz	r2, 80041de <_strtod_l+0x896>
 8004190:	4aad      	ldr	r2, [pc, #692]	; (8004448 <_strtod_l+0xb00>)
 8004192:	4293      	cmp	r3, r2
 8004194:	4659      	mov	r1, fp
 8004196:	d152      	bne.n	800423e <_strtod_l+0x8f6>
 8004198:	9b05      	ldr	r3, [sp, #20]
 800419a:	4650      	mov	r0, sl
 800419c:	b1d3      	cbz	r3, 80041d4 <_strtod_l+0x88c>
 800419e:	4aab      	ldr	r2, [pc, #684]	; (800444c <_strtod_l+0xb04>)
 80041a0:	400a      	ands	r2, r1
 80041a2:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 80041a6:	f04f 37ff 	mov.w	r7, #4294967295
 80041aa:	d816      	bhi.n	80041da <_strtod_l+0x892>
 80041ac:	0d12      	lsrs	r2, r2, #20
 80041ae:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 80041b2:	fa07 f303 	lsl.w	r3, r7, r3
 80041b6:	4283      	cmp	r3, r0
 80041b8:	d141      	bne.n	800423e <_strtod_l+0x8f6>
 80041ba:	4aa5      	ldr	r2, [pc, #660]	; (8004450 <_strtod_l+0xb08>)
 80041bc:	4291      	cmp	r1, r2
 80041be:	d102      	bne.n	80041c6 <_strtod_l+0x87e>
 80041c0:	3301      	adds	r3, #1
 80041c2:	f43f ae0b 	beq.w	8003ddc <_strtod_l+0x494>
 80041c6:	4ba1      	ldr	r3, [pc, #644]	; (800444c <_strtod_l+0xb04>)
 80041c8:	400b      	ands	r3, r1
 80041ca:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 80041ce:	f04f 0a00 	mov.w	sl, #0
 80041d2:	e79b      	b.n	800410c <_strtod_l+0x7c4>
 80041d4:	f04f 33ff 	mov.w	r3, #4294967295
 80041d8:	e7ed      	b.n	80041b6 <_strtod_l+0x86e>
 80041da:	463b      	mov	r3, r7
 80041dc:	e7eb      	b.n	80041b6 <_strtod_l+0x86e>
 80041de:	bb73      	cbnz	r3, 800423e <_strtod_l+0x8f6>
 80041e0:	f1ba 0f00 	cmp.w	sl, #0
 80041e4:	d12b      	bne.n	800423e <_strtod_l+0x8f6>
 80041e6:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80041ea:	9a05      	ldr	r2, [sp, #20]
 80041ec:	0d1b      	lsrs	r3, r3, #20
 80041ee:	051b      	lsls	r3, r3, #20
 80041f0:	b1e2      	cbz	r2, 800422c <_strtod_l+0x8e4>
 80041f2:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80041f6:	dc19      	bgt.n	800422c <_strtod_l+0x8e4>
 80041f8:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
 80041fc:	f77f ae5f 	ble.w	8003ebe <_strtod_l+0x576>
 8004200:	4b94      	ldr	r3, [pc, #592]	; (8004454 <_strtod_l+0xb0c>)
 8004202:	930d      	str	r3, [sp, #52]	; 0x34
 8004204:	2300      	movs	r3, #0
 8004206:	930c      	str	r3, [sp, #48]	; 0x30
 8004208:	4650      	mov	r0, sl
 800420a:	4659      	mov	r1, fp
 800420c:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8004210:	f7fc f9cc 	bl	80005ac <__aeabi_dmul>
 8004214:	4682      	mov	sl, r0
 8004216:	468b      	mov	fp, r1
 8004218:	2900      	cmp	r1, #0
 800421a:	f47f adea 	bne.w	8003df2 <_strtod_l+0x4aa>
 800421e:	2800      	cmp	r0, #0
 8004220:	f47f ade7 	bne.w	8003df2 <_strtod_l+0x4aa>
 8004224:	9a04      	ldr	r2, [sp, #16]
 8004226:	2322      	movs	r3, #34	; 0x22
 8004228:	6013      	str	r3, [r2, #0]
 800422a:	e5e2      	b.n	8003df2 <_strtod_l+0x4aa>
 800422c:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8004230:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8004234:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8004238:	f04f 3aff 	mov.w	sl, #4294967295
 800423c:	e766      	b.n	800410c <_strtod_l+0x7c4>
 800423e:	b19e      	cbz	r6, 8004268 <_strtod_l+0x920>
 8004240:	ea16 0f0b 	tst.w	r6, fp
 8004244:	f43f af62 	beq.w	800410c <_strtod_l+0x7c4>
 8004248:	9b08      	ldr	r3, [sp, #32]
 800424a:	9a05      	ldr	r2, [sp, #20]
 800424c:	4650      	mov	r0, sl
 800424e:	4659      	mov	r1, fp
 8004250:	b173      	cbz	r3, 8004270 <_strtod_l+0x928>
 8004252:	f7ff fb5b 	bl	800390c <sulp>
 8004256:	4602      	mov	r2, r0
 8004258:	460b      	mov	r3, r1
 800425a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800425e:	f7fb fff3 	bl	8000248 <__adddf3>
 8004262:	4682      	mov	sl, r0
 8004264:	468b      	mov	fp, r1
 8004266:	e751      	b.n	800410c <_strtod_l+0x7c4>
 8004268:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800426a:	ea13 0f0a 	tst.w	r3, sl
 800426e:	e7e9      	b.n	8004244 <_strtod_l+0x8fc>
 8004270:	f7ff fb4c 	bl	800390c <sulp>
 8004274:	4602      	mov	r2, r0
 8004276:	460b      	mov	r3, r1
 8004278:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800427c:	f7fb ffe2 	bl	8000244 <__aeabi_dsub>
 8004280:	2200      	movs	r2, #0
 8004282:	2300      	movs	r3, #0
 8004284:	4682      	mov	sl, r0
 8004286:	468b      	mov	fp, r1
 8004288:	f7fc fc70 	bl	8000b6c <__aeabi_dcmpeq>
 800428c:	2800      	cmp	r0, #0
 800428e:	f47f ae16 	bne.w	8003ebe <_strtod_l+0x576>
 8004292:	e73b      	b.n	800410c <_strtod_l+0x7c4>
 8004294:	4629      	mov	r1, r5
 8004296:	4620      	mov	r0, r4
 8004298:	f002 f8f5 	bl	8006486 <__ratio>
 800429c:	ec57 6b10 	vmov	r6, r7, d0
 80042a0:	2200      	movs	r2, #0
 80042a2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80042a6:	ee10 0a10 	vmov	r0, s0
 80042aa:	4639      	mov	r1, r7
 80042ac:	f7fc fc72 	bl	8000b94 <__aeabi_dcmple>
 80042b0:	2800      	cmp	r0, #0
 80042b2:	d074      	beq.n	800439e <_strtod_l+0xa56>
 80042b4:	9b08      	ldr	r3, [sp, #32]
 80042b6:	2b00      	cmp	r3, #0
 80042b8:	d046      	beq.n	8004348 <_strtod_l+0xa00>
 80042ba:	f8df 919c 	ldr.w	r9, [pc, #412]	; 8004458 <_strtod_l+0xb10>
 80042be:	f04f 0800 	mov.w	r8, #0
 80042c2:	4f65      	ldr	r7, [pc, #404]	; (8004458 <_strtod_l+0xb10>)
 80042c4:	2600      	movs	r6, #0
 80042c6:	4b61      	ldr	r3, [pc, #388]	; (800444c <_strtod_l+0xb04>)
 80042c8:	ea0b 0303 	and.w	r3, fp, r3
 80042cc:	9314      	str	r3, [sp, #80]	; 0x50
 80042ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80042d0:	4b62      	ldr	r3, [pc, #392]	; (800445c <_strtod_l+0xb14>)
 80042d2:	429a      	cmp	r2, r3
 80042d4:	f040 80ca 	bne.w	800446c <_strtod_l+0xb24>
 80042d8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80042dc:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 80042e0:	ec4b ab10 	vmov	d0, sl, fp
 80042e4:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 80042e8:	f002 f808 	bl	80062fc <__ulp>
 80042ec:	4640      	mov	r0, r8
 80042ee:	ec53 2b10 	vmov	r2, r3, d0
 80042f2:	4649      	mov	r1, r9
 80042f4:	f7fc f95a 	bl	80005ac <__aeabi_dmul>
 80042f8:	4652      	mov	r2, sl
 80042fa:	465b      	mov	r3, fp
 80042fc:	f7fb ffa4 	bl	8000248 <__adddf3>
 8004300:	4a52      	ldr	r2, [pc, #328]	; (800444c <_strtod_l+0xb04>)
 8004302:	4b57      	ldr	r3, [pc, #348]	; (8004460 <_strtod_l+0xb18>)
 8004304:	400a      	ands	r2, r1
 8004306:	429a      	cmp	r2, r3
 8004308:	4682      	mov	sl, r0
 800430a:	d95c      	bls.n	80043c6 <_strtod_l+0xa7e>
 800430c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800430e:	f103 7354 	add.w	r3, r3, #55574528	; 0x3500000
 8004312:	429a      	cmp	r2, r3
 8004314:	d103      	bne.n	800431e <_strtod_l+0x9d6>
 8004316:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004318:	3301      	adds	r3, #1
 800431a:	f43f ad5f 	beq.w	8003ddc <_strtod_l+0x494>
 800431e:	f8df b130 	ldr.w	fp, [pc, #304]	; 8004450 <_strtod_l+0xb08>
 8004322:	f04f 3aff 	mov.w	sl, #4294967295
 8004326:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004328:	9804      	ldr	r0, [sp, #16]
 800432a:	f001 fd5a 	bl	8005de2 <_Bfree>
 800432e:	9906      	ldr	r1, [sp, #24]
 8004330:	9804      	ldr	r0, [sp, #16]
 8004332:	f001 fd56 	bl	8005de2 <_Bfree>
 8004336:	4629      	mov	r1, r5
 8004338:	9804      	ldr	r0, [sp, #16]
 800433a:	f001 fd52 	bl	8005de2 <_Bfree>
 800433e:	4621      	mov	r1, r4
 8004340:	9804      	ldr	r0, [sp, #16]
 8004342:	f001 fd4e 	bl	8005de2 <_Bfree>
 8004346:	e61c      	b.n	8003f82 <_strtod_l+0x63a>
 8004348:	f1ba 0f00 	cmp.w	sl, #0
 800434c:	d118      	bne.n	8004380 <_strtod_l+0xa38>
 800434e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004352:	b9e3      	cbnz	r3, 800438e <_strtod_l+0xa46>
 8004354:	2200      	movs	r2, #0
 8004356:	4b40      	ldr	r3, [pc, #256]	; (8004458 <_strtod_l+0xb10>)
 8004358:	4630      	mov	r0, r6
 800435a:	4639      	mov	r1, r7
 800435c:	f7fc fc10 	bl	8000b80 <__aeabi_dcmplt>
 8004360:	b9d0      	cbnz	r0, 8004398 <_strtod_l+0xa50>
 8004362:	4630      	mov	r0, r6
 8004364:	4639      	mov	r1, r7
 8004366:	2200      	movs	r2, #0
 8004368:	4b3e      	ldr	r3, [pc, #248]	; (8004464 <_strtod_l+0xb1c>)
 800436a:	f7fc f91f 	bl	80005ac <__aeabi_dmul>
 800436e:	4606      	mov	r6, r0
 8004370:	460f      	mov	r7, r1
 8004372:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8004376:	9616      	str	r6, [sp, #88]	; 0x58
 8004378:	9317      	str	r3, [sp, #92]	; 0x5c
 800437a:	e9dd 8916 	ldrd	r8, r9, [sp, #88]	; 0x58
 800437e:	e7a2      	b.n	80042c6 <_strtod_l+0x97e>
 8004380:	f1ba 0f01 	cmp.w	sl, #1
 8004384:	d103      	bne.n	800438e <_strtod_l+0xa46>
 8004386:	f1bb 0f00 	cmp.w	fp, #0
 800438a:	f43f ad98 	beq.w	8003ebe <_strtod_l+0x576>
 800438e:	f04f 0800 	mov.w	r8, #0
 8004392:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 8004468 <_strtod_l+0xb20>
 8004396:	e794      	b.n	80042c2 <_strtod_l+0x97a>
 8004398:	2600      	movs	r6, #0
 800439a:	4f32      	ldr	r7, [pc, #200]	; (8004464 <_strtod_l+0xb1c>)
 800439c:	e7e9      	b.n	8004372 <_strtod_l+0xa2a>
 800439e:	4b31      	ldr	r3, [pc, #196]	; (8004464 <_strtod_l+0xb1c>)
 80043a0:	4630      	mov	r0, r6
 80043a2:	4639      	mov	r1, r7
 80043a4:	2200      	movs	r2, #0
 80043a6:	f7fc f901 	bl	80005ac <__aeabi_dmul>
 80043aa:	9b08      	ldr	r3, [sp, #32]
 80043ac:	4606      	mov	r6, r0
 80043ae:	460f      	mov	r7, r1
 80043b0:	b933      	cbnz	r3, 80043c0 <_strtod_l+0xa78>
 80043b2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80043b6:	9010      	str	r0, [sp, #64]	; 0x40
 80043b8:	9311      	str	r3, [sp, #68]	; 0x44
 80043ba:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
 80043be:	e782      	b.n	80042c6 <_strtod_l+0x97e>
 80043c0:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 80043c4:	e7f9      	b.n	80043ba <_strtod_l+0xa72>
 80043c6:	f101 7b54 	add.w	fp, r1, #55574528	; 0x3500000
 80043ca:	9b05      	ldr	r3, [sp, #20]
 80043cc:	2b00      	cmp	r3, #0
 80043ce:	d1aa      	bne.n	8004326 <_strtod_l+0x9de>
 80043d0:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80043d4:	0d1b      	lsrs	r3, r3, #20
 80043d6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80043d8:	051b      	lsls	r3, r3, #20
 80043da:	429a      	cmp	r2, r3
 80043dc:	46d8      	mov	r8, fp
 80043de:	d1a2      	bne.n	8004326 <_strtod_l+0x9de>
 80043e0:	4639      	mov	r1, r7
 80043e2:	4630      	mov	r0, r6
 80043e4:	f7fc fc0a 	bl	8000bfc <__aeabi_d2iz>
 80043e8:	f7fc f87a 	bl	80004e0 <__aeabi_i2d>
 80043ec:	460b      	mov	r3, r1
 80043ee:	4602      	mov	r2, r0
 80043f0:	4639      	mov	r1, r7
 80043f2:	4630      	mov	r0, r6
 80043f4:	f7fb ff26 	bl	8000244 <__aeabi_dsub>
 80043f8:	9b08      	ldr	r3, [sp, #32]
 80043fa:	4606      	mov	r6, r0
 80043fc:	460f      	mov	r7, r1
 80043fe:	b933      	cbnz	r3, 800440e <_strtod_l+0xac6>
 8004400:	f1ba 0f00 	cmp.w	sl, #0
 8004404:	d103      	bne.n	800440e <_strtod_l+0xac6>
 8004406:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800440a:	2b00      	cmp	r3, #0
 800440c:	d068      	beq.n	80044e0 <_strtod_l+0xb98>
 800440e:	a30a      	add	r3, pc, #40	; (adr r3, 8004438 <_strtod_l+0xaf0>)
 8004410:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004414:	4630      	mov	r0, r6
 8004416:	4639      	mov	r1, r7
 8004418:	f7fc fbb2 	bl	8000b80 <__aeabi_dcmplt>
 800441c:	2800      	cmp	r0, #0
 800441e:	f47f ace8 	bne.w	8003df2 <_strtod_l+0x4aa>
 8004422:	a307      	add	r3, pc, #28	; (adr r3, 8004440 <_strtod_l+0xaf8>)
 8004424:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004428:	4630      	mov	r0, r6
 800442a:	4639      	mov	r1, r7
 800442c:	f7fc fbc6 	bl	8000bbc <__aeabi_dcmpgt>
 8004430:	2800      	cmp	r0, #0
 8004432:	f43f af78 	beq.w	8004326 <_strtod_l+0x9de>
 8004436:	e4dc      	b.n	8003df2 <_strtod_l+0x4aa>
 8004438:	94a03595 	.word	0x94a03595
 800443c:	3fdfffff 	.word	0x3fdfffff
 8004440:	35afe535 	.word	0x35afe535
 8004444:	3fe00000 	.word	0x3fe00000
 8004448:	000fffff 	.word	0x000fffff
 800444c:	7ff00000 	.word	0x7ff00000
 8004450:	7fefffff 	.word	0x7fefffff
 8004454:	39500000 	.word	0x39500000
 8004458:	3ff00000 	.word	0x3ff00000
 800445c:	7fe00000 	.word	0x7fe00000
 8004460:	7c9fffff 	.word	0x7c9fffff
 8004464:	3fe00000 	.word	0x3fe00000
 8004468:	bff00000 	.word	0xbff00000
 800446c:	9b05      	ldr	r3, [sp, #20]
 800446e:	b31b      	cbz	r3, 80044b8 <_strtod_l+0xb70>
 8004470:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004472:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004476:	d81f      	bhi.n	80044b8 <_strtod_l+0xb70>
 8004478:	a325      	add	r3, pc, #148	; (adr r3, 8004510 <_strtod_l+0xbc8>)
 800447a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800447e:	4630      	mov	r0, r6
 8004480:	4639      	mov	r1, r7
 8004482:	f7fc fb87 	bl	8000b94 <__aeabi_dcmple>
 8004486:	b190      	cbz	r0, 80044ae <_strtod_l+0xb66>
 8004488:	4639      	mov	r1, r7
 800448a:	4630      	mov	r0, r6
 800448c:	f7fc faa0 	bl	80009d0 <__aeabi_d2uiz>
 8004490:	2800      	cmp	r0, #0
 8004492:	bf08      	it	eq
 8004494:	2001      	moveq	r0, #1
 8004496:	f7fc f813 	bl	80004c0 <__aeabi_ui2d>
 800449a:	9b08      	ldr	r3, [sp, #32]
 800449c:	4606      	mov	r6, r0
 800449e:	460f      	mov	r7, r1
 80044a0:	b9db      	cbnz	r3, 80044da <_strtod_l+0xb92>
 80044a2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80044a6:	9012      	str	r0, [sp, #72]	; 0x48
 80044a8:	9313      	str	r3, [sp, #76]	; 0x4c
 80044aa:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	; 0x48
 80044ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80044b0:	f109 63d6 	add.w	r3, r9, #112197632	; 0x6b00000
 80044b4:	eba3 0902 	sub.w	r9, r3, r2
 80044b8:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 80044bc:	f001 ff1e 	bl	80062fc <__ulp>
 80044c0:	4640      	mov	r0, r8
 80044c2:	ec53 2b10 	vmov	r2, r3, d0
 80044c6:	4649      	mov	r1, r9
 80044c8:	f7fc f870 	bl	80005ac <__aeabi_dmul>
 80044cc:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80044d0:	f7fb feba 	bl	8000248 <__adddf3>
 80044d4:	4682      	mov	sl, r0
 80044d6:	468b      	mov	fp, r1
 80044d8:	e777      	b.n	80043ca <_strtod_l+0xa82>
 80044da:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
 80044de:	e7e4      	b.n	80044aa <_strtod_l+0xb62>
 80044e0:	a30d      	add	r3, pc, #52	; (adr r3, 8004518 <_strtod_l+0xbd0>)
 80044e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80044e6:	f7fc fb4b 	bl	8000b80 <__aeabi_dcmplt>
 80044ea:	e7a1      	b.n	8004430 <_strtod_l+0xae8>
 80044ec:	2300      	movs	r3, #0
 80044ee:	9309      	str	r3, [sp, #36]	; 0x24
 80044f0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80044f2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80044f4:	6013      	str	r3, [r2, #0]
 80044f6:	f7ff ba6b 	b.w	80039d0 <_strtod_l+0x88>
 80044fa:	2b65      	cmp	r3, #101	; 0x65
 80044fc:	f04f 0200 	mov.w	r2, #0
 8004500:	f43f abb6 	beq.w	8003c70 <_strtod_l+0x328>
 8004504:	4615      	mov	r5, r2
 8004506:	2101      	movs	r1, #1
 8004508:	f7ff badc 	b.w	8003ac4 <_strtod_l+0x17c>
 800450c:	f3af 8000 	nop.w
 8004510:	ffc00000 	.word	0xffc00000
 8004514:	41dfffff 	.word	0x41dfffff
 8004518:	94a03595 	.word	0x94a03595
 800451c:	3fcfffff 	.word	0x3fcfffff

08004520 <_strtod_r>:
 8004520:	4b05      	ldr	r3, [pc, #20]	; (8004538 <_strtod_r+0x18>)
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	b410      	push	{r4}
 8004526:	6a1b      	ldr	r3, [r3, #32]
 8004528:	4c04      	ldr	r4, [pc, #16]	; (800453c <_strtod_r+0x1c>)
 800452a:	2b00      	cmp	r3, #0
 800452c:	bf08      	it	eq
 800452e:	4623      	moveq	r3, r4
 8004530:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004534:	f7ff ba08 	b.w	8003948 <_strtod_l>
 8004538:	20000238 	.word	0x20000238
 800453c:	2000029c 	.word	0x2000029c

08004540 <_strtol_l.isra.0>:
 8004540:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004544:	4680      	mov	r8, r0
 8004546:	4689      	mov	r9, r1
 8004548:	4692      	mov	sl, r2
 800454a:	461f      	mov	r7, r3
 800454c:	468b      	mov	fp, r1
 800454e:	465d      	mov	r5, fp
 8004550:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004552:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004556:	f001 fb7a 	bl	8005c4e <__locale_ctype_ptr_l>
 800455a:	4420      	add	r0, r4
 800455c:	7846      	ldrb	r6, [r0, #1]
 800455e:	f016 0608 	ands.w	r6, r6, #8
 8004562:	d10b      	bne.n	800457c <_strtol_l.isra.0+0x3c>
 8004564:	2c2d      	cmp	r4, #45	; 0x2d
 8004566:	d10b      	bne.n	8004580 <_strtol_l.isra.0+0x40>
 8004568:	782c      	ldrb	r4, [r5, #0]
 800456a:	2601      	movs	r6, #1
 800456c:	f10b 0502 	add.w	r5, fp, #2
 8004570:	b167      	cbz	r7, 800458c <_strtol_l.isra.0+0x4c>
 8004572:	2f10      	cmp	r7, #16
 8004574:	d114      	bne.n	80045a0 <_strtol_l.isra.0+0x60>
 8004576:	2c30      	cmp	r4, #48	; 0x30
 8004578:	d00a      	beq.n	8004590 <_strtol_l.isra.0+0x50>
 800457a:	e011      	b.n	80045a0 <_strtol_l.isra.0+0x60>
 800457c:	46ab      	mov	fp, r5
 800457e:	e7e6      	b.n	800454e <_strtol_l.isra.0+0xe>
 8004580:	2c2b      	cmp	r4, #43	; 0x2b
 8004582:	bf04      	itt	eq
 8004584:	782c      	ldrbeq	r4, [r5, #0]
 8004586:	f10b 0502 	addeq.w	r5, fp, #2
 800458a:	e7f1      	b.n	8004570 <_strtol_l.isra.0+0x30>
 800458c:	2c30      	cmp	r4, #48	; 0x30
 800458e:	d127      	bne.n	80045e0 <_strtol_l.isra.0+0xa0>
 8004590:	782b      	ldrb	r3, [r5, #0]
 8004592:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8004596:	2b58      	cmp	r3, #88	; 0x58
 8004598:	d14b      	bne.n	8004632 <_strtol_l.isra.0+0xf2>
 800459a:	786c      	ldrb	r4, [r5, #1]
 800459c:	2710      	movs	r7, #16
 800459e:	3502      	adds	r5, #2
 80045a0:	2e00      	cmp	r6, #0
 80045a2:	bf0c      	ite	eq
 80045a4:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
 80045a8:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
 80045ac:	2200      	movs	r2, #0
 80045ae:	fbb1 fef7 	udiv	lr, r1, r7
 80045b2:	4610      	mov	r0, r2
 80045b4:	fb07 1c1e 	mls	ip, r7, lr, r1
 80045b8:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80045bc:	2b09      	cmp	r3, #9
 80045be:	d811      	bhi.n	80045e4 <_strtol_l.isra.0+0xa4>
 80045c0:	461c      	mov	r4, r3
 80045c2:	42a7      	cmp	r7, r4
 80045c4:	dd1d      	ble.n	8004602 <_strtol_l.isra.0+0xc2>
 80045c6:	1c53      	adds	r3, r2, #1
 80045c8:	d007      	beq.n	80045da <_strtol_l.isra.0+0x9a>
 80045ca:	4586      	cmp	lr, r0
 80045cc:	d316      	bcc.n	80045fc <_strtol_l.isra.0+0xbc>
 80045ce:	d101      	bne.n	80045d4 <_strtol_l.isra.0+0x94>
 80045d0:	45a4      	cmp	ip, r4
 80045d2:	db13      	blt.n	80045fc <_strtol_l.isra.0+0xbc>
 80045d4:	fb00 4007 	mla	r0, r0, r7, r4
 80045d8:	2201      	movs	r2, #1
 80045da:	f815 4b01 	ldrb.w	r4, [r5], #1
 80045de:	e7eb      	b.n	80045b8 <_strtol_l.isra.0+0x78>
 80045e0:	270a      	movs	r7, #10
 80045e2:	e7dd      	b.n	80045a0 <_strtol_l.isra.0+0x60>
 80045e4:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
 80045e8:	2b19      	cmp	r3, #25
 80045ea:	d801      	bhi.n	80045f0 <_strtol_l.isra.0+0xb0>
 80045ec:	3c37      	subs	r4, #55	; 0x37
 80045ee:	e7e8      	b.n	80045c2 <_strtol_l.isra.0+0x82>
 80045f0:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
 80045f4:	2b19      	cmp	r3, #25
 80045f6:	d804      	bhi.n	8004602 <_strtol_l.isra.0+0xc2>
 80045f8:	3c57      	subs	r4, #87	; 0x57
 80045fa:	e7e2      	b.n	80045c2 <_strtol_l.isra.0+0x82>
 80045fc:	f04f 32ff 	mov.w	r2, #4294967295
 8004600:	e7eb      	b.n	80045da <_strtol_l.isra.0+0x9a>
 8004602:	1c53      	adds	r3, r2, #1
 8004604:	d108      	bne.n	8004618 <_strtol_l.isra.0+0xd8>
 8004606:	2322      	movs	r3, #34	; 0x22
 8004608:	f8c8 3000 	str.w	r3, [r8]
 800460c:	4608      	mov	r0, r1
 800460e:	f1ba 0f00 	cmp.w	sl, #0
 8004612:	d107      	bne.n	8004624 <_strtol_l.isra.0+0xe4>
 8004614:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004618:	b106      	cbz	r6, 800461c <_strtol_l.isra.0+0xdc>
 800461a:	4240      	negs	r0, r0
 800461c:	f1ba 0f00 	cmp.w	sl, #0
 8004620:	d00c      	beq.n	800463c <_strtol_l.isra.0+0xfc>
 8004622:	b122      	cbz	r2, 800462e <_strtol_l.isra.0+0xee>
 8004624:	3d01      	subs	r5, #1
 8004626:	f8ca 5000 	str.w	r5, [sl]
 800462a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800462e:	464d      	mov	r5, r9
 8004630:	e7f9      	b.n	8004626 <_strtol_l.isra.0+0xe6>
 8004632:	2430      	movs	r4, #48	; 0x30
 8004634:	2f00      	cmp	r7, #0
 8004636:	d1b3      	bne.n	80045a0 <_strtol_l.isra.0+0x60>
 8004638:	2708      	movs	r7, #8
 800463a:	e7b1      	b.n	80045a0 <_strtol_l.isra.0+0x60>
 800463c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004640 <_strtol_r>:
 8004640:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004642:	4c06      	ldr	r4, [pc, #24]	; (800465c <_strtol_r+0x1c>)
 8004644:	4d06      	ldr	r5, [pc, #24]	; (8004660 <_strtol_r+0x20>)
 8004646:	6824      	ldr	r4, [r4, #0]
 8004648:	6a24      	ldr	r4, [r4, #32]
 800464a:	2c00      	cmp	r4, #0
 800464c:	bf08      	it	eq
 800464e:	462c      	moveq	r4, r5
 8004650:	9400      	str	r4, [sp, #0]
 8004652:	f7ff ff75 	bl	8004540 <_strtol_l.isra.0>
 8004656:	b003      	add	sp, #12
 8004658:	bd30      	pop	{r4, r5, pc}
 800465a:	bf00      	nop
 800465c:	20000238 	.word	0x20000238
 8004660:	2000029c 	.word	0x2000029c

08004664 <quorem>:
 8004664:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004668:	6903      	ldr	r3, [r0, #16]
 800466a:	690c      	ldr	r4, [r1, #16]
 800466c:	429c      	cmp	r4, r3
 800466e:	4680      	mov	r8, r0
 8004670:	f300 8082 	bgt.w	8004778 <quorem+0x114>
 8004674:	3c01      	subs	r4, #1
 8004676:	f101 0714 	add.w	r7, r1, #20
 800467a:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800467e:	f100 0614 	add.w	r6, r0, #20
 8004682:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8004686:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800468a:	eb06 030e 	add.w	r3, r6, lr
 800468e:	3501      	adds	r5, #1
 8004690:	eb07 090e 	add.w	r9, r7, lr
 8004694:	9301      	str	r3, [sp, #4]
 8004696:	fbb0 f5f5 	udiv	r5, r0, r5
 800469a:	b395      	cbz	r5, 8004702 <quorem+0x9e>
 800469c:	f04f 0a00 	mov.w	sl, #0
 80046a0:	4638      	mov	r0, r7
 80046a2:	46b4      	mov	ip, r6
 80046a4:	46d3      	mov	fp, sl
 80046a6:	f850 2b04 	ldr.w	r2, [r0], #4
 80046aa:	b293      	uxth	r3, r2
 80046ac:	fb05 a303 	mla	r3, r5, r3, sl
 80046b0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80046b4:	b29b      	uxth	r3, r3
 80046b6:	ebab 0303 	sub.w	r3, fp, r3
 80046ba:	0c12      	lsrs	r2, r2, #16
 80046bc:	f8bc b000 	ldrh.w	fp, [ip]
 80046c0:	fb05 a202 	mla	r2, r5, r2, sl
 80046c4:	fa13 f38b 	uxtah	r3, r3, fp
 80046c8:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 80046cc:	fa1f fb82 	uxth.w	fp, r2
 80046d0:	f8dc 2000 	ldr.w	r2, [ip]
 80046d4:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 80046d8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80046dc:	b29b      	uxth	r3, r3
 80046de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80046e2:	4581      	cmp	r9, r0
 80046e4:	ea4f 4b22 	mov.w	fp, r2, asr #16
 80046e8:	f84c 3b04 	str.w	r3, [ip], #4
 80046ec:	d2db      	bcs.n	80046a6 <quorem+0x42>
 80046ee:	f856 300e 	ldr.w	r3, [r6, lr]
 80046f2:	b933      	cbnz	r3, 8004702 <quorem+0x9e>
 80046f4:	9b01      	ldr	r3, [sp, #4]
 80046f6:	3b04      	subs	r3, #4
 80046f8:	429e      	cmp	r6, r3
 80046fa:	461a      	mov	r2, r3
 80046fc:	d330      	bcc.n	8004760 <quorem+0xfc>
 80046fe:	f8c8 4010 	str.w	r4, [r8, #16]
 8004702:	4640      	mov	r0, r8
 8004704:	f001 fd81 	bl	800620a <__mcmp>
 8004708:	2800      	cmp	r0, #0
 800470a:	db25      	blt.n	8004758 <quorem+0xf4>
 800470c:	3501      	adds	r5, #1
 800470e:	4630      	mov	r0, r6
 8004710:	f04f 0e00 	mov.w	lr, #0
 8004714:	f857 2b04 	ldr.w	r2, [r7], #4
 8004718:	f8d0 c000 	ldr.w	ip, [r0]
 800471c:	b293      	uxth	r3, r2
 800471e:	ebae 0303 	sub.w	r3, lr, r3
 8004722:	0c12      	lsrs	r2, r2, #16
 8004724:	fa13 f38c 	uxtah	r3, r3, ip
 8004728:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 800472c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8004730:	b29b      	uxth	r3, r3
 8004732:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004736:	45b9      	cmp	r9, r7
 8004738:	ea4f 4e22 	mov.w	lr, r2, asr #16
 800473c:	f840 3b04 	str.w	r3, [r0], #4
 8004740:	d2e8      	bcs.n	8004714 <quorem+0xb0>
 8004742:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8004746:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800474a:	b92a      	cbnz	r2, 8004758 <quorem+0xf4>
 800474c:	3b04      	subs	r3, #4
 800474e:	429e      	cmp	r6, r3
 8004750:	461a      	mov	r2, r3
 8004752:	d30b      	bcc.n	800476c <quorem+0x108>
 8004754:	f8c8 4010 	str.w	r4, [r8, #16]
 8004758:	4628      	mov	r0, r5
 800475a:	b003      	add	sp, #12
 800475c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004760:	6812      	ldr	r2, [r2, #0]
 8004762:	3b04      	subs	r3, #4
 8004764:	2a00      	cmp	r2, #0
 8004766:	d1ca      	bne.n	80046fe <quorem+0x9a>
 8004768:	3c01      	subs	r4, #1
 800476a:	e7c5      	b.n	80046f8 <quorem+0x94>
 800476c:	6812      	ldr	r2, [r2, #0]
 800476e:	3b04      	subs	r3, #4
 8004770:	2a00      	cmp	r2, #0
 8004772:	d1ef      	bne.n	8004754 <quorem+0xf0>
 8004774:	3c01      	subs	r4, #1
 8004776:	e7ea      	b.n	800474e <quorem+0xea>
 8004778:	2000      	movs	r0, #0
 800477a:	e7ee      	b.n	800475a <quorem+0xf6>
 800477c:	0000      	movs	r0, r0
	...

08004780 <_dtoa_r>:
 8004780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004784:	ec57 6b10 	vmov	r6, r7, d0
 8004788:	b097      	sub	sp, #92	; 0x5c
 800478a:	e9cd 6700 	strd	r6, r7, [sp]
 800478e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8004790:	9107      	str	r1, [sp, #28]
 8004792:	4604      	mov	r4, r0
 8004794:	920a      	str	r2, [sp, #40]	; 0x28
 8004796:	930f      	str	r3, [sp, #60]	; 0x3c
 8004798:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800479a:	b93e      	cbnz	r6, 80047ac <_dtoa_r+0x2c>
 800479c:	2010      	movs	r0, #16
 800479e:	f7fe f89b 	bl	80028d8 <malloc>
 80047a2:	6260      	str	r0, [r4, #36]	; 0x24
 80047a4:	6046      	str	r6, [r0, #4]
 80047a6:	6086      	str	r6, [r0, #8]
 80047a8:	6006      	str	r6, [r0, #0]
 80047aa:	60c6      	str	r6, [r0, #12]
 80047ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80047ae:	6819      	ldr	r1, [r3, #0]
 80047b0:	b151      	cbz	r1, 80047c8 <_dtoa_r+0x48>
 80047b2:	685a      	ldr	r2, [r3, #4]
 80047b4:	604a      	str	r2, [r1, #4]
 80047b6:	2301      	movs	r3, #1
 80047b8:	4093      	lsls	r3, r2
 80047ba:	608b      	str	r3, [r1, #8]
 80047bc:	4620      	mov	r0, r4
 80047be:	f001 fb10 	bl	8005de2 <_Bfree>
 80047c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80047c4:	2200      	movs	r2, #0
 80047c6:	601a      	str	r2, [r3, #0]
 80047c8:	9b01      	ldr	r3, [sp, #4]
 80047ca:	2b00      	cmp	r3, #0
 80047cc:	bfbf      	itttt	lt
 80047ce:	2301      	movlt	r3, #1
 80047d0:	602b      	strlt	r3, [r5, #0]
 80047d2:	9b01      	ldrlt	r3, [sp, #4]
 80047d4:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80047d8:	bfb2      	itee	lt
 80047da:	9301      	strlt	r3, [sp, #4]
 80047dc:	2300      	movge	r3, #0
 80047de:	602b      	strge	r3, [r5, #0]
 80047e0:	f8dd 8004 	ldr.w	r8, [sp, #4]
 80047e4:	4ba8      	ldr	r3, [pc, #672]	; (8004a88 <_dtoa_r+0x308>)
 80047e6:	ea33 0308 	bics.w	r3, r3, r8
 80047ea:	d11b      	bne.n	8004824 <_dtoa_r+0xa4>
 80047ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80047ee:	f242 730f 	movw	r3, #9999	; 0x270f
 80047f2:	6013      	str	r3, [r2, #0]
 80047f4:	9b00      	ldr	r3, [sp, #0]
 80047f6:	b923      	cbnz	r3, 8004802 <_dtoa_r+0x82>
 80047f8:	f3c8 0013 	ubfx	r0, r8, #0, #20
 80047fc:	2800      	cmp	r0, #0
 80047fe:	f000 8578 	beq.w	80052f2 <_dtoa_r+0xb72>
 8004802:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004804:	b953      	cbnz	r3, 800481c <_dtoa_r+0x9c>
 8004806:	4ba1      	ldr	r3, [pc, #644]	; (8004a8c <_dtoa_r+0x30c>)
 8004808:	e021      	b.n	800484e <_dtoa_r+0xce>
 800480a:	4ba1      	ldr	r3, [pc, #644]	; (8004a90 <_dtoa_r+0x310>)
 800480c:	9302      	str	r3, [sp, #8]
 800480e:	3308      	adds	r3, #8
 8004810:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8004812:	6013      	str	r3, [r2, #0]
 8004814:	9802      	ldr	r0, [sp, #8]
 8004816:	b017      	add	sp, #92	; 0x5c
 8004818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800481c:	4b9b      	ldr	r3, [pc, #620]	; (8004a8c <_dtoa_r+0x30c>)
 800481e:	9302      	str	r3, [sp, #8]
 8004820:	3303      	adds	r3, #3
 8004822:	e7f5      	b.n	8004810 <_dtoa_r+0x90>
 8004824:	e9dd 6700 	ldrd	r6, r7, [sp]
 8004828:	2200      	movs	r2, #0
 800482a:	2300      	movs	r3, #0
 800482c:	4630      	mov	r0, r6
 800482e:	4639      	mov	r1, r7
 8004830:	f7fc f99c 	bl	8000b6c <__aeabi_dcmpeq>
 8004834:	4681      	mov	r9, r0
 8004836:	b160      	cbz	r0, 8004852 <_dtoa_r+0xd2>
 8004838:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800483a:	2301      	movs	r3, #1
 800483c:	6013      	str	r3, [r2, #0]
 800483e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004840:	2b00      	cmp	r3, #0
 8004842:	f000 8553 	beq.w	80052ec <_dtoa_r+0xb6c>
 8004846:	4b93      	ldr	r3, [pc, #588]	; (8004a94 <_dtoa_r+0x314>)
 8004848:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800484a:	6013      	str	r3, [r2, #0]
 800484c:	3b01      	subs	r3, #1
 800484e:	9302      	str	r3, [sp, #8]
 8004850:	e7e0      	b.n	8004814 <_dtoa_r+0x94>
 8004852:	aa14      	add	r2, sp, #80	; 0x50
 8004854:	a915      	add	r1, sp, #84	; 0x54
 8004856:	ec47 6b10 	vmov	d0, r6, r7
 800485a:	4620      	mov	r0, r4
 800485c:	f001 fdc4 	bl	80063e8 <__d2b>
 8004860:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8004864:	4682      	mov	sl, r0
 8004866:	2d00      	cmp	r5, #0
 8004868:	d07e      	beq.n	8004968 <_dtoa_r+0x1e8>
 800486a:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800486e:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8004872:	4630      	mov	r0, r6
 8004874:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8004878:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800487c:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
 8004880:	2200      	movs	r2, #0
 8004882:	4b85      	ldr	r3, [pc, #532]	; (8004a98 <_dtoa_r+0x318>)
 8004884:	f7fb fcde 	bl	8000244 <__aeabi_dsub>
 8004888:	a379      	add	r3, pc, #484	; (adr r3, 8004a70 <_dtoa_r+0x2f0>)
 800488a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800488e:	f7fb fe8d 	bl	80005ac <__aeabi_dmul>
 8004892:	a379      	add	r3, pc, #484	; (adr r3, 8004a78 <_dtoa_r+0x2f8>)
 8004894:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004898:	f7fb fcd6 	bl	8000248 <__adddf3>
 800489c:	4606      	mov	r6, r0
 800489e:	4628      	mov	r0, r5
 80048a0:	460f      	mov	r7, r1
 80048a2:	f7fb fe1d 	bl	80004e0 <__aeabi_i2d>
 80048a6:	a376      	add	r3, pc, #472	; (adr r3, 8004a80 <_dtoa_r+0x300>)
 80048a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80048ac:	f7fb fe7e 	bl	80005ac <__aeabi_dmul>
 80048b0:	4602      	mov	r2, r0
 80048b2:	460b      	mov	r3, r1
 80048b4:	4630      	mov	r0, r6
 80048b6:	4639      	mov	r1, r7
 80048b8:	f7fb fcc6 	bl	8000248 <__adddf3>
 80048bc:	4606      	mov	r6, r0
 80048be:	460f      	mov	r7, r1
 80048c0:	f7fc f99c 	bl	8000bfc <__aeabi_d2iz>
 80048c4:	2200      	movs	r2, #0
 80048c6:	4683      	mov	fp, r0
 80048c8:	2300      	movs	r3, #0
 80048ca:	4630      	mov	r0, r6
 80048cc:	4639      	mov	r1, r7
 80048ce:	f7fc f957 	bl	8000b80 <__aeabi_dcmplt>
 80048d2:	b158      	cbz	r0, 80048ec <_dtoa_r+0x16c>
 80048d4:	4658      	mov	r0, fp
 80048d6:	f7fb fe03 	bl	80004e0 <__aeabi_i2d>
 80048da:	4602      	mov	r2, r0
 80048dc:	460b      	mov	r3, r1
 80048de:	4630      	mov	r0, r6
 80048e0:	4639      	mov	r1, r7
 80048e2:	f7fc f943 	bl	8000b6c <__aeabi_dcmpeq>
 80048e6:	b908      	cbnz	r0, 80048ec <_dtoa_r+0x16c>
 80048e8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80048ec:	f1bb 0f16 	cmp.w	fp, #22
 80048f0:	d859      	bhi.n	80049a6 <_dtoa_r+0x226>
 80048f2:	496a      	ldr	r1, [pc, #424]	; (8004a9c <_dtoa_r+0x31c>)
 80048f4:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 80048f8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80048fc:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004900:	f7fc f95c 	bl	8000bbc <__aeabi_dcmpgt>
 8004904:	2800      	cmp	r0, #0
 8004906:	d050      	beq.n	80049aa <_dtoa_r+0x22a>
 8004908:	f10b 3bff 	add.w	fp, fp, #4294967295
 800490c:	2300      	movs	r3, #0
 800490e:	930e      	str	r3, [sp, #56]	; 0x38
 8004910:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004912:	1b5d      	subs	r5, r3, r5
 8004914:	1e6b      	subs	r3, r5, #1
 8004916:	9306      	str	r3, [sp, #24]
 8004918:	bf45      	ittet	mi
 800491a:	f1c5 0301 	rsbmi	r3, r5, #1
 800491e:	9305      	strmi	r3, [sp, #20]
 8004920:	2300      	movpl	r3, #0
 8004922:	2300      	movmi	r3, #0
 8004924:	bf4c      	ite	mi
 8004926:	9306      	strmi	r3, [sp, #24]
 8004928:	9305      	strpl	r3, [sp, #20]
 800492a:	f1bb 0f00 	cmp.w	fp, #0
 800492e:	db3e      	blt.n	80049ae <_dtoa_r+0x22e>
 8004930:	9b06      	ldr	r3, [sp, #24]
 8004932:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8004936:	445b      	add	r3, fp
 8004938:	9306      	str	r3, [sp, #24]
 800493a:	2300      	movs	r3, #0
 800493c:	9308      	str	r3, [sp, #32]
 800493e:	9b07      	ldr	r3, [sp, #28]
 8004940:	2b09      	cmp	r3, #9
 8004942:	f200 80af 	bhi.w	8004aa4 <_dtoa_r+0x324>
 8004946:	2b05      	cmp	r3, #5
 8004948:	bfc4      	itt	gt
 800494a:	3b04      	subgt	r3, #4
 800494c:	9307      	strgt	r3, [sp, #28]
 800494e:	9b07      	ldr	r3, [sp, #28]
 8004950:	f1a3 0302 	sub.w	r3, r3, #2
 8004954:	bfcc      	ite	gt
 8004956:	2600      	movgt	r6, #0
 8004958:	2601      	movle	r6, #1
 800495a:	2b03      	cmp	r3, #3
 800495c:	f200 80ae 	bhi.w	8004abc <_dtoa_r+0x33c>
 8004960:	e8df f003 	tbb	[pc, r3]
 8004964:	772f8482 	.word	0x772f8482
 8004968:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800496a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800496c:	441d      	add	r5, r3
 800496e:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8004972:	2b20      	cmp	r3, #32
 8004974:	dd11      	ble.n	800499a <_dtoa_r+0x21a>
 8004976:	9a00      	ldr	r2, [sp, #0]
 8004978:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800497c:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8004980:	fa22 f000 	lsr.w	r0, r2, r0
 8004984:	fa08 f303 	lsl.w	r3, r8, r3
 8004988:	4318      	orrs	r0, r3
 800498a:	f7fb fd99 	bl	80004c0 <__aeabi_ui2d>
 800498e:	2301      	movs	r3, #1
 8004990:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8004994:	3d01      	subs	r5, #1
 8004996:	9312      	str	r3, [sp, #72]	; 0x48
 8004998:	e772      	b.n	8004880 <_dtoa_r+0x100>
 800499a:	f1c3 0020 	rsb	r0, r3, #32
 800499e:	9b00      	ldr	r3, [sp, #0]
 80049a0:	fa03 f000 	lsl.w	r0, r3, r0
 80049a4:	e7f1      	b.n	800498a <_dtoa_r+0x20a>
 80049a6:	2301      	movs	r3, #1
 80049a8:	e7b1      	b.n	800490e <_dtoa_r+0x18e>
 80049aa:	900e      	str	r0, [sp, #56]	; 0x38
 80049ac:	e7b0      	b.n	8004910 <_dtoa_r+0x190>
 80049ae:	9b05      	ldr	r3, [sp, #20]
 80049b0:	eba3 030b 	sub.w	r3, r3, fp
 80049b4:	9305      	str	r3, [sp, #20]
 80049b6:	f1cb 0300 	rsb	r3, fp, #0
 80049ba:	9308      	str	r3, [sp, #32]
 80049bc:	2300      	movs	r3, #0
 80049be:	930b      	str	r3, [sp, #44]	; 0x2c
 80049c0:	e7bd      	b.n	800493e <_dtoa_r+0x1be>
 80049c2:	2301      	movs	r3, #1
 80049c4:	9309      	str	r3, [sp, #36]	; 0x24
 80049c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80049c8:	2b00      	cmp	r3, #0
 80049ca:	dd7a      	ble.n	8004ac2 <_dtoa_r+0x342>
 80049cc:	9304      	str	r3, [sp, #16]
 80049ce:	9303      	str	r3, [sp, #12]
 80049d0:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80049d2:	2200      	movs	r2, #0
 80049d4:	606a      	str	r2, [r5, #4]
 80049d6:	2104      	movs	r1, #4
 80049d8:	f101 0214 	add.w	r2, r1, #20
 80049dc:	429a      	cmp	r2, r3
 80049de:	d975      	bls.n	8004acc <_dtoa_r+0x34c>
 80049e0:	6869      	ldr	r1, [r5, #4]
 80049e2:	4620      	mov	r0, r4
 80049e4:	f001 f9c9 	bl	8005d7a <_Balloc>
 80049e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80049ea:	6028      	str	r0, [r5, #0]
 80049ec:	681b      	ldr	r3, [r3, #0]
 80049ee:	9302      	str	r3, [sp, #8]
 80049f0:	9b03      	ldr	r3, [sp, #12]
 80049f2:	2b0e      	cmp	r3, #14
 80049f4:	f200 80e5 	bhi.w	8004bc2 <_dtoa_r+0x442>
 80049f8:	2e00      	cmp	r6, #0
 80049fa:	f000 80e2 	beq.w	8004bc2 <_dtoa_r+0x442>
 80049fe:	ed9d 7b00 	vldr	d7, [sp]
 8004a02:	f1bb 0f00 	cmp.w	fp, #0
 8004a06:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 8004a0a:	dd74      	ble.n	8004af6 <_dtoa_r+0x376>
 8004a0c:	4a23      	ldr	r2, [pc, #140]	; (8004a9c <_dtoa_r+0x31c>)
 8004a0e:	f00b 030f 	and.w	r3, fp, #15
 8004a12:	ea4f 162b 	mov.w	r6, fp, asr #4
 8004a16:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8004a1a:	06f0      	lsls	r0, r6, #27
 8004a1c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8004a20:	d559      	bpl.n	8004ad6 <_dtoa_r+0x356>
 8004a22:	4b1f      	ldr	r3, [pc, #124]	; (8004aa0 <_dtoa_r+0x320>)
 8004a24:	ec51 0b17 	vmov	r0, r1, d7
 8004a28:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004a2c:	f7fb fee8 	bl	8000800 <__aeabi_ddiv>
 8004a30:	e9cd 0100 	strd	r0, r1, [sp]
 8004a34:	f006 060f 	and.w	r6, r6, #15
 8004a38:	2503      	movs	r5, #3
 8004a3a:	4f19      	ldr	r7, [pc, #100]	; (8004aa0 <_dtoa_r+0x320>)
 8004a3c:	2e00      	cmp	r6, #0
 8004a3e:	d14c      	bne.n	8004ada <_dtoa_r+0x35a>
 8004a40:	4642      	mov	r2, r8
 8004a42:	464b      	mov	r3, r9
 8004a44:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004a48:	f7fb feda 	bl	8000800 <__aeabi_ddiv>
 8004a4c:	e9cd 0100 	strd	r0, r1, [sp]
 8004a50:	e06a      	b.n	8004b28 <_dtoa_r+0x3a8>
 8004a52:	2301      	movs	r3, #1
 8004a54:	9309      	str	r3, [sp, #36]	; 0x24
 8004a56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a58:	445b      	add	r3, fp
 8004a5a:	9304      	str	r3, [sp, #16]
 8004a5c:	3301      	adds	r3, #1
 8004a5e:	2b01      	cmp	r3, #1
 8004a60:	9303      	str	r3, [sp, #12]
 8004a62:	bfb8      	it	lt
 8004a64:	2301      	movlt	r3, #1
 8004a66:	e7b3      	b.n	80049d0 <_dtoa_r+0x250>
 8004a68:	2300      	movs	r3, #0
 8004a6a:	e7ab      	b.n	80049c4 <_dtoa_r+0x244>
 8004a6c:	2300      	movs	r3, #0
 8004a6e:	e7f1      	b.n	8004a54 <_dtoa_r+0x2d4>
 8004a70:	636f4361 	.word	0x636f4361
 8004a74:	3fd287a7 	.word	0x3fd287a7
 8004a78:	8b60c8b3 	.word	0x8b60c8b3
 8004a7c:	3fc68a28 	.word	0x3fc68a28
 8004a80:	509f79fb 	.word	0x509f79fb
 8004a84:	3fd34413 	.word	0x3fd34413
 8004a88:	7ff00000 	.word	0x7ff00000
 8004a8c:	08007029 	.word	0x08007029
 8004a90:	08007020 	.word	0x08007020
 8004a94:	08006fa1 	.word	0x08006fa1
 8004a98:	3ff80000 	.word	0x3ff80000
 8004a9c:	080070c8 	.word	0x080070c8
 8004aa0:	080070a0 	.word	0x080070a0
 8004aa4:	2601      	movs	r6, #1
 8004aa6:	2300      	movs	r3, #0
 8004aa8:	9307      	str	r3, [sp, #28]
 8004aaa:	9609      	str	r6, [sp, #36]	; 0x24
 8004aac:	f04f 33ff 	mov.w	r3, #4294967295
 8004ab0:	9304      	str	r3, [sp, #16]
 8004ab2:	9303      	str	r3, [sp, #12]
 8004ab4:	2200      	movs	r2, #0
 8004ab6:	2312      	movs	r3, #18
 8004ab8:	920a      	str	r2, [sp, #40]	; 0x28
 8004aba:	e789      	b.n	80049d0 <_dtoa_r+0x250>
 8004abc:	2301      	movs	r3, #1
 8004abe:	9309      	str	r3, [sp, #36]	; 0x24
 8004ac0:	e7f4      	b.n	8004aac <_dtoa_r+0x32c>
 8004ac2:	2301      	movs	r3, #1
 8004ac4:	9304      	str	r3, [sp, #16]
 8004ac6:	9303      	str	r3, [sp, #12]
 8004ac8:	461a      	mov	r2, r3
 8004aca:	e7f5      	b.n	8004ab8 <_dtoa_r+0x338>
 8004acc:	686a      	ldr	r2, [r5, #4]
 8004ace:	3201      	adds	r2, #1
 8004ad0:	606a      	str	r2, [r5, #4]
 8004ad2:	0049      	lsls	r1, r1, #1
 8004ad4:	e780      	b.n	80049d8 <_dtoa_r+0x258>
 8004ad6:	2502      	movs	r5, #2
 8004ad8:	e7af      	b.n	8004a3a <_dtoa_r+0x2ba>
 8004ada:	07f1      	lsls	r1, r6, #31
 8004adc:	d508      	bpl.n	8004af0 <_dtoa_r+0x370>
 8004ade:	4640      	mov	r0, r8
 8004ae0:	4649      	mov	r1, r9
 8004ae2:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004ae6:	f7fb fd61 	bl	80005ac <__aeabi_dmul>
 8004aea:	3501      	adds	r5, #1
 8004aec:	4680      	mov	r8, r0
 8004aee:	4689      	mov	r9, r1
 8004af0:	1076      	asrs	r6, r6, #1
 8004af2:	3708      	adds	r7, #8
 8004af4:	e7a2      	b.n	8004a3c <_dtoa_r+0x2bc>
 8004af6:	f000 809d 	beq.w	8004c34 <_dtoa_r+0x4b4>
 8004afa:	f1cb 0600 	rsb	r6, fp, #0
 8004afe:	4b9f      	ldr	r3, [pc, #636]	; (8004d7c <_dtoa_r+0x5fc>)
 8004b00:	4f9f      	ldr	r7, [pc, #636]	; (8004d80 <_dtoa_r+0x600>)
 8004b02:	f006 020f 	and.w	r2, r6, #15
 8004b06:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004b0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b0e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004b12:	f7fb fd4b 	bl	80005ac <__aeabi_dmul>
 8004b16:	e9cd 0100 	strd	r0, r1, [sp]
 8004b1a:	1136      	asrs	r6, r6, #4
 8004b1c:	2300      	movs	r3, #0
 8004b1e:	2502      	movs	r5, #2
 8004b20:	2e00      	cmp	r6, #0
 8004b22:	d17c      	bne.n	8004c1e <_dtoa_r+0x49e>
 8004b24:	2b00      	cmp	r3, #0
 8004b26:	d191      	bne.n	8004a4c <_dtoa_r+0x2cc>
 8004b28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	f000 8084 	beq.w	8004c38 <_dtoa_r+0x4b8>
 8004b30:	e9dd 8900 	ldrd	r8, r9, [sp]
 8004b34:	2200      	movs	r2, #0
 8004b36:	4b93      	ldr	r3, [pc, #588]	; (8004d84 <_dtoa_r+0x604>)
 8004b38:	4640      	mov	r0, r8
 8004b3a:	4649      	mov	r1, r9
 8004b3c:	f7fc f820 	bl	8000b80 <__aeabi_dcmplt>
 8004b40:	2800      	cmp	r0, #0
 8004b42:	d079      	beq.n	8004c38 <_dtoa_r+0x4b8>
 8004b44:	9b03      	ldr	r3, [sp, #12]
 8004b46:	2b00      	cmp	r3, #0
 8004b48:	d076      	beq.n	8004c38 <_dtoa_r+0x4b8>
 8004b4a:	9b04      	ldr	r3, [sp, #16]
 8004b4c:	2b00      	cmp	r3, #0
 8004b4e:	dd34      	ble.n	8004bba <_dtoa_r+0x43a>
 8004b50:	2200      	movs	r2, #0
 8004b52:	4b8d      	ldr	r3, [pc, #564]	; (8004d88 <_dtoa_r+0x608>)
 8004b54:	4640      	mov	r0, r8
 8004b56:	4649      	mov	r1, r9
 8004b58:	f7fb fd28 	bl	80005ac <__aeabi_dmul>
 8004b5c:	e9cd 0100 	strd	r0, r1, [sp]
 8004b60:	9e04      	ldr	r6, [sp, #16]
 8004b62:	f10b 37ff 	add.w	r7, fp, #4294967295
 8004b66:	3501      	adds	r5, #1
 8004b68:	4628      	mov	r0, r5
 8004b6a:	f7fb fcb9 	bl	80004e0 <__aeabi_i2d>
 8004b6e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8004b72:	f7fb fd1b 	bl	80005ac <__aeabi_dmul>
 8004b76:	2200      	movs	r2, #0
 8004b78:	4b84      	ldr	r3, [pc, #528]	; (8004d8c <_dtoa_r+0x60c>)
 8004b7a:	f7fb fb65 	bl	8000248 <__adddf3>
 8004b7e:	4680      	mov	r8, r0
 8004b80:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 8004b84:	2e00      	cmp	r6, #0
 8004b86:	d15a      	bne.n	8004c3e <_dtoa_r+0x4be>
 8004b88:	2200      	movs	r2, #0
 8004b8a:	4b81      	ldr	r3, [pc, #516]	; (8004d90 <_dtoa_r+0x610>)
 8004b8c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004b90:	f7fb fb58 	bl	8000244 <__aeabi_dsub>
 8004b94:	4642      	mov	r2, r8
 8004b96:	464b      	mov	r3, r9
 8004b98:	e9cd 0100 	strd	r0, r1, [sp]
 8004b9c:	f7fc f80e 	bl	8000bbc <__aeabi_dcmpgt>
 8004ba0:	2800      	cmp	r0, #0
 8004ba2:	f040 829b 	bne.w	80050dc <_dtoa_r+0x95c>
 8004ba6:	4642      	mov	r2, r8
 8004ba8:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8004bac:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004bb0:	f7fb ffe6 	bl	8000b80 <__aeabi_dcmplt>
 8004bb4:	2800      	cmp	r0, #0
 8004bb6:	f040 828f 	bne.w	80050d8 <_dtoa_r+0x958>
 8004bba:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8004bbe:	e9cd 2300 	strd	r2, r3, [sp]
 8004bc2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004bc4:	2b00      	cmp	r3, #0
 8004bc6:	f2c0 8150 	blt.w	8004e6a <_dtoa_r+0x6ea>
 8004bca:	f1bb 0f0e 	cmp.w	fp, #14
 8004bce:	f300 814c 	bgt.w	8004e6a <_dtoa_r+0x6ea>
 8004bd2:	4b6a      	ldr	r3, [pc, #424]	; (8004d7c <_dtoa_r+0x5fc>)
 8004bd4:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8004bd8:	e9d3 8900 	ldrd	r8, r9, [r3]
 8004bdc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004bde:	2b00      	cmp	r3, #0
 8004be0:	f280 80da 	bge.w	8004d98 <_dtoa_r+0x618>
 8004be4:	9b03      	ldr	r3, [sp, #12]
 8004be6:	2b00      	cmp	r3, #0
 8004be8:	f300 80d6 	bgt.w	8004d98 <_dtoa_r+0x618>
 8004bec:	f040 8273 	bne.w	80050d6 <_dtoa_r+0x956>
 8004bf0:	2200      	movs	r2, #0
 8004bf2:	4b67      	ldr	r3, [pc, #412]	; (8004d90 <_dtoa_r+0x610>)
 8004bf4:	4640      	mov	r0, r8
 8004bf6:	4649      	mov	r1, r9
 8004bf8:	f7fb fcd8 	bl	80005ac <__aeabi_dmul>
 8004bfc:	e9dd 2300 	ldrd	r2, r3, [sp]
 8004c00:	f7fb ffd2 	bl	8000ba8 <__aeabi_dcmpge>
 8004c04:	9e03      	ldr	r6, [sp, #12]
 8004c06:	4637      	mov	r7, r6
 8004c08:	2800      	cmp	r0, #0
 8004c0a:	f040 824a 	bne.w	80050a2 <_dtoa_r+0x922>
 8004c0e:	9b02      	ldr	r3, [sp, #8]
 8004c10:	9a02      	ldr	r2, [sp, #8]
 8004c12:	1c5d      	adds	r5, r3, #1
 8004c14:	2331      	movs	r3, #49	; 0x31
 8004c16:	7013      	strb	r3, [r2, #0]
 8004c18:	f10b 0b01 	add.w	fp, fp, #1
 8004c1c:	e245      	b.n	80050aa <_dtoa_r+0x92a>
 8004c1e:	07f2      	lsls	r2, r6, #31
 8004c20:	d505      	bpl.n	8004c2e <_dtoa_r+0x4ae>
 8004c22:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004c26:	f7fb fcc1 	bl	80005ac <__aeabi_dmul>
 8004c2a:	3501      	adds	r5, #1
 8004c2c:	2301      	movs	r3, #1
 8004c2e:	1076      	asrs	r6, r6, #1
 8004c30:	3708      	adds	r7, #8
 8004c32:	e775      	b.n	8004b20 <_dtoa_r+0x3a0>
 8004c34:	2502      	movs	r5, #2
 8004c36:	e777      	b.n	8004b28 <_dtoa_r+0x3a8>
 8004c38:	465f      	mov	r7, fp
 8004c3a:	9e03      	ldr	r6, [sp, #12]
 8004c3c:	e794      	b.n	8004b68 <_dtoa_r+0x3e8>
 8004c3e:	9a02      	ldr	r2, [sp, #8]
 8004c40:	4b4e      	ldr	r3, [pc, #312]	; (8004d7c <_dtoa_r+0x5fc>)
 8004c42:	4432      	add	r2, r6
 8004c44:	9213      	str	r2, [sp, #76]	; 0x4c
 8004c46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004c48:	1e71      	subs	r1, r6, #1
 8004c4a:	2a00      	cmp	r2, #0
 8004c4c:	d048      	beq.n	8004ce0 <_dtoa_r+0x560>
 8004c4e:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8004c52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c56:	2000      	movs	r0, #0
 8004c58:	494e      	ldr	r1, [pc, #312]	; (8004d94 <_dtoa_r+0x614>)
 8004c5a:	f7fb fdd1 	bl	8000800 <__aeabi_ddiv>
 8004c5e:	4642      	mov	r2, r8
 8004c60:	464b      	mov	r3, r9
 8004c62:	f7fb faef 	bl	8000244 <__aeabi_dsub>
 8004c66:	9d02      	ldr	r5, [sp, #8]
 8004c68:	4680      	mov	r8, r0
 8004c6a:	4689      	mov	r9, r1
 8004c6c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004c70:	f7fb ffc4 	bl	8000bfc <__aeabi_d2iz>
 8004c74:	4606      	mov	r6, r0
 8004c76:	f7fb fc33 	bl	80004e0 <__aeabi_i2d>
 8004c7a:	4602      	mov	r2, r0
 8004c7c:	460b      	mov	r3, r1
 8004c7e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004c82:	f7fb fadf 	bl	8000244 <__aeabi_dsub>
 8004c86:	3630      	adds	r6, #48	; 0x30
 8004c88:	f805 6b01 	strb.w	r6, [r5], #1
 8004c8c:	4642      	mov	r2, r8
 8004c8e:	464b      	mov	r3, r9
 8004c90:	e9cd 0100 	strd	r0, r1, [sp]
 8004c94:	f7fb ff74 	bl	8000b80 <__aeabi_dcmplt>
 8004c98:	2800      	cmp	r0, #0
 8004c9a:	d165      	bne.n	8004d68 <_dtoa_r+0x5e8>
 8004c9c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8004ca0:	2000      	movs	r0, #0
 8004ca2:	4938      	ldr	r1, [pc, #224]	; (8004d84 <_dtoa_r+0x604>)
 8004ca4:	f7fb face 	bl	8000244 <__aeabi_dsub>
 8004ca8:	4642      	mov	r2, r8
 8004caa:	464b      	mov	r3, r9
 8004cac:	f7fb ff68 	bl	8000b80 <__aeabi_dcmplt>
 8004cb0:	2800      	cmp	r0, #0
 8004cb2:	f040 80ba 	bne.w	8004e2a <_dtoa_r+0x6aa>
 8004cb6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004cb8:	429d      	cmp	r5, r3
 8004cba:	f43f af7e 	beq.w	8004bba <_dtoa_r+0x43a>
 8004cbe:	2200      	movs	r2, #0
 8004cc0:	4b31      	ldr	r3, [pc, #196]	; (8004d88 <_dtoa_r+0x608>)
 8004cc2:	4640      	mov	r0, r8
 8004cc4:	4649      	mov	r1, r9
 8004cc6:	f7fb fc71 	bl	80005ac <__aeabi_dmul>
 8004cca:	2200      	movs	r2, #0
 8004ccc:	4680      	mov	r8, r0
 8004cce:	4689      	mov	r9, r1
 8004cd0:	4b2d      	ldr	r3, [pc, #180]	; (8004d88 <_dtoa_r+0x608>)
 8004cd2:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004cd6:	f7fb fc69 	bl	80005ac <__aeabi_dmul>
 8004cda:	e9cd 0100 	strd	r0, r1, [sp]
 8004cde:	e7c5      	b.n	8004c6c <_dtoa_r+0x4ec>
 8004ce0:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 8004ce4:	4642      	mov	r2, r8
 8004ce6:	464b      	mov	r3, r9
 8004ce8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004cec:	f7fb fc5e 	bl	80005ac <__aeabi_dmul>
 8004cf0:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004cf4:	9d02      	ldr	r5, [sp, #8]
 8004cf6:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004cfa:	f7fb ff7f 	bl	8000bfc <__aeabi_d2iz>
 8004cfe:	4606      	mov	r6, r0
 8004d00:	f7fb fbee 	bl	80004e0 <__aeabi_i2d>
 8004d04:	3630      	adds	r6, #48	; 0x30
 8004d06:	4602      	mov	r2, r0
 8004d08:	460b      	mov	r3, r1
 8004d0a:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004d0e:	f7fb fa99 	bl	8000244 <__aeabi_dsub>
 8004d12:	f805 6b01 	strb.w	r6, [r5], #1
 8004d16:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004d18:	42ab      	cmp	r3, r5
 8004d1a:	4680      	mov	r8, r0
 8004d1c:	4689      	mov	r9, r1
 8004d1e:	f04f 0200 	mov.w	r2, #0
 8004d22:	d125      	bne.n	8004d70 <_dtoa_r+0x5f0>
 8004d24:	4b1b      	ldr	r3, [pc, #108]	; (8004d94 <_dtoa_r+0x614>)
 8004d26:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004d2a:	f7fb fa8d 	bl	8000248 <__adddf3>
 8004d2e:	4602      	mov	r2, r0
 8004d30:	460b      	mov	r3, r1
 8004d32:	4640      	mov	r0, r8
 8004d34:	4649      	mov	r1, r9
 8004d36:	f7fb ff41 	bl	8000bbc <__aeabi_dcmpgt>
 8004d3a:	2800      	cmp	r0, #0
 8004d3c:	d175      	bne.n	8004e2a <_dtoa_r+0x6aa>
 8004d3e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004d42:	2000      	movs	r0, #0
 8004d44:	4913      	ldr	r1, [pc, #76]	; (8004d94 <_dtoa_r+0x614>)
 8004d46:	f7fb fa7d 	bl	8000244 <__aeabi_dsub>
 8004d4a:	4602      	mov	r2, r0
 8004d4c:	460b      	mov	r3, r1
 8004d4e:	4640      	mov	r0, r8
 8004d50:	4649      	mov	r1, r9
 8004d52:	f7fb ff15 	bl	8000b80 <__aeabi_dcmplt>
 8004d56:	2800      	cmp	r0, #0
 8004d58:	f43f af2f 	beq.w	8004bba <_dtoa_r+0x43a>
 8004d5c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004d60:	2b30      	cmp	r3, #48	; 0x30
 8004d62:	f105 32ff 	add.w	r2, r5, #4294967295
 8004d66:	d001      	beq.n	8004d6c <_dtoa_r+0x5ec>
 8004d68:	46bb      	mov	fp, r7
 8004d6a:	e04d      	b.n	8004e08 <_dtoa_r+0x688>
 8004d6c:	4615      	mov	r5, r2
 8004d6e:	e7f5      	b.n	8004d5c <_dtoa_r+0x5dc>
 8004d70:	4b05      	ldr	r3, [pc, #20]	; (8004d88 <_dtoa_r+0x608>)
 8004d72:	f7fb fc1b 	bl	80005ac <__aeabi_dmul>
 8004d76:	e9cd 0100 	strd	r0, r1, [sp]
 8004d7a:	e7bc      	b.n	8004cf6 <_dtoa_r+0x576>
 8004d7c:	080070c8 	.word	0x080070c8
 8004d80:	080070a0 	.word	0x080070a0
 8004d84:	3ff00000 	.word	0x3ff00000
 8004d88:	40240000 	.word	0x40240000
 8004d8c:	401c0000 	.word	0x401c0000
 8004d90:	40140000 	.word	0x40140000
 8004d94:	3fe00000 	.word	0x3fe00000
 8004d98:	e9dd 6700 	ldrd	r6, r7, [sp]
 8004d9c:	9d02      	ldr	r5, [sp, #8]
 8004d9e:	4642      	mov	r2, r8
 8004da0:	464b      	mov	r3, r9
 8004da2:	4630      	mov	r0, r6
 8004da4:	4639      	mov	r1, r7
 8004da6:	f7fb fd2b 	bl	8000800 <__aeabi_ddiv>
 8004daa:	f7fb ff27 	bl	8000bfc <__aeabi_d2iz>
 8004dae:	9000      	str	r0, [sp, #0]
 8004db0:	f7fb fb96 	bl	80004e0 <__aeabi_i2d>
 8004db4:	4642      	mov	r2, r8
 8004db6:	464b      	mov	r3, r9
 8004db8:	f7fb fbf8 	bl	80005ac <__aeabi_dmul>
 8004dbc:	4602      	mov	r2, r0
 8004dbe:	460b      	mov	r3, r1
 8004dc0:	4630      	mov	r0, r6
 8004dc2:	4639      	mov	r1, r7
 8004dc4:	f7fb fa3e 	bl	8000244 <__aeabi_dsub>
 8004dc8:	9e00      	ldr	r6, [sp, #0]
 8004dca:	9f03      	ldr	r7, [sp, #12]
 8004dcc:	3630      	adds	r6, #48	; 0x30
 8004dce:	f805 6b01 	strb.w	r6, [r5], #1
 8004dd2:	9e02      	ldr	r6, [sp, #8]
 8004dd4:	1bae      	subs	r6, r5, r6
 8004dd6:	42b7      	cmp	r7, r6
 8004dd8:	4602      	mov	r2, r0
 8004dda:	460b      	mov	r3, r1
 8004ddc:	d138      	bne.n	8004e50 <_dtoa_r+0x6d0>
 8004dde:	f7fb fa33 	bl	8000248 <__adddf3>
 8004de2:	4606      	mov	r6, r0
 8004de4:	460f      	mov	r7, r1
 8004de6:	4602      	mov	r2, r0
 8004de8:	460b      	mov	r3, r1
 8004dea:	4640      	mov	r0, r8
 8004dec:	4649      	mov	r1, r9
 8004dee:	f7fb fec7 	bl	8000b80 <__aeabi_dcmplt>
 8004df2:	b9c8      	cbnz	r0, 8004e28 <_dtoa_r+0x6a8>
 8004df4:	4632      	mov	r2, r6
 8004df6:	463b      	mov	r3, r7
 8004df8:	4640      	mov	r0, r8
 8004dfa:	4649      	mov	r1, r9
 8004dfc:	f7fb feb6 	bl	8000b6c <__aeabi_dcmpeq>
 8004e00:	b110      	cbz	r0, 8004e08 <_dtoa_r+0x688>
 8004e02:	9b00      	ldr	r3, [sp, #0]
 8004e04:	07db      	lsls	r3, r3, #31
 8004e06:	d40f      	bmi.n	8004e28 <_dtoa_r+0x6a8>
 8004e08:	4651      	mov	r1, sl
 8004e0a:	4620      	mov	r0, r4
 8004e0c:	f000 ffe9 	bl	8005de2 <_Bfree>
 8004e10:	2300      	movs	r3, #0
 8004e12:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004e14:	702b      	strb	r3, [r5, #0]
 8004e16:	f10b 0301 	add.w	r3, fp, #1
 8004e1a:	6013      	str	r3, [r2, #0]
 8004e1c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	f43f acf8 	beq.w	8004814 <_dtoa_r+0x94>
 8004e24:	601d      	str	r5, [r3, #0]
 8004e26:	e4f5      	b.n	8004814 <_dtoa_r+0x94>
 8004e28:	465f      	mov	r7, fp
 8004e2a:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8004e2e:	2a39      	cmp	r2, #57	; 0x39
 8004e30:	f105 33ff 	add.w	r3, r5, #4294967295
 8004e34:	d106      	bne.n	8004e44 <_dtoa_r+0x6c4>
 8004e36:	9a02      	ldr	r2, [sp, #8]
 8004e38:	429a      	cmp	r2, r3
 8004e3a:	d107      	bne.n	8004e4c <_dtoa_r+0x6cc>
 8004e3c:	2330      	movs	r3, #48	; 0x30
 8004e3e:	7013      	strb	r3, [r2, #0]
 8004e40:	3701      	adds	r7, #1
 8004e42:	4613      	mov	r3, r2
 8004e44:	781a      	ldrb	r2, [r3, #0]
 8004e46:	3201      	adds	r2, #1
 8004e48:	701a      	strb	r2, [r3, #0]
 8004e4a:	e78d      	b.n	8004d68 <_dtoa_r+0x5e8>
 8004e4c:	461d      	mov	r5, r3
 8004e4e:	e7ec      	b.n	8004e2a <_dtoa_r+0x6aa>
 8004e50:	2200      	movs	r2, #0
 8004e52:	4ba4      	ldr	r3, [pc, #656]	; (80050e4 <_dtoa_r+0x964>)
 8004e54:	f7fb fbaa 	bl	80005ac <__aeabi_dmul>
 8004e58:	2200      	movs	r2, #0
 8004e5a:	2300      	movs	r3, #0
 8004e5c:	4606      	mov	r6, r0
 8004e5e:	460f      	mov	r7, r1
 8004e60:	f7fb fe84 	bl	8000b6c <__aeabi_dcmpeq>
 8004e64:	2800      	cmp	r0, #0
 8004e66:	d09a      	beq.n	8004d9e <_dtoa_r+0x61e>
 8004e68:	e7ce      	b.n	8004e08 <_dtoa_r+0x688>
 8004e6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004e6c:	2a00      	cmp	r2, #0
 8004e6e:	f000 80cd 	beq.w	800500c <_dtoa_r+0x88c>
 8004e72:	9a07      	ldr	r2, [sp, #28]
 8004e74:	2a01      	cmp	r2, #1
 8004e76:	f300 80af 	bgt.w	8004fd8 <_dtoa_r+0x858>
 8004e7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004e7c:	2a00      	cmp	r2, #0
 8004e7e:	f000 80a7 	beq.w	8004fd0 <_dtoa_r+0x850>
 8004e82:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8004e86:	9e08      	ldr	r6, [sp, #32]
 8004e88:	9d05      	ldr	r5, [sp, #20]
 8004e8a:	9a05      	ldr	r2, [sp, #20]
 8004e8c:	441a      	add	r2, r3
 8004e8e:	9205      	str	r2, [sp, #20]
 8004e90:	9a06      	ldr	r2, [sp, #24]
 8004e92:	2101      	movs	r1, #1
 8004e94:	441a      	add	r2, r3
 8004e96:	4620      	mov	r0, r4
 8004e98:	9206      	str	r2, [sp, #24]
 8004e9a:	f001 f880 	bl	8005f9e <__i2b>
 8004e9e:	4607      	mov	r7, r0
 8004ea0:	2d00      	cmp	r5, #0
 8004ea2:	dd0c      	ble.n	8004ebe <_dtoa_r+0x73e>
 8004ea4:	9b06      	ldr	r3, [sp, #24]
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	dd09      	ble.n	8004ebe <_dtoa_r+0x73e>
 8004eaa:	42ab      	cmp	r3, r5
 8004eac:	9a05      	ldr	r2, [sp, #20]
 8004eae:	bfa8      	it	ge
 8004eb0:	462b      	movge	r3, r5
 8004eb2:	1ad2      	subs	r2, r2, r3
 8004eb4:	9205      	str	r2, [sp, #20]
 8004eb6:	9a06      	ldr	r2, [sp, #24]
 8004eb8:	1aed      	subs	r5, r5, r3
 8004eba:	1ad3      	subs	r3, r2, r3
 8004ebc:	9306      	str	r3, [sp, #24]
 8004ebe:	9b08      	ldr	r3, [sp, #32]
 8004ec0:	b1f3      	cbz	r3, 8004f00 <_dtoa_r+0x780>
 8004ec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004ec4:	2b00      	cmp	r3, #0
 8004ec6:	f000 80a5 	beq.w	8005014 <_dtoa_r+0x894>
 8004eca:	2e00      	cmp	r6, #0
 8004ecc:	dd10      	ble.n	8004ef0 <_dtoa_r+0x770>
 8004ece:	4639      	mov	r1, r7
 8004ed0:	4632      	mov	r2, r6
 8004ed2:	4620      	mov	r0, r4
 8004ed4:	f001 f8fa 	bl	80060cc <__pow5mult>
 8004ed8:	4652      	mov	r2, sl
 8004eda:	4601      	mov	r1, r0
 8004edc:	4607      	mov	r7, r0
 8004ede:	4620      	mov	r0, r4
 8004ee0:	f001 f866 	bl	8005fb0 <__multiply>
 8004ee4:	4651      	mov	r1, sl
 8004ee6:	4680      	mov	r8, r0
 8004ee8:	4620      	mov	r0, r4
 8004eea:	f000 ff7a 	bl	8005de2 <_Bfree>
 8004eee:	46c2      	mov	sl, r8
 8004ef0:	9b08      	ldr	r3, [sp, #32]
 8004ef2:	1b9a      	subs	r2, r3, r6
 8004ef4:	d004      	beq.n	8004f00 <_dtoa_r+0x780>
 8004ef6:	4651      	mov	r1, sl
 8004ef8:	4620      	mov	r0, r4
 8004efa:	f001 f8e7 	bl	80060cc <__pow5mult>
 8004efe:	4682      	mov	sl, r0
 8004f00:	2101      	movs	r1, #1
 8004f02:	4620      	mov	r0, r4
 8004f04:	f001 f84b 	bl	8005f9e <__i2b>
 8004f08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	4606      	mov	r6, r0
 8004f0e:	f340 8083 	ble.w	8005018 <_dtoa_r+0x898>
 8004f12:	461a      	mov	r2, r3
 8004f14:	4601      	mov	r1, r0
 8004f16:	4620      	mov	r0, r4
 8004f18:	f001 f8d8 	bl	80060cc <__pow5mult>
 8004f1c:	9b07      	ldr	r3, [sp, #28]
 8004f1e:	2b01      	cmp	r3, #1
 8004f20:	4606      	mov	r6, r0
 8004f22:	dd7c      	ble.n	800501e <_dtoa_r+0x89e>
 8004f24:	f04f 0800 	mov.w	r8, #0
 8004f28:	6933      	ldr	r3, [r6, #16]
 8004f2a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8004f2e:	6918      	ldr	r0, [r3, #16]
 8004f30:	f000 ffe7 	bl	8005f02 <__hi0bits>
 8004f34:	f1c0 0020 	rsb	r0, r0, #32
 8004f38:	9b06      	ldr	r3, [sp, #24]
 8004f3a:	4418      	add	r0, r3
 8004f3c:	f010 001f 	ands.w	r0, r0, #31
 8004f40:	f000 8096 	beq.w	8005070 <_dtoa_r+0x8f0>
 8004f44:	f1c0 0320 	rsb	r3, r0, #32
 8004f48:	2b04      	cmp	r3, #4
 8004f4a:	f340 8087 	ble.w	800505c <_dtoa_r+0x8dc>
 8004f4e:	9b05      	ldr	r3, [sp, #20]
 8004f50:	f1c0 001c 	rsb	r0, r0, #28
 8004f54:	4403      	add	r3, r0
 8004f56:	9305      	str	r3, [sp, #20]
 8004f58:	9b06      	ldr	r3, [sp, #24]
 8004f5a:	4405      	add	r5, r0
 8004f5c:	4403      	add	r3, r0
 8004f5e:	9306      	str	r3, [sp, #24]
 8004f60:	9b05      	ldr	r3, [sp, #20]
 8004f62:	2b00      	cmp	r3, #0
 8004f64:	dd05      	ble.n	8004f72 <_dtoa_r+0x7f2>
 8004f66:	4651      	mov	r1, sl
 8004f68:	461a      	mov	r2, r3
 8004f6a:	4620      	mov	r0, r4
 8004f6c:	f001 f8fc 	bl	8006168 <__lshift>
 8004f70:	4682      	mov	sl, r0
 8004f72:	9b06      	ldr	r3, [sp, #24]
 8004f74:	2b00      	cmp	r3, #0
 8004f76:	dd05      	ble.n	8004f84 <_dtoa_r+0x804>
 8004f78:	4631      	mov	r1, r6
 8004f7a:	461a      	mov	r2, r3
 8004f7c:	4620      	mov	r0, r4
 8004f7e:	f001 f8f3 	bl	8006168 <__lshift>
 8004f82:	4606      	mov	r6, r0
 8004f84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	d074      	beq.n	8005074 <_dtoa_r+0x8f4>
 8004f8a:	4631      	mov	r1, r6
 8004f8c:	4650      	mov	r0, sl
 8004f8e:	f001 f93c 	bl	800620a <__mcmp>
 8004f92:	2800      	cmp	r0, #0
 8004f94:	da6e      	bge.n	8005074 <_dtoa_r+0x8f4>
 8004f96:	2300      	movs	r3, #0
 8004f98:	4651      	mov	r1, sl
 8004f9a:	220a      	movs	r2, #10
 8004f9c:	4620      	mov	r0, r4
 8004f9e:	f000 ff37 	bl	8005e10 <__multadd>
 8004fa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004fa4:	f10b 3bff 	add.w	fp, fp, #4294967295
 8004fa8:	4682      	mov	sl, r0
 8004faa:	2b00      	cmp	r3, #0
 8004fac:	f000 81a8 	beq.w	8005300 <_dtoa_r+0xb80>
 8004fb0:	2300      	movs	r3, #0
 8004fb2:	4639      	mov	r1, r7
 8004fb4:	220a      	movs	r2, #10
 8004fb6:	4620      	mov	r0, r4
 8004fb8:	f000 ff2a 	bl	8005e10 <__multadd>
 8004fbc:	9b04      	ldr	r3, [sp, #16]
 8004fbe:	2b00      	cmp	r3, #0
 8004fc0:	4607      	mov	r7, r0
 8004fc2:	f300 80c8 	bgt.w	8005156 <_dtoa_r+0x9d6>
 8004fc6:	9b07      	ldr	r3, [sp, #28]
 8004fc8:	2b02      	cmp	r3, #2
 8004fca:	f340 80c4 	ble.w	8005156 <_dtoa_r+0x9d6>
 8004fce:	e059      	b.n	8005084 <_dtoa_r+0x904>
 8004fd0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004fd2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004fd6:	e756      	b.n	8004e86 <_dtoa_r+0x706>
 8004fd8:	9b03      	ldr	r3, [sp, #12]
 8004fda:	1e5e      	subs	r6, r3, #1
 8004fdc:	9b08      	ldr	r3, [sp, #32]
 8004fde:	42b3      	cmp	r3, r6
 8004fe0:	bfbf      	itttt	lt
 8004fe2:	9b08      	ldrlt	r3, [sp, #32]
 8004fe4:	9608      	strlt	r6, [sp, #32]
 8004fe6:	1af2      	sublt	r2, r6, r3
 8004fe8:	9b0b      	ldrlt	r3, [sp, #44]	; 0x2c
 8004fea:	bfb6      	itet	lt
 8004fec:	189b      	addlt	r3, r3, r2
 8004fee:	1b9e      	subge	r6, r3, r6
 8004ff0:	930b      	strlt	r3, [sp, #44]	; 0x2c
 8004ff2:	9b03      	ldr	r3, [sp, #12]
 8004ff4:	bfb8      	it	lt
 8004ff6:	2600      	movlt	r6, #0
 8004ff8:	2b00      	cmp	r3, #0
 8004ffa:	bfb9      	ittee	lt
 8004ffc:	9b05      	ldrlt	r3, [sp, #20]
 8004ffe:	9a03      	ldrlt	r2, [sp, #12]
 8005000:	9d05      	ldrge	r5, [sp, #20]
 8005002:	9b03      	ldrge	r3, [sp, #12]
 8005004:	bfbc      	itt	lt
 8005006:	1a9d      	sublt	r5, r3, r2
 8005008:	2300      	movlt	r3, #0
 800500a:	e73e      	b.n	8004e8a <_dtoa_r+0x70a>
 800500c:	9e08      	ldr	r6, [sp, #32]
 800500e:	9d05      	ldr	r5, [sp, #20]
 8005010:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8005012:	e745      	b.n	8004ea0 <_dtoa_r+0x720>
 8005014:	9a08      	ldr	r2, [sp, #32]
 8005016:	e76e      	b.n	8004ef6 <_dtoa_r+0x776>
 8005018:	9b07      	ldr	r3, [sp, #28]
 800501a:	2b01      	cmp	r3, #1
 800501c:	dc19      	bgt.n	8005052 <_dtoa_r+0x8d2>
 800501e:	9b00      	ldr	r3, [sp, #0]
 8005020:	b9bb      	cbnz	r3, 8005052 <_dtoa_r+0x8d2>
 8005022:	9b01      	ldr	r3, [sp, #4]
 8005024:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005028:	b99b      	cbnz	r3, 8005052 <_dtoa_r+0x8d2>
 800502a:	9b01      	ldr	r3, [sp, #4]
 800502c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8005030:	0d1b      	lsrs	r3, r3, #20
 8005032:	051b      	lsls	r3, r3, #20
 8005034:	b183      	cbz	r3, 8005058 <_dtoa_r+0x8d8>
 8005036:	9b05      	ldr	r3, [sp, #20]
 8005038:	3301      	adds	r3, #1
 800503a:	9305      	str	r3, [sp, #20]
 800503c:	9b06      	ldr	r3, [sp, #24]
 800503e:	3301      	adds	r3, #1
 8005040:	9306      	str	r3, [sp, #24]
 8005042:	f04f 0801 	mov.w	r8, #1
 8005046:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005048:	2b00      	cmp	r3, #0
 800504a:	f47f af6d 	bne.w	8004f28 <_dtoa_r+0x7a8>
 800504e:	2001      	movs	r0, #1
 8005050:	e772      	b.n	8004f38 <_dtoa_r+0x7b8>
 8005052:	f04f 0800 	mov.w	r8, #0
 8005056:	e7f6      	b.n	8005046 <_dtoa_r+0x8c6>
 8005058:	4698      	mov	r8, r3
 800505a:	e7f4      	b.n	8005046 <_dtoa_r+0x8c6>
 800505c:	d080      	beq.n	8004f60 <_dtoa_r+0x7e0>
 800505e:	9a05      	ldr	r2, [sp, #20]
 8005060:	331c      	adds	r3, #28
 8005062:	441a      	add	r2, r3
 8005064:	9205      	str	r2, [sp, #20]
 8005066:	9a06      	ldr	r2, [sp, #24]
 8005068:	441a      	add	r2, r3
 800506a:	441d      	add	r5, r3
 800506c:	4613      	mov	r3, r2
 800506e:	e776      	b.n	8004f5e <_dtoa_r+0x7de>
 8005070:	4603      	mov	r3, r0
 8005072:	e7f4      	b.n	800505e <_dtoa_r+0x8de>
 8005074:	9b03      	ldr	r3, [sp, #12]
 8005076:	2b00      	cmp	r3, #0
 8005078:	dc36      	bgt.n	80050e8 <_dtoa_r+0x968>
 800507a:	9b07      	ldr	r3, [sp, #28]
 800507c:	2b02      	cmp	r3, #2
 800507e:	dd33      	ble.n	80050e8 <_dtoa_r+0x968>
 8005080:	9b03      	ldr	r3, [sp, #12]
 8005082:	9304      	str	r3, [sp, #16]
 8005084:	9b04      	ldr	r3, [sp, #16]
 8005086:	b963      	cbnz	r3, 80050a2 <_dtoa_r+0x922>
 8005088:	4631      	mov	r1, r6
 800508a:	2205      	movs	r2, #5
 800508c:	4620      	mov	r0, r4
 800508e:	f000 febf 	bl	8005e10 <__multadd>
 8005092:	4601      	mov	r1, r0
 8005094:	4606      	mov	r6, r0
 8005096:	4650      	mov	r0, sl
 8005098:	f001 f8b7 	bl	800620a <__mcmp>
 800509c:	2800      	cmp	r0, #0
 800509e:	f73f adb6 	bgt.w	8004c0e <_dtoa_r+0x48e>
 80050a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80050a4:	9d02      	ldr	r5, [sp, #8]
 80050a6:	ea6f 0b03 	mvn.w	fp, r3
 80050aa:	2300      	movs	r3, #0
 80050ac:	9303      	str	r3, [sp, #12]
 80050ae:	4631      	mov	r1, r6
 80050b0:	4620      	mov	r0, r4
 80050b2:	f000 fe96 	bl	8005de2 <_Bfree>
 80050b6:	2f00      	cmp	r7, #0
 80050b8:	f43f aea6 	beq.w	8004e08 <_dtoa_r+0x688>
 80050bc:	9b03      	ldr	r3, [sp, #12]
 80050be:	b12b      	cbz	r3, 80050cc <_dtoa_r+0x94c>
 80050c0:	42bb      	cmp	r3, r7
 80050c2:	d003      	beq.n	80050cc <_dtoa_r+0x94c>
 80050c4:	4619      	mov	r1, r3
 80050c6:	4620      	mov	r0, r4
 80050c8:	f000 fe8b 	bl	8005de2 <_Bfree>
 80050cc:	4639      	mov	r1, r7
 80050ce:	4620      	mov	r0, r4
 80050d0:	f000 fe87 	bl	8005de2 <_Bfree>
 80050d4:	e698      	b.n	8004e08 <_dtoa_r+0x688>
 80050d6:	2600      	movs	r6, #0
 80050d8:	4637      	mov	r7, r6
 80050da:	e7e2      	b.n	80050a2 <_dtoa_r+0x922>
 80050dc:	46bb      	mov	fp, r7
 80050de:	4637      	mov	r7, r6
 80050e0:	e595      	b.n	8004c0e <_dtoa_r+0x48e>
 80050e2:	bf00      	nop
 80050e4:	40240000 	.word	0x40240000
 80050e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80050ea:	bb93      	cbnz	r3, 8005152 <_dtoa_r+0x9d2>
 80050ec:	9b03      	ldr	r3, [sp, #12]
 80050ee:	9304      	str	r3, [sp, #16]
 80050f0:	9d02      	ldr	r5, [sp, #8]
 80050f2:	4631      	mov	r1, r6
 80050f4:	4650      	mov	r0, sl
 80050f6:	f7ff fab5 	bl	8004664 <quorem>
 80050fa:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80050fe:	f805 9b01 	strb.w	r9, [r5], #1
 8005102:	9b02      	ldr	r3, [sp, #8]
 8005104:	9a04      	ldr	r2, [sp, #16]
 8005106:	1aeb      	subs	r3, r5, r3
 8005108:	429a      	cmp	r2, r3
 800510a:	f300 80dc 	bgt.w	80052c6 <_dtoa_r+0xb46>
 800510e:	9b02      	ldr	r3, [sp, #8]
 8005110:	2a01      	cmp	r2, #1
 8005112:	bfac      	ite	ge
 8005114:	189b      	addge	r3, r3, r2
 8005116:	3301      	addlt	r3, #1
 8005118:	4698      	mov	r8, r3
 800511a:	2300      	movs	r3, #0
 800511c:	9303      	str	r3, [sp, #12]
 800511e:	4651      	mov	r1, sl
 8005120:	2201      	movs	r2, #1
 8005122:	4620      	mov	r0, r4
 8005124:	f001 f820 	bl	8006168 <__lshift>
 8005128:	4631      	mov	r1, r6
 800512a:	4682      	mov	sl, r0
 800512c:	f001 f86d 	bl	800620a <__mcmp>
 8005130:	2800      	cmp	r0, #0
 8005132:	f300 808d 	bgt.w	8005250 <_dtoa_r+0xad0>
 8005136:	d103      	bne.n	8005140 <_dtoa_r+0x9c0>
 8005138:	f019 0f01 	tst.w	r9, #1
 800513c:	f040 8088 	bne.w	8005250 <_dtoa_r+0xad0>
 8005140:	4645      	mov	r5, r8
 8005142:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005146:	2b30      	cmp	r3, #48	; 0x30
 8005148:	f105 32ff 	add.w	r2, r5, #4294967295
 800514c:	d1af      	bne.n	80050ae <_dtoa_r+0x92e>
 800514e:	4615      	mov	r5, r2
 8005150:	e7f7      	b.n	8005142 <_dtoa_r+0x9c2>
 8005152:	9b03      	ldr	r3, [sp, #12]
 8005154:	9304      	str	r3, [sp, #16]
 8005156:	2d00      	cmp	r5, #0
 8005158:	dd05      	ble.n	8005166 <_dtoa_r+0x9e6>
 800515a:	4639      	mov	r1, r7
 800515c:	462a      	mov	r2, r5
 800515e:	4620      	mov	r0, r4
 8005160:	f001 f802 	bl	8006168 <__lshift>
 8005164:	4607      	mov	r7, r0
 8005166:	f1b8 0f00 	cmp.w	r8, #0
 800516a:	d04c      	beq.n	8005206 <_dtoa_r+0xa86>
 800516c:	6879      	ldr	r1, [r7, #4]
 800516e:	4620      	mov	r0, r4
 8005170:	f000 fe03 	bl	8005d7a <_Balloc>
 8005174:	693a      	ldr	r2, [r7, #16]
 8005176:	3202      	adds	r2, #2
 8005178:	4605      	mov	r5, r0
 800517a:	0092      	lsls	r2, r2, #2
 800517c:	f107 010c 	add.w	r1, r7, #12
 8005180:	300c      	adds	r0, #12
 8005182:	f000 fded 	bl	8005d60 <memcpy>
 8005186:	2201      	movs	r2, #1
 8005188:	4629      	mov	r1, r5
 800518a:	4620      	mov	r0, r4
 800518c:	f000 ffec 	bl	8006168 <__lshift>
 8005190:	9b00      	ldr	r3, [sp, #0]
 8005192:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8005196:	9703      	str	r7, [sp, #12]
 8005198:	f003 0301 	and.w	r3, r3, #1
 800519c:	4607      	mov	r7, r0
 800519e:	9305      	str	r3, [sp, #20]
 80051a0:	4631      	mov	r1, r6
 80051a2:	4650      	mov	r0, sl
 80051a4:	f7ff fa5e 	bl	8004664 <quorem>
 80051a8:	9903      	ldr	r1, [sp, #12]
 80051aa:	4605      	mov	r5, r0
 80051ac:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80051b0:	4650      	mov	r0, sl
 80051b2:	f001 f82a 	bl	800620a <__mcmp>
 80051b6:	463a      	mov	r2, r7
 80051b8:	9000      	str	r0, [sp, #0]
 80051ba:	4631      	mov	r1, r6
 80051bc:	4620      	mov	r0, r4
 80051be:	f001 f83e 	bl	800623e <__mdiff>
 80051c2:	68c3      	ldr	r3, [r0, #12]
 80051c4:	4602      	mov	r2, r0
 80051c6:	bb03      	cbnz	r3, 800520a <_dtoa_r+0xa8a>
 80051c8:	4601      	mov	r1, r0
 80051ca:	9006      	str	r0, [sp, #24]
 80051cc:	4650      	mov	r0, sl
 80051ce:	f001 f81c 	bl	800620a <__mcmp>
 80051d2:	9a06      	ldr	r2, [sp, #24]
 80051d4:	4603      	mov	r3, r0
 80051d6:	4611      	mov	r1, r2
 80051d8:	4620      	mov	r0, r4
 80051da:	9306      	str	r3, [sp, #24]
 80051dc:	f000 fe01 	bl	8005de2 <_Bfree>
 80051e0:	9b06      	ldr	r3, [sp, #24]
 80051e2:	b9a3      	cbnz	r3, 800520e <_dtoa_r+0xa8e>
 80051e4:	9a07      	ldr	r2, [sp, #28]
 80051e6:	b992      	cbnz	r2, 800520e <_dtoa_r+0xa8e>
 80051e8:	9a05      	ldr	r2, [sp, #20]
 80051ea:	b982      	cbnz	r2, 800520e <_dtoa_r+0xa8e>
 80051ec:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80051f0:	d029      	beq.n	8005246 <_dtoa_r+0xac6>
 80051f2:	9b00      	ldr	r3, [sp, #0]
 80051f4:	2b00      	cmp	r3, #0
 80051f6:	dd01      	ble.n	80051fc <_dtoa_r+0xa7c>
 80051f8:	f105 0931 	add.w	r9, r5, #49	; 0x31
 80051fc:	f108 0501 	add.w	r5, r8, #1
 8005200:	f888 9000 	strb.w	r9, [r8]
 8005204:	e753      	b.n	80050ae <_dtoa_r+0x92e>
 8005206:	4638      	mov	r0, r7
 8005208:	e7c2      	b.n	8005190 <_dtoa_r+0xa10>
 800520a:	2301      	movs	r3, #1
 800520c:	e7e3      	b.n	80051d6 <_dtoa_r+0xa56>
 800520e:	9a00      	ldr	r2, [sp, #0]
 8005210:	2a00      	cmp	r2, #0
 8005212:	db04      	blt.n	800521e <_dtoa_r+0xa9e>
 8005214:	d125      	bne.n	8005262 <_dtoa_r+0xae2>
 8005216:	9a07      	ldr	r2, [sp, #28]
 8005218:	bb1a      	cbnz	r2, 8005262 <_dtoa_r+0xae2>
 800521a:	9a05      	ldr	r2, [sp, #20]
 800521c:	bb0a      	cbnz	r2, 8005262 <_dtoa_r+0xae2>
 800521e:	2b00      	cmp	r3, #0
 8005220:	ddec      	ble.n	80051fc <_dtoa_r+0xa7c>
 8005222:	4651      	mov	r1, sl
 8005224:	2201      	movs	r2, #1
 8005226:	4620      	mov	r0, r4
 8005228:	f000 ff9e 	bl	8006168 <__lshift>
 800522c:	4631      	mov	r1, r6
 800522e:	4682      	mov	sl, r0
 8005230:	f000 ffeb 	bl	800620a <__mcmp>
 8005234:	2800      	cmp	r0, #0
 8005236:	dc03      	bgt.n	8005240 <_dtoa_r+0xac0>
 8005238:	d1e0      	bne.n	80051fc <_dtoa_r+0xa7c>
 800523a:	f019 0f01 	tst.w	r9, #1
 800523e:	d0dd      	beq.n	80051fc <_dtoa_r+0xa7c>
 8005240:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8005244:	d1d8      	bne.n	80051f8 <_dtoa_r+0xa78>
 8005246:	2339      	movs	r3, #57	; 0x39
 8005248:	f888 3000 	strb.w	r3, [r8]
 800524c:	f108 0801 	add.w	r8, r8, #1
 8005250:	4645      	mov	r5, r8
 8005252:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005256:	2b39      	cmp	r3, #57	; 0x39
 8005258:	f105 32ff 	add.w	r2, r5, #4294967295
 800525c:	d03b      	beq.n	80052d6 <_dtoa_r+0xb56>
 800525e:	3301      	adds	r3, #1
 8005260:	e040      	b.n	80052e4 <_dtoa_r+0xb64>
 8005262:	2b00      	cmp	r3, #0
 8005264:	f108 0501 	add.w	r5, r8, #1
 8005268:	dd05      	ble.n	8005276 <_dtoa_r+0xaf6>
 800526a:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800526e:	d0ea      	beq.n	8005246 <_dtoa_r+0xac6>
 8005270:	f109 0901 	add.w	r9, r9, #1
 8005274:	e7c4      	b.n	8005200 <_dtoa_r+0xa80>
 8005276:	9b02      	ldr	r3, [sp, #8]
 8005278:	9a04      	ldr	r2, [sp, #16]
 800527a:	f805 9c01 	strb.w	r9, [r5, #-1]
 800527e:	1aeb      	subs	r3, r5, r3
 8005280:	4293      	cmp	r3, r2
 8005282:	46a8      	mov	r8, r5
 8005284:	f43f af4b 	beq.w	800511e <_dtoa_r+0x99e>
 8005288:	4651      	mov	r1, sl
 800528a:	2300      	movs	r3, #0
 800528c:	220a      	movs	r2, #10
 800528e:	4620      	mov	r0, r4
 8005290:	f000 fdbe 	bl	8005e10 <__multadd>
 8005294:	9b03      	ldr	r3, [sp, #12]
 8005296:	9903      	ldr	r1, [sp, #12]
 8005298:	42bb      	cmp	r3, r7
 800529a:	4682      	mov	sl, r0
 800529c:	f04f 0300 	mov.w	r3, #0
 80052a0:	f04f 020a 	mov.w	r2, #10
 80052a4:	4620      	mov	r0, r4
 80052a6:	d104      	bne.n	80052b2 <_dtoa_r+0xb32>
 80052a8:	f000 fdb2 	bl	8005e10 <__multadd>
 80052ac:	9003      	str	r0, [sp, #12]
 80052ae:	4607      	mov	r7, r0
 80052b0:	e776      	b.n	80051a0 <_dtoa_r+0xa20>
 80052b2:	f000 fdad 	bl	8005e10 <__multadd>
 80052b6:	2300      	movs	r3, #0
 80052b8:	9003      	str	r0, [sp, #12]
 80052ba:	220a      	movs	r2, #10
 80052bc:	4639      	mov	r1, r7
 80052be:	4620      	mov	r0, r4
 80052c0:	f000 fda6 	bl	8005e10 <__multadd>
 80052c4:	e7f3      	b.n	80052ae <_dtoa_r+0xb2e>
 80052c6:	4651      	mov	r1, sl
 80052c8:	2300      	movs	r3, #0
 80052ca:	220a      	movs	r2, #10
 80052cc:	4620      	mov	r0, r4
 80052ce:	f000 fd9f 	bl	8005e10 <__multadd>
 80052d2:	4682      	mov	sl, r0
 80052d4:	e70d      	b.n	80050f2 <_dtoa_r+0x972>
 80052d6:	9b02      	ldr	r3, [sp, #8]
 80052d8:	4293      	cmp	r3, r2
 80052da:	d105      	bne.n	80052e8 <_dtoa_r+0xb68>
 80052dc:	9a02      	ldr	r2, [sp, #8]
 80052de:	f10b 0b01 	add.w	fp, fp, #1
 80052e2:	2331      	movs	r3, #49	; 0x31
 80052e4:	7013      	strb	r3, [r2, #0]
 80052e6:	e6e2      	b.n	80050ae <_dtoa_r+0x92e>
 80052e8:	4615      	mov	r5, r2
 80052ea:	e7b2      	b.n	8005252 <_dtoa_r+0xad2>
 80052ec:	4b09      	ldr	r3, [pc, #36]	; (8005314 <_dtoa_r+0xb94>)
 80052ee:	f7ff baae 	b.w	800484e <_dtoa_r+0xce>
 80052f2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80052f4:	2b00      	cmp	r3, #0
 80052f6:	f47f aa88 	bne.w	800480a <_dtoa_r+0x8a>
 80052fa:	4b07      	ldr	r3, [pc, #28]	; (8005318 <_dtoa_r+0xb98>)
 80052fc:	f7ff baa7 	b.w	800484e <_dtoa_r+0xce>
 8005300:	9b04      	ldr	r3, [sp, #16]
 8005302:	2b00      	cmp	r3, #0
 8005304:	f73f aef4 	bgt.w	80050f0 <_dtoa_r+0x970>
 8005308:	9b07      	ldr	r3, [sp, #28]
 800530a:	2b02      	cmp	r3, #2
 800530c:	f77f aef0 	ble.w	80050f0 <_dtoa_r+0x970>
 8005310:	e6b8      	b.n	8005084 <_dtoa_r+0x904>
 8005312:	bf00      	nop
 8005314:	08006fa0 	.word	0x08006fa0
 8005318:	08007020 	.word	0x08007020

0800531c <__sflush_r>:
 800531c:	898a      	ldrh	r2, [r1, #12]
 800531e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005322:	4605      	mov	r5, r0
 8005324:	0710      	lsls	r0, r2, #28
 8005326:	460c      	mov	r4, r1
 8005328:	d45a      	bmi.n	80053e0 <__sflush_r+0xc4>
 800532a:	684b      	ldr	r3, [r1, #4]
 800532c:	2b00      	cmp	r3, #0
 800532e:	dc05      	bgt.n	800533c <__sflush_r+0x20>
 8005330:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005332:	2b00      	cmp	r3, #0
 8005334:	dc02      	bgt.n	800533c <__sflush_r+0x20>
 8005336:	2000      	movs	r0, #0
 8005338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800533c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800533e:	2e00      	cmp	r6, #0
 8005340:	d0f9      	beq.n	8005336 <__sflush_r+0x1a>
 8005342:	2300      	movs	r3, #0
 8005344:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005348:	682f      	ldr	r7, [r5, #0]
 800534a:	602b      	str	r3, [r5, #0]
 800534c:	d033      	beq.n	80053b6 <__sflush_r+0x9a>
 800534e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005350:	89a3      	ldrh	r3, [r4, #12]
 8005352:	075a      	lsls	r2, r3, #29
 8005354:	d505      	bpl.n	8005362 <__sflush_r+0x46>
 8005356:	6863      	ldr	r3, [r4, #4]
 8005358:	1ac0      	subs	r0, r0, r3
 800535a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800535c:	b10b      	cbz	r3, 8005362 <__sflush_r+0x46>
 800535e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005360:	1ac0      	subs	r0, r0, r3
 8005362:	2300      	movs	r3, #0
 8005364:	4602      	mov	r2, r0
 8005366:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005368:	6a21      	ldr	r1, [r4, #32]
 800536a:	4628      	mov	r0, r5
 800536c:	47b0      	blx	r6
 800536e:	1c43      	adds	r3, r0, #1
 8005370:	89a3      	ldrh	r3, [r4, #12]
 8005372:	d106      	bne.n	8005382 <__sflush_r+0x66>
 8005374:	6829      	ldr	r1, [r5, #0]
 8005376:	291d      	cmp	r1, #29
 8005378:	d84b      	bhi.n	8005412 <__sflush_r+0xf6>
 800537a:	4a2b      	ldr	r2, [pc, #172]	; (8005428 <__sflush_r+0x10c>)
 800537c:	40ca      	lsrs	r2, r1
 800537e:	07d6      	lsls	r6, r2, #31
 8005380:	d547      	bpl.n	8005412 <__sflush_r+0xf6>
 8005382:	2200      	movs	r2, #0
 8005384:	6062      	str	r2, [r4, #4]
 8005386:	04d9      	lsls	r1, r3, #19
 8005388:	6922      	ldr	r2, [r4, #16]
 800538a:	6022      	str	r2, [r4, #0]
 800538c:	d504      	bpl.n	8005398 <__sflush_r+0x7c>
 800538e:	1c42      	adds	r2, r0, #1
 8005390:	d101      	bne.n	8005396 <__sflush_r+0x7a>
 8005392:	682b      	ldr	r3, [r5, #0]
 8005394:	b903      	cbnz	r3, 8005398 <__sflush_r+0x7c>
 8005396:	6560      	str	r0, [r4, #84]	; 0x54
 8005398:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800539a:	602f      	str	r7, [r5, #0]
 800539c:	2900      	cmp	r1, #0
 800539e:	d0ca      	beq.n	8005336 <__sflush_r+0x1a>
 80053a0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80053a4:	4299      	cmp	r1, r3
 80053a6:	d002      	beq.n	80053ae <__sflush_r+0x92>
 80053a8:	4628      	mov	r0, r5
 80053aa:	f7fd fab3 	bl	8002914 <_free_r>
 80053ae:	2000      	movs	r0, #0
 80053b0:	6360      	str	r0, [r4, #52]	; 0x34
 80053b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80053b6:	6a21      	ldr	r1, [r4, #32]
 80053b8:	2301      	movs	r3, #1
 80053ba:	4628      	mov	r0, r5
 80053bc:	47b0      	blx	r6
 80053be:	1c41      	adds	r1, r0, #1
 80053c0:	d1c6      	bne.n	8005350 <__sflush_r+0x34>
 80053c2:	682b      	ldr	r3, [r5, #0]
 80053c4:	2b00      	cmp	r3, #0
 80053c6:	d0c3      	beq.n	8005350 <__sflush_r+0x34>
 80053c8:	2b1d      	cmp	r3, #29
 80053ca:	d001      	beq.n	80053d0 <__sflush_r+0xb4>
 80053cc:	2b16      	cmp	r3, #22
 80053ce:	d101      	bne.n	80053d4 <__sflush_r+0xb8>
 80053d0:	602f      	str	r7, [r5, #0]
 80053d2:	e7b0      	b.n	8005336 <__sflush_r+0x1a>
 80053d4:	89a3      	ldrh	r3, [r4, #12]
 80053d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80053da:	81a3      	strh	r3, [r4, #12]
 80053dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80053e0:	690f      	ldr	r7, [r1, #16]
 80053e2:	2f00      	cmp	r7, #0
 80053e4:	d0a7      	beq.n	8005336 <__sflush_r+0x1a>
 80053e6:	0793      	lsls	r3, r2, #30
 80053e8:	680e      	ldr	r6, [r1, #0]
 80053ea:	bf08      	it	eq
 80053ec:	694b      	ldreq	r3, [r1, #20]
 80053ee:	600f      	str	r7, [r1, #0]
 80053f0:	bf18      	it	ne
 80053f2:	2300      	movne	r3, #0
 80053f4:	eba6 0807 	sub.w	r8, r6, r7
 80053f8:	608b      	str	r3, [r1, #8]
 80053fa:	f1b8 0f00 	cmp.w	r8, #0
 80053fe:	dd9a      	ble.n	8005336 <__sflush_r+0x1a>
 8005400:	4643      	mov	r3, r8
 8005402:	463a      	mov	r2, r7
 8005404:	6a21      	ldr	r1, [r4, #32]
 8005406:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005408:	4628      	mov	r0, r5
 800540a:	47b0      	blx	r6
 800540c:	2800      	cmp	r0, #0
 800540e:	dc07      	bgt.n	8005420 <__sflush_r+0x104>
 8005410:	89a3      	ldrh	r3, [r4, #12]
 8005412:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005416:	81a3      	strh	r3, [r4, #12]
 8005418:	f04f 30ff 	mov.w	r0, #4294967295
 800541c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005420:	4407      	add	r7, r0
 8005422:	eba8 0800 	sub.w	r8, r8, r0
 8005426:	e7e8      	b.n	80053fa <__sflush_r+0xde>
 8005428:	20400001 	.word	0x20400001

0800542c <_fflush_r>:
 800542c:	b538      	push	{r3, r4, r5, lr}
 800542e:	690b      	ldr	r3, [r1, #16]
 8005430:	4605      	mov	r5, r0
 8005432:	460c      	mov	r4, r1
 8005434:	b1db      	cbz	r3, 800546e <_fflush_r+0x42>
 8005436:	b118      	cbz	r0, 8005440 <_fflush_r+0x14>
 8005438:	6983      	ldr	r3, [r0, #24]
 800543a:	b90b      	cbnz	r3, 8005440 <_fflush_r+0x14>
 800543c:	f000 f860 	bl	8005500 <__sinit>
 8005440:	4b0c      	ldr	r3, [pc, #48]	; (8005474 <_fflush_r+0x48>)
 8005442:	429c      	cmp	r4, r3
 8005444:	d109      	bne.n	800545a <_fflush_r+0x2e>
 8005446:	686c      	ldr	r4, [r5, #4]
 8005448:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800544c:	b17b      	cbz	r3, 800546e <_fflush_r+0x42>
 800544e:	4621      	mov	r1, r4
 8005450:	4628      	mov	r0, r5
 8005452:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005456:	f7ff bf61 	b.w	800531c <__sflush_r>
 800545a:	4b07      	ldr	r3, [pc, #28]	; (8005478 <_fflush_r+0x4c>)
 800545c:	429c      	cmp	r4, r3
 800545e:	d101      	bne.n	8005464 <_fflush_r+0x38>
 8005460:	68ac      	ldr	r4, [r5, #8]
 8005462:	e7f1      	b.n	8005448 <_fflush_r+0x1c>
 8005464:	4b05      	ldr	r3, [pc, #20]	; (800547c <_fflush_r+0x50>)
 8005466:	429c      	cmp	r4, r3
 8005468:	bf08      	it	eq
 800546a:	68ec      	ldreq	r4, [r5, #12]
 800546c:	e7ec      	b.n	8005448 <_fflush_r+0x1c>
 800546e:	2000      	movs	r0, #0
 8005470:	bd38      	pop	{r3, r4, r5, pc}
 8005472:	bf00      	nop
 8005474:	08007050 	.word	0x08007050
 8005478:	08007070 	.word	0x08007070
 800547c:	08007030 	.word	0x08007030

08005480 <_cleanup_r>:
 8005480:	4901      	ldr	r1, [pc, #4]	; (8005488 <_cleanup_r+0x8>)
 8005482:	f000 b8a9 	b.w	80055d8 <_fwalk_reent>
 8005486:	bf00      	nop
 8005488:	0800542d 	.word	0x0800542d

0800548c <std.isra.0>:
 800548c:	2300      	movs	r3, #0
 800548e:	b510      	push	{r4, lr}
 8005490:	4604      	mov	r4, r0
 8005492:	6003      	str	r3, [r0, #0]
 8005494:	6043      	str	r3, [r0, #4]
 8005496:	6083      	str	r3, [r0, #8]
 8005498:	8181      	strh	r1, [r0, #12]
 800549a:	6643      	str	r3, [r0, #100]	; 0x64
 800549c:	81c2      	strh	r2, [r0, #14]
 800549e:	6103      	str	r3, [r0, #16]
 80054a0:	6143      	str	r3, [r0, #20]
 80054a2:	6183      	str	r3, [r0, #24]
 80054a4:	4619      	mov	r1, r3
 80054a6:	2208      	movs	r2, #8
 80054a8:	305c      	adds	r0, #92	; 0x5c
 80054aa:	f7fd fa1d 	bl	80028e8 <memset>
 80054ae:	4b05      	ldr	r3, [pc, #20]	; (80054c4 <std.isra.0+0x38>)
 80054b0:	6263      	str	r3, [r4, #36]	; 0x24
 80054b2:	4b05      	ldr	r3, [pc, #20]	; (80054c8 <std.isra.0+0x3c>)
 80054b4:	62a3      	str	r3, [r4, #40]	; 0x28
 80054b6:	4b05      	ldr	r3, [pc, #20]	; (80054cc <std.isra.0+0x40>)
 80054b8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80054ba:	4b05      	ldr	r3, [pc, #20]	; (80054d0 <std.isra.0+0x44>)
 80054bc:	6224      	str	r4, [r4, #32]
 80054be:	6323      	str	r3, [r4, #48]	; 0x30
 80054c0:	bd10      	pop	{r4, pc}
 80054c2:	bf00      	nop
 80054c4:	08006a75 	.word	0x08006a75
 80054c8:	08006a97 	.word	0x08006a97
 80054cc:	08006acf 	.word	0x08006acf
 80054d0:	08006af3 	.word	0x08006af3

080054d4 <__sfmoreglue>:
 80054d4:	b570      	push	{r4, r5, r6, lr}
 80054d6:	1e4a      	subs	r2, r1, #1
 80054d8:	2568      	movs	r5, #104	; 0x68
 80054da:	4355      	muls	r5, r2
 80054dc:	460e      	mov	r6, r1
 80054de:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80054e2:	f7fd fa65 	bl	80029b0 <_malloc_r>
 80054e6:	4604      	mov	r4, r0
 80054e8:	b140      	cbz	r0, 80054fc <__sfmoreglue+0x28>
 80054ea:	2100      	movs	r1, #0
 80054ec:	e880 0042 	stmia.w	r0, {r1, r6}
 80054f0:	300c      	adds	r0, #12
 80054f2:	60a0      	str	r0, [r4, #8]
 80054f4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80054f8:	f7fd f9f6 	bl	80028e8 <memset>
 80054fc:	4620      	mov	r0, r4
 80054fe:	bd70      	pop	{r4, r5, r6, pc}

08005500 <__sinit>:
 8005500:	6983      	ldr	r3, [r0, #24]
 8005502:	b510      	push	{r4, lr}
 8005504:	4604      	mov	r4, r0
 8005506:	bb33      	cbnz	r3, 8005556 <__sinit+0x56>
 8005508:	6483      	str	r3, [r0, #72]	; 0x48
 800550a:	64c3      	str	r3, [r0, #76]	; 0x4c
 800550c:	6503      	str	r3, [r0, #80]	; 0x50
 800550e:	4b12      	ldr	r3, [pc, #72]	; (8005558 <__sinit+0x58>)
 8005510:	4a12      	ldr	r2, [pc, #72]	; (800555c <__sinit+0x5c>)
 8005512:	681b      	ldr	r3, [r3, #0]
 8005514:	6282      	str	r2, [r0, #40]	; 0x28
 8005516:	4298      	cmp	r0, r3
 8005518:	bf04      	itt	eq
 800551a:	2301      	moveq	r3, #1
 800551c:	6183      	streq	r3, [r0, #24]
 800551e:	f000 f81f 	bl	8005560 <__sfp>
 8005522:	6060      	str	r0, [r4, #4]
 8005524:	4620      	mov	r0, r4
 8005526:	f000 f81b 	bl	8005560 <__sfp>
 800552a:	60a0      	str	r0, [r4, #8]
 800552c:	4620      	mov	r0, r4
 800552e:	f000 f817 	bl	8005560 <__sfp>
 8005532:	2200      	movs	r2, #0
 8005534:	60e0      	str	r0, [r4, #12]
 8005536:	2104      	movs	r1, #4
 8005538:	6860      	ldr	r0, [r4, #4]
 800553a:	f7ff ffa7 	bl	800548c <std.isra.0>
 800553e:	2201      	movs	r2, #1
 8005540:	2109      	movs	r1, #9
 8005542:	68a0      	ldr	r0, [r4, #8]
 8005544:	f7ff ffa2 	bl	800548c <std.isra.0>
 8005548:	2202      	movs	r2, #2
 800554a:	2112      	movs	r1, #18
 800554c:	68e0      	ldr	r0, [r4, #12]
 800554e:	f7ff ff9d 	bl	800548c <std.isra.0>
 8005552:	2301      	movs	r3, #1
 8005554:	61a3      	str	r3, [r4, #24]
 8005556:	bd10      	pop	{r4, pc}
 8005558:	08006f8c 	.word	0x08006f8c
 800555c:	08005481 	.word	0x08005481

08005560 <__sfp>:
 8005560:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005562:	4b1c      	ldr	r3, [pc, #112]	; (80055d4 <__sfp+0x74>)
 8005564:	681e      	ldr	r6, [r3, #0]
 8005566:	69b3      	ldr	r3, [r6, #24]
 8005568:	4607      	mov	r7, r0
 800556a:	b913      	cbnz	r3, 8005572 <__sfp+0x12>
 800556c:	4630      	mov	r0, r6
 800556e:	f7ff ffc7 	bl	8005500 <__sinit>
 8005572:	3648      	adds	r6, #72	; 0x48
 8005574:	68b4      	ldr	r4, [r6, #8]
 8005576:	6873      	ldr	r3, [r6, #4]
 8005578:	3b01      	subs	r3, #1
 800557a:	d503      	bpl.n	8005584 <__sfp+0x24>
 800557c:	6833      	ldr	r3, [r6, #0]
 800557e:	b133      	cbz	r3, 800558e <__sfp+0x2e>
 8005580:	6836      	ldr	r6, [r6, #0]
 8005582:	e7f7      	b.n	8005574 <__sfp+0x14>
 8005584:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005588:	b16d      	cbz	r5, 80055a6 <__sfp+0x46>
 800558a:	3468      	adds	r4, #104	; 0x68
 800558c:	e7f4      	b.n	8005578 <__sfp+0x18>
 800558e:	2104      	movs	r1, #4
 8005590:	4638      	mov	r0, r7
 8005592:	f7ff ff9f 	bl	80054d4 <__sfmoreglue>
 8005596:	6030      	str	r0, [r6, #0]
 8005598:	2800      	cmp	r0, #0
 800559a:	d1f1      	bne.n	8005580 <__sfp+0x20>
 800559c:	230c      	movs	r3, #12
 800559e:	603b      	str	r3, [r7, #0]
 80055a0:	4604      	mov	r4, r0
 80055a2:	4620      	mov	r0, r4
 80055a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80055a6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80055aa:	81e3      	strh	r3, [r4, #14]
 80055ac:	2301      	movs	r3, #1
 80055ae:	81a3      	strh	r3, [r4, #12]
 80055b0:	6665      	str	r5, [r4, #100]	; 0x64
 80055b2:	6025      	str	r5, [r4, #0]
 80055b4:	60a5      	str	r5, [r4, #8]
 80055b6:	6065      	str	r5, [r4, #4]
 80055b8:	6125      	str	r5, [r4, #16]
 80055ba:	6165      	str	r5, [r4, #20]
 80055bc:	61a5      	str	r5, [r4, #24]
 80055be:	2208      	movs	r2, #8
 80055c0:	4629      	mov	r1, r5
 80055c2:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80055c6:	f7fd f98f 	bl	80028e8 <memset>
 80055ca:	6365      	str	r5, [r4, #52]	; 0x34
 80055cc:	63a5      	str	r5, [r4, #56]	; 0x38
 80055ce:	64a5      	str	r5, [r4, #72]	; 0x48
 80055d0:	64e5      	str	r5, [r4, #76]	; 0x4c
 80055d2:	e7e6      	b.n	80055a2 <__sfp+0x42>
 80055d4:	08006f8c 	.word	0x08006f8c

080055d8 <_fwalk_reent>:
 80055d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80055dc:	4680      	mov	r8, r0
 80055de:	4689      	mov	r9, r1
 80055e0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80055e4:	2600      	movs	r6, #0
 80055e6:	b914      	cbnz	r4, 80055ee <_fwalk_reent+0x16>
 80055e8:	4630      	mov	r0, r6
 80055ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80055ee:	68a5      	ldr	r5, [r4, #8]
 80055f0:	6867      	ldr	r7, [r4, #4]
 80055f2:	3f01      	subs	r7, #1
 80055f4:	d501      	bpl.n	80055fa <_fwalk_reent+0x22>
 80055f6:	6824      	ldr	r4, [r4, #0]
 80055f8:	e7f5      	b.n	80055e6 <_fwalk_reent+0xe>
 80055fa:	89ab      	ldrh	r3, [r5, #12]
 80055fc:	2b01      	cmp	r3, #1
 80055fe:	d907      	bls.n	8005610 <_fwalk_reent+0x38>
 8005600:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005604:	3301      	adds	r3, #1
 8005606:	d003      	beq.n	8005610 <_fwalk_reent+0x38>
 8005608:	4629      	mov	r1, r5
 800560a:	4640      	mov	r0, r8
 800560c:	47c8      	blx	r9
 800560e:	4306      	orrs	r6, r0
 8005610:	3568      	adds	r5, #104	; 0x68
 8005612:	e7ee      	b.n	80055f2 <_fwalk_reent+0x1a>

08005614 <rshift>:
 8005614:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005616:	6906      	ldr	r6, [r0, #16]
 8005618:	114b      	asrs	r3, r1, #5
 800561a:	42b3      	cmp	r3, r6
 800561c:	f100 0514 	add.w	r5, r0, #20
 8005620:	da2b      	bge.n	800567a <rshift+0x66>
 8005622:	f011 011f 	ands.w	r1, r1, #31
 8005626:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 800562a:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 800562e:	d108      	bne.n	8005642 <rshift+0x2e>
 8005630:	4629      	mov	r1, r5
 8005632:	42b2      	cmp	r2, r6
 8005634:	460b      	mov	r3, r1
 8005636:	d210      	bcs.n	800565a <rshift+0x46>
 8005638:	f852 3b04 	ldr.w	r3, [r2], #4
 800563c:	f841 3b04 	str.w	r3, [r1], #4
 8005640:	e7f7      	b.n	8005632 <rshift+0x1e>
 8005642:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
 8005646:	f1c1 0e20 	rsb	lr, r1, #32
 800564a:	3204      	adds	r2, #4
 800564c:	40cc      	lsrs	r4, r1
 800564e:	462b      	mov	r3, r5
 8005650:	42b2      	cmp	r2, r6
 8005652:	d308      	bcc.n	8005666 <rshift+0x52>
 8005654:	601c      	str	r4, [r3, #0]
 8005656:	b104      	cbz	r4, 800565a <rshift+0x46>
 8005658:	3304      	adds	r3, #4
 800565a:	1b5b      	subs	r3, r3, r5
 800565c:	109b      	asrs	r3, r3, #2
 800565e:	6103      	str	r3, [r0, #16]
 8005660:	b903      	cbnz	r3, 8005664 <rshift+0x50>
 8005662:	6143      	str	r3, [r0, #20]
 8005664:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005666:	6817      	ldr	r7, [r2, #0]
 8005668:	fa07 f70e 	lsl.w	r7, r7, lr
 800566c:	433c      	orrs	r4, r7
 800566e:	f843 4b04 	str.w	r4, [r3], #4
 8005672:	f852 4b04 	ldr.w	r4, [r2], #4
 8005676:	40cc      	lsrs	r4, r1
 8005678:	e7ea      	b.n	8005650 <rshift+0x3c>
 800567a:	462b      	mov	r3, r5
 800567c:	e7ed      	b.n	800565a <rshift+0x46>

0800567e <__hexdig_fun>:
 800567e:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8005682:	2b09      	cmp	r3, #9
 8005684:	d802      	bhi.n	800568c <__hexdig_fun+0xe>
 8005686:	3820      	subs	r0, #32
 8005688:	b2c0      	uxtb	r0, r0
 800568a:	4770      	bx	lr
 800568c:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8005690:	2b05      	cmp	r3, #5
 8005692:	d801      	bhi.n	8005698 <__hexdig_fun+0x1a>
 8005694:	3847      	subs	r0, #71	; 0x47
 8005696:	e7f7      	b.n	8005688 <__hexdig_fun+0xa>
 8005698:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800569c:	2b05      	cmp	r3, #5
 800569e:	d801      	bhi.n	80056a4 <__hexdig_fun+0x26>
 80056a0:	3827      	subs	r0, #39	; 0x27
 80056a2:	e7f1      	b.n	8005688 <__hexdig_fun+0xa>
 80056a4:	2000      	movs	r0, #0
 80056a6:	4770      	bx	lr

080056a8 <__gethex>:
 80056a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80056ac:	b08b      	sub	sp, #44	; 0x2c
 80056ae:	468a      	mov	sl, r1
 80056b0:	9002      	str	r0, [sp, #8]
 80056b2:	9816      	ldr	r0, [sp, #88]	; 0x58
 80056b4:	9306      	str	r3, [sp, #24]
 80056b6:	4690      	mov	r8, r2
 80056b8:	f000 facc 	bl	8005c54 <__localeconv_l>
 80056bc:	6803      	ldr	r3, [r0, #0]
 80056be:	9303      	str	r3, [sp, #12]
 80056c0:	4618      	mov	r0, r3
 80056c2:	f7fb f9a5 	bl	8000a10 <strlen>
 80056c6:	9b03      	ldr	r3, [sp, #12]
 80056c8:	9001      	str	r0, [sp, #4]
 80056ca:	4403      	add	r3, r0
 80056cc:	f04f 0b00 	mov.w	fp, #0
 80056d0:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80056d4:	9307      	str	r3, [sp, #28]
 80056d6:	f8da 3000 	ldr.w	r3, [sl]
 80056da:	3302      	adds	r3, #2
 80056dc:	461f      	mov	r7, r3
 80056de:	f813 0b01 	ldrb.w	r0, [r3], #1
 80056e2:	2830      	cmp	r0, #48	; 0x30
 80056e4:	d06c      	beq.n	80057c0 <__gethex+0x118>
 80056e6:	f7ff ffca 	bl	800567e <__hexdig_fun>
 80056ea:	4604      	mov	r4, r0
 80056ec:	2800      	cmp	r0, #0
 80056ee:	d16a      	bne.n	80057c6 <__gethex+0x11e>
 80056f0:	9a01      	ldr	r2, [sp, #4]
 80056f2:	9903      	ldr	r1, [sp, #12]
 80056f4:	4638      	mov	r0, r7
 80056f6:	f001 fa00 	bl	8006afa <strncmp>
 80056fa:	2800      	cmp	r0, #0
 80056fc:	d166      	bne.n	80057cc <__gethex+0x124>
 80056fe:	9b01      	ldr	r3, [sp, #4]
 8005700:	5cf8      	ldrb	r0, [r7, r3]
 8005702:	18fe      	adds	r6, r7, r3
 8005704:	f7ff ffbb 	bl	800567e <__hexdig_fun>
 8005708:	2800      	cmp	r0, #0
 800570a:	d062      	beq.n	80057d2 <__gethex+0x12a>
 800570c:	4633      	mov	r3, r6
 800570e:	7818      	ldrb	r0, [r3, #0]
 8005710:	2830      	cmp	r0, #48	; 0x30
 8005712:	461f      	mov	r7, r3
 8005714:	f103 0301 	add.w	r3, r3, #1
 8005718:	d0f9      	beq.n	800570e <__gethex+0x66>
 800571a:	f7ff ffb0 	bl	800567e <__hexdig_fun>
 800571e:	fab0 f580 	clz	r5, r0
 8005722:	096d      	lsrs	r5, r5, #5
 8005724:	4634      	mov	r4, r6
 8005726:	f04f 0b01 	mov.w	fp, #1
 800572a:	463a      	mov	r2, r7
 800572c:	4616      	mov	r6, r2
 800572e:	3201      	adds	r2, #1
 8005730:	7830      	ldrb	r0, [r6, #0]
 8005732:	f7ff ffa4 	bl	800567e <__hexdig_fun>
 8005736:	2800      	cmp	r0, #0
 8005738:	d1f8      	bne.n	800572c <__gethex+0x84>
 800573a:	9a01      	ldr	r2, [sp, #4]
 800573c:	9903      	ldr	r1, [sp, #12]
 800573e:	4630      	mov	r0, r6
 8005740:	f001 f9db 	bl	8006afa <strncmp>
 8005744:	b950      	cbnz	r0, 800575c <__gethex+0xb4>
 8005746:	b954      	cbnz	r4, 800575e <__gethex+0xb6>
 8005748:	9b01      	ldr	r3, [sp, #4]
 800574a:	18f4      	adds	r4, r6, r3
 800574c:	4622      	mov	r2, r4
 800574e:	4616      	mov	r6, r2
 8005750:	3201      	adds	r2, #1
 8005752:	7830      	ldrb	r0, [r6, #0]
 8005754:	f7ff ff93 	bl	800567e <__hexdig_fun>
 8005758:	2800      	cmp	r0, #0
 800575a:	d1f8      	bne.n	800574e <__gethex+0xa6>
 800575c:	b10c      	cbz	r4, 8005762 <__gethex+0xba>
 800575e:	1ba4      	subs	r4, r4, r6
 8005760:	00a4      	lsls	r4, r4, #2
 8005762:	7833      	ldrb	r3, [r6, #0]
 8005764:	2b50      	cmp	r3, #80	; 0x50
 8005766:	d001      	beq.n	800576c <__gethex+0xc4>
 8005768:	2b70      	cmp	r3, #112	; 0x70
 800576a:	d140      	bne.n	80057ee <__gethex+0x146>
 800576c:	7873      	ldrb	r3, [r6, #1]
 800576e:	2b2b      	cmp	r3, #43	; 0x2b
 8005770:	d035      	beq.n	80057de <__gethex+0x136>
 8005772:	2b2d      	cmp	r3, #45	; 0x2d
 8005774:	d02f      	beq.n	80057d6 <__gethex+0x12e>
 8005776:	1c71      	adds	r1, r6, #1
 8005778:	f04f 0900 	mov.w	r9, #0
 800577c:	7808      	ldrb	r0, [r1, #0]
 800577e:	f7ff ff7e 	bl	800567e <__hexdig_fun>
 8005782:	1e43      	subs	r3, r0, #1
 8005784:	b2db      	uxtb	r3, r3
 8005786:	2b18      	cmp	r3, #24
 8005788:	d831      	bhi.n	80057ee <__gethex+0x146>
 800578a:	f1a0 0210 	sub.w	r2, r0, #16
 800578e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005792:	f7ff ff74 	bl	800567e <__hexdig_fun>
 8005796:	1e43      	subs	r3, r0, #1
 8005798:	b2db      	uxtb	r3, r3
 800579a:	2b18      	cmp	r3, #24
 800579c:	d922      	bls.n	80057e4 <__gethex+0x13c>
 800579e:	f1b9 0f00 	cmp.w	r9, #0
 80057a2:	d000      	beq.n	80057a6 <__gethex+0xfe>
 80057a4:	4252      	negs	r2, r2
 80057a6:	4414      	add	r4, r2
 80057a8:	f8ca 1000 	str.w	r1, [sl]
 80057ac:	b30d      	cbz	r5, 80057f2 <__gethex+0x14a>
 80057ae:	f1bb 0f00 	cmp.w	fp, #0
 80057b2:	bf14      	ite	ne
 80057b4:	2700      	movne	r7, #0
 80057b6:	2706      	moveq	r7, #6
 80057b8:	4638      	mov	r0, r7
 80057ba:	b00b      	add	sp, #44	; 0x2c
 80057bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80057c0:	f10b 0b01 	add.w	fp, fp, #1
 80057c4:	e78a      	b.n	80056dc <__gethex+0x34>
 80057c6:	2500      	movs	r5, #0
 80057c8:	462c      	mov	r4, r5
 80057ca:	e7ae      	b.n	800572a <__gethex+0x82>
 80057cc:	463e      	mov	r6, r7
 80057ce:	2501      	movs	r5, #1
 80057d0:	e7c7      	b.n	8005762 <__gethex+0xba>
 80057d2:	4604      	mov	r4, r0
 80057d4:	e7fb      	b.n	80057ce <__gethex+0x126>
 80057d6:	f04f 0901 	mov.w	r9, #1
 80057da:	1cb1      	adds	r1, r6, #2
 80057dc:	e7ce      	b.n	800577c <__gethex+0xd4>
 80057de:	f04f 0900 	mov.w	r9, #0
 80057e2:	e7fa      	b.n	80057da <__gethex+0x132>
 80057e4:	230a      	movs	r3, #10
 80057e6:	fb03 0202 	mla	r2, r3, r2, r0
 80057ea:	3a10      	subs	r2, #16
 80057ec:	e7cf      	b.n	800578e <__gethex+0xe6>
 80057ee:	4631      	mov	r1, r6
 80057f0:	e7da      	b.n	80057a8 <__gethex+0x100>
 80057f2:	1bf3      	subs	r3, r6, r7
 80057f4:	3b01      	subs	r3, #1
 80057f6:	4629      	mov	r1, r5
 80057f8:	2b07      	cmp	r3, #7
 80057fa:	dc49      	bgt.n	8005890 <__gethex+0x1e8>
 80057fc:	9802      	ldr	r0, [sp, #8]
 80057fe:	f000 fabc 	bl	8005d7a <_Balloc>
 8005802:	9b01      	ldr	r3, [sp, #4]
 8005804:	f100 0914 	add.w	r9, r0, #20
 8005808:	f04f 0b00 	mov.w	fp, #0
 800580c:	f1c3 0301 	rsb	r3, r3, #1
 8005810:	4605      	mov	r5, r0
 8005812:	f8cd 9010 	str.w	r9, [sp, #16]
 8005816:	46da      	mov	sl, fp
 8005818:	9308      	str	r3, [sp, #32]
 800581a:	42b7      	cmp	r7, r6
 800581c:	d33b      	bcc.n	8005896 <__gethex+0x1ee>
 800581e:	9804      	ldr	r0, [sp, #16]
 8005820:	f840 ab04 	str.w	sl, [r0], #4
 8005824:	eba0 0009 	sub.w	r0, r0, r9
 8005828:	1080      	asrs	r0, r0, #2
 800582a:	6128      	str	r0, [r5, #16]
 800582c:	0147      	lsls	r7, r0, #5
 800582e:	4650      	mov	r0, sl
 8005830:	f000 fb67 	bl	8005f02 <__hi0bits>
 8005834:	f8d8 6000 	ldr.w	r6, [r8]
 8005838:	1a3f      	subs	r7, r7, r0
 800583a:	42b7      	cmp	r7, r6
 800583c:	dd64      	ble.n	8005908 <__gethex+0x260>
 800583e:	1bbf      	subs	r7, r7, r6
 8005840:	4639      	mov	r1, r7
 8005842:	4628      	mov	r0, r5
 8005844:	f000 fe65 	bl	8006512 <__any_on>
 8005848:	4682      	mov	sl, r0
 800584a:	b178      	cbz	r0, 800586c <__gethex+0x1c4>
 800584c:	1e7b      	subs	r3, r7, #1
 800584e:	1159      	asrs	r1, r3, #5
 8005850:	f003 021f 	and.w	r2, r3, #31
 8005854:	f04f 0a01 	mov.w	sl, #1
 8005858:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800585c:	fa0a f202 	lsl.w	r2, sl, r2
 8005860:	420a      	tst	r2, r1
 8005862:	d003      	beq.n	800586c <__gethex+0x1c4>
 8005864:	4553      	cmp	r3, sl
 8005866:	dc46      	bgt.n	80058f6 <__gethex+0x24e>
 8005868:	f04f 0a02 	mov.w	sl, #2
 800586c:	4639      	mov	r1, r7
 800586e:	4628      	mov	r0, r5
 8005870:	f7ff fed0 	bl	8005614 <rshift>
 8005874:	443c      	add	r4, r7
 8005876:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800587a:	429c      	cmp	r4, r3
 800587c:	dd52      	ble.n	8005924 <__gethex+0x27c>
 800587e:	4629      	mov	r1, r5
 8005880:	9802      	ldr	r0, [sp, #8]
 8005882:	f000 faae 	bl	8005de2 <_Bfree>
 8005886:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005888:	2300      	movs	r3, #0
 800588a:	6013      	str	r3, [r2, #0]
 800588c:	27a3      	movs	r7, #163	; 0xa3
 800588e:	e793      	b.n	80057b8 <__gethex+0x110>
 8005890:	3101      	adds	r1, #1
 8005892:	105b      	asrs	r3, r3, #1
 8005894:	e7b0      	b.n	80057f8 <__gethex+0x150>
 8005896:	1e73      	subs	r3, r6, #1
 8005898:	9305      	str	r3, [sp, #20]
 800589a:	9a07      	ldr	r2, [sp, #28]
 800589c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80058a0:	4293      	cmp	r3, r2
 80058a2:	d018      	beq.n	80058d6 <__gethex+0x22e>
 80058a4:	f1bb 0f20 	cmp.w	fp, #32
 80058a8:	d107      	bne.n	80058ba <__gethex+0x212>
 80058aa:	9b04      	ldr	r3, [sp, #16]
 80058ac:	f8c3 a000 	str.w	sl, [r3]
 80058b0:	3304      	adds	r3, #4
 80058b2:	f04f 0a00 	mov.w	sl, #0
 80058b6:	9304      	str	r3, [sp, #16]
 80058b8:	46d3      	mov	fp, sl
 80058ba:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80058be:	f7ff fede 	bl	800567e <__hexdig_fun>
 80058c2:	f000 000f 	and.w	r0, r0, #15
 80058c6:	fa00 f00b 	lsl.w	r0, r0, fp
 80058ca:	ea4a 0a00 	orr.w	sl, sl, r0
 80058ce:	f10b 0b04 	add.w	fp, fp, #4
 80058d2:	9b05      	ldr	r3, [sp, #20]
 80058d4:	e00d      	b.n	80058f2 <__gethex+0x24a>
 80058d6:	9b05      	ldr	r3, [sp, #20]
 80058d8:	9a08      	ldr	r2, [sp, #32]
 80058da:	4413      	add	r3, r2
 80058dc:	429f      	cmp	r7, r3
 80058de:	d8e1      	bhi.n	80058a4 <__gethex+0x1fc>
 80058e0:	4618      	mov	r0, r3
 80058e2:	9a01      	ldr	r2, [sp, #4]
 80058e4:	9903      	ldr	r1, [sp, #12]
 80058e6:	9309      	str	r3, [sp, #36]	; 0x24
 80058e8:	f001 f907 	bl	8006afa <strncmp>
 80058ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80058ee:	2800      	cmp	r0, #0
 80058f0:	d1d8      	bne.n	80058a4 <__gethex+0x1fc>
 80058f2:	461e      	mov	r6, r3
 80058f4:	e791      	b.n	800581a <__gethex+0x172>
 80058f6:	1eb9      	subs	r1, r7, #2
 80058f8:	4628      	mov	r0, r5
 80058fa:	f000 fe0a 	bl	8006512 <__any_on>
 80058fe:	2800      	cmp	r0, #0
 8005900:	d0b2      	beq.n	8005868 <__gethex+0x1c0>
 8005902:	f04f 0a03 	mov.w	sl, #3
 8005906:	e7b1      	b.n	800586c <__gethex+0x1c4>
 8005908:	da09      	bge.n	800591e <__gethex+0x276>
 800590a:	1bf7      	subs	r7, r6, r7
 800590c:	4629      	mov	r1, r5
 800590e:	463a      	mov	r2, r7
 8005910:	9802      	ldr	r0, [sp, #8]
 8005912:	f000 fc29 	bl	8006168 <__lshift>
 8005916:	1be4      	subs	r4, r4, r7
 8005918:	4605      	mov	r5, r0
 800591a:	f100 0914 	add.w	r9, r0, #20
 800591e:	f04f 0a00 	mov.w	sl, #0
 8005922:	e7a8      	b.n	8005876 <__gethex+0x1ce>
 8005924:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8005928:	4284      	cmp	r4, r0
 800592a:	da6a      	bge.n	8005a02 <__gethex+0x35a>
 800592c:	1b04      	subs	r4, r0, r4
 800592e:	42a6      	cmp	r6, r4
 8005930:	dc2e      	bgt.n	8005990 <__gethex+0x2e8>
 8005932:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005936:	2b02      	cmp	r3, #2
 8005938:	d022      	beq.n	8005980 <__gethex+0x2d8>
 800593a:	2b03      	cmp	r3, #3
 800593c:	d024      	beq.n	8005988 <__gethex+0x2e0>
 800593e:	2b01      	cmp	r3, #1
 8005940:	d115      	bne.n	800596e <__gethex+0x2c6>
 8005942:	42a6      	cmp	r6, r4
 8005944:	d113      	bne.n	800596e <__gethex+0x2c6>
 8005946:	2e01      	cmp	r6, #1
 8005948:	dc0b      	bgt.n	8005962 <__gethex+0x2ba>
 800594a:	9a06      	ldr	r2, [sp, #24]
 800594c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8005950:	6013      	str	r3, [r2, #0]
 8005952:	2301      	movs	r3, #1
 8005954:	612b      	str	r3, [r5, #16]
 8005956:	f8c9 3000 	str.w	r3, [r9]
 800595a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800595c:	2762      	movs	r7, #98	; 0x62
 800595e:	601d      	str	r5, [r3, #0]
 8005960:	e72a      	b.n	80057b8 <__gethex+0x110>
 8005962:	1e71      	subs	r1, r6, #1
 8005964:	4628      	mov	r0, r5
 8005966:	f000 fdd4 	bl	8006512 <__any_on>
 800596a:	2800      	cmp	r0, #0
 800596c:	d1ed      	bne.n	800594a <__gethex+0x2a2>
 800596e:	4629      	mov	r1, r5
 8005970:	9802      	ldr	r0, [sp, #8]
 8005972:	f000 fa36 	bl	8005de2 <_Bfree>
 8005976:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005978:	2300      	movs	r3, #0
 800597a:	6013      	str	r3, [r2, #0]
 800597c:	2750      	movs	r7, #80	; 0x50
 800597e:	e71b      	b.n	80057b8 <__gethex+0x110>
 8005980:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005982:	2b00      	cmp	r3, #0
 8005984:	d0e1      	beq.n	800594a <__gethex+0x2a2>
 8005986:	e7f2      	b.n	800596e <__gethex+0x2c6>
 8005988:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800598a:	2b00      	cmp	r3, #0
 800598c:	d1dd      	bne.n	800594a <__gethex+0x2a2>
 800598e:	e7ee      	b.n	800596e <__gethex+0x2c6>
 8005990:	1e67      	subs	r7, r4, #1
 8005992:	f1ba 0f00 	cmp.w	sl, #0
 8005996:	d131      	bne.n	80059fc <__gethex+0x354>
 8005998:	b127      	cbz	r7, 80059a4 <__gethex+0x2fc>
 800599a:	4639      	mov	r1, r7
 800599c:	4628      	mov	r0, r5
 800599e:	f000 fdb8 	bl	8006512 <__any_on>
 80059a2:	4682      	mov	sl, r0
 80059a4:	117a      	asrs	r2, r7, #5
 80059a6:	2301      	movs	r3, #1
 80059a8:	f007 071f 	and.w	r7, r7, #31
 80059ac:	fa03 f707 	lsl.w	r7, r3, r7
 80059b0:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
 80059b4:	4621      	mov	r1, r4
 80059b6:	421f      	tst	r7, r3
 80059b8:	4628      	mov	r0, r5
 80059ba:	bf18      	it	ne
 80059bc:	f04a 0a02 	orrne.w	sl, sl, #2
 80059c0:	1b36      	subs	r6, r6, r4
 80059c2:	f7ff fe27 	bl	8005614 <rshift>
 80059c6:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80059ca:	2702      	movs	r7, #2
 80059cc:	f1ba 0f00 	cmp.w	sl, #0
 80059d0:	d045      	beq.n	8005a5e <__gethex+0x3b6>
 80059d2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80059d6:	2b02      	cmp	r3, #2
 80059d8:	d015      	beq.n	8005a06 <__gethex+0x35e>
 80059da:	2b03      	cmp	r3, #3
 80059dc:	d017      	beq.n	8005a0e <__gethex+0x366>
 80059de:	2b01      	cmp	r3, #1
 80059e0:	d109      	bne.n	80059f6 <__gethex+0x34e>
 80059e2:	f01a 0f02 	tst.w	sl, #2
 80059e6:	d006      	beq.n	80059f6 <__gethex+0x34e>
 80059e8:	f8d9 3000 	ldr.w	r3, [r9]
 80059ec:	ea4a 0a03 	orr.w	sl, sl, r3
 80059f0:	f01a 0f01 	tst.w	sl, #1
 80059f4:	d10e      	bne.n	8005a14 <__gethex+0x36c>
 80059f6:	f047 0710 	orr.w	r7, r7, #16
 80059fa:	e030      	b.n	8005a5e <__gethex+0x3b6>
 80059fc:	f04f 0a01 	mov.w	sl, #1
 8005a00:	e7d0      	b.n	80059a4 <__gethex+0x2fc>
 8005a02:	2701      	movs	r7, #1
 8005a04:	e7e2      	b.n	80059cc <__gethex+0x324>
 8005a06:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005a08:	f1c3 0301 	rsb	r3, r3, #1
 8005a0c:	9315      	str	r3, [sp, #84]	; 0x54
 8005a0e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005a10:	2b00      	cmp	r3, #0
 8005a12:	d0f0      	beq.n	80059f6 <__gethex+0x34e>
 8005a14:	f8d5 9010 	ldr.w	r9, [r5, #16]
 8005a18:	f105 0314 	add.w	r3, r5, #20
 8005a1c:	ea4f 0a89 	mov.w	sl, r9, lsl #2
 8005a20:	eb03 010a 	add.w	r1, r3, sl
 8005a24:	2000      	movs	r0, #0
 8005a26:	681a      	ldr	r2, [r3, #0]
 8005a28:	f1b2 3fff 	cmp.w	r2, #4294967295
 8005a2c:	d01c      	beq.n	8005a68 <__gethex+0x3c0>
 8005a2e:	3201      	adds	r2, #1
 8005a30:	601a      	str	r2, [r3, #0]
 8005a32:	2f02      	cmp	r7, #2
 8005a34:	f105 0314 	add.w	r3, r5, #20
 8005a38:	d138      	bne.n	8005aac <__gethex+0x404>
 8005a3a:	f8d8 2000 	ldr.w	r2, [r8]
 8005a3e:	3a01      	subs	r2, #1
 8005a40:	4296      	cmp	r6, r2
 8005a42:	d10a      	bne.n	8005a5a <__gethex+0x3b2>
 8005a44:	1171      	asrs	r1, r6, #5
 8005a46:	2201      	movs	r2, #1
 8005a48:	f006 061f 	and.w	r6, r6, #31
 8005a4c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005a50:	fa02 f606 	lsl.w	r6, r2, r6
 8005a54:	421e      	tst	r6, r3
 8005a56:	bf18      	it	ne
 8005a58:	4617      	movne	r7, r2
 8005a5a:	f047 0720 	orr.w	r7, r7, #32
 8005a5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005a60:	601d      	str	r5, [r3, #0]
 8005a62:	9b06      	ldr	r3, [sp, #24]
 8005a64:	601c      	str	r4, [r3, #0]
 8005a66:	e6a7      	b.n	80057b8 <__gethex+0x110>
 8005a68:	f843 0b04 	str.w	r0, [r3], #4
 8005a6c:	4299      	cmp	r1, r3
 8005a6e:	d8da      	bhi.n	8005a26 <__gethex+0x37e>
 8005a70:	68ab      	ldr	r3, [r5, #8]
 8005a72:	4599      	cmp	r9, r3
 8005a74:	db12      	blt.n	8005a9c <__gethex+0x3f4>
 8005a76:	6869      	ldr	r1, [r5, #4]
 8005a78:	9802      	ldr	r0, [sp, #8]
 8005a7a:	3101      	adds	r1, #1
 8005a7c:	f000 f97d 	bl	8005d7a <_Balloc>
 8005a80:	692a      	ldr	r2, [r5, #16]
 8005a82:	3202      	adds	r2, #2
 8005a84:	f105 010c 	add.w	r1, r5, #12
 8005a88:	4683      	mov	fp, r0
 8005a8a:	0092      	lsls	r2, r2, #2
 8005a8c:	300c      	adds	r0, #12
 8005a8e:	f000 f967 	bl	8005d60 <memcpy>
 8005a92:	4629      	mov	r1, r5
 8005a94:	9802      	ldr	r0, [sp, #8]
 8005a96:	f000 f9a4 	bl	8005de2 <_Bfree>
 8005a9a:	465d      	mov	r5, fp
 8005a9c:	692b      	ldr	r3, [r5, #16]
 8005a9e:	1c5a      	adds	r2, r3, #1
 8005aa0:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8005aa4:	612a      	str	r2, [r5, #16]
 8005aa6:	2201      	movs	r2, #1
 8005aa8:	615a      	str	r2, [r3, #20]
 8005aaa:	e7c2      	b.n	8005a32 <__gethex+0x38a>
 8005aac:	692a      	ldr	r2, [r5, #16]
 8005aae:	4591      	cmp	r9, r2
 8005ab0:	da0b      	bge.n	8005aca <__gethex+0x422>
 8005ab2:	2101      	movs	r1, #1
 8005ab4:	4628      	mov	r0, r5
 8005ab6:	f7ff fdad 	bl	8005614 <rshift>
 8005aba:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005abe:	3401      	adds	r4, #1
 8005ac0:	429c      	cmp	r4, r3
 8005ac2:	f73f aedc 	bgt.w	800587e <__gethex+0x1d6>
 8005ac6:	2701      	movs	r7, #1
 8005ac8:	e7c7      	b.n	8005a5a <__gethex+0x3b2>
 8005aca:	f016 061f 	ands.w	r6, r6, #31
 8005ace:	d0fa      	beq.n	8005ac6 <__gethex+0x41e>
 8005ad0:	449a      	add	sl, r3
 8005ad2:	f1c6 0620 	rsb	r6, r6, #32
 8005ad6:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8005ada:	f000 fa12 	bl	8005f02 <__hi0bits>
 8005ade:	42b0      	cmp	r0, r6
 8005ae0:	dbe7      	blt.n	8005ab2 <__gethex+0x40a>
 8005ae2:	e7f0      	b.n	8005ac6 <__gethex+0x41e>

08005ae4 <L_shift>:
 8005ae4:	f1c2 0208 	rsb	r2, r2, #8
 8005ae8:	0092      	lsls	r2, r2, #2
 8005aea:	b570      	push	{r4, r5, r6, lr}
 8005aec:	f1c2 0620 	rsb	r6, r2, #32
 8005af0:	6843      	ldr	r3, [r0, #4]
 8005af2:	6804      	ldr	r4, [r0, #0]
 8005af4:	fa03 f506 	lsl.w	r5, r3, r6
 8005af8:	432c      	orrs	r4, r5
 8005afa:	40d3      	lsrs	r3, r2
 8005afc:	6004      	str	r4, [r0, #0]
 8005afe:	f840 3f04 	str.w	r3, [r0, #4]!
 8005b02:	4288      	cmp	r0, r1
 8005b04:	d3f4      	bcc.n	8005af0 <L_shift+0xc>
 8005b06:	bd70      	pop	{r4, r5, r6, pc}

08005b08 <__match>:
 8005b08:	b530      	push	{r4, r5, lr}
 8005b0a:	6803      	ldr	r3, [r0, #0]
 8005b0c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005b10:	3301      	adds	r3, #1
 8005b12:	b914      	cbnz	r4, 8005b1a <__match+0x12>
 8005b14:	6003      	str	r3, [r0, #0]
 8005b16:	2001      	movs	r0, #1
 8005b18:	bd30      	pop	{r4, r5, pc}
 8005b1a:	781a      	ldrb	r2, [r3, #0]
 8005b1c:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8005b20:	2d19      	cmp	r5, #25
 8005b22:	bf98      	it	ls
 8005b24:	3220      	addls	r2, #32
 8005b26:	42a2      	cmp	r2, r4
 8005b28:	d0f0      	beq.n	8005b0c <__match+0x4>
 8005b2a:	2000      	movs	r0, #0
 8005b2c:	bd30      	pop	{r4, r5, pc}

08005b2e <__hexnan>:
 8005b2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b32:	680b      	ldr	r3, [r1, #0]
 8005b34:	6801      	ldr	r1, [r0, #0]
 8005b36:	115f      	asrs	r7, r3, #5
 8005b38:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 8005b3c:	f013 031f 	ands.w	r3, r3, #31
 8005b40:	b087      	sub	sp, #28
 8005b42:	bf18      	it	ne
 8005b44:	3704      	addne	r7, #4
 8005b46:	2500      	movs	r5, #0
 8005b48:	1f3e      	subs	r6, r7, #4
 8005b4a:	4682      	mov	sl, r0
 8005b4c:	4690      	mov	r8, r2
 8005b4e:	9302      	str	r3, [sp, #8]
 8005b50:	f847 5c04 	str.w	r5, [r7, #-4]
 8005b54:	46b1      	mov	r9, r6
 8005b56:	4634      	mov	r4, r6
 8005b58:	9501      	str	r5, [sp, #4]
 8005b5a:	46ab      	mov	fp, r5
 8005b5c:	784a      	ldrb	r2, [r1, #1]
 8005b5e:	1c4b      	adds	r3, r1, #1
 8005b60:	9303      	str	r3, [sp, #12]
 8005b62:	b342      	cbz	r2, 8005bb6 <__hexnan+0x88>
 8005b64:	4610      	mov	r0, r2
 8005b66:	9105      	str	r1, [sp, #20]
 8005b68:	9204      	str	r2, [sp, #16]
 8005b6a:	f7ff fd88 	bl	800567e <__hexdig_fun>
 8005b6e:	2800      	cmp	r0, #0
 8005b70:	d143      	bne.n	8005bfa <__hexnan+0xcc>
 8005b72:	9a04      	ldr	r2, [sp, #16]
 8005b74:	9905      	ldr	r1, [sp, #20]
 8005b76:	2a20      	cmp	r2, #32
 8005b78:	d818      	bhi.n	8005bac <__hexnan+0x7e>
 8005b7a:	9b01      	ldr	r3, [sp, #4]
 8005b7c:	459b      	cmp	fp, r3
 8005b7e:	dd13      	ble.n	8005ba8 <__hexnan+0x7a>
 8005b80:	454c      	cmp	r4, r9
 8005b82:	d206      	bcs.n	8005b92 <__hexnan+0x64>
 8005b84:	2d07      	cmp	r5, #7
 8005b86:	dc04      	bgt.n	8005b92 <__hexnan+0x64>
 8005b88:	462a      	mov	r2, r5
 8005b8a:	4649      	mov	r1, r9
 8005b8c:	4620      	mov	r0, r4
 8005b8e:	f7ff ffa9 	bl	8005ae4 <L_shift>
 8005b92:	4544      	cmp	r4, r8
 8005b94:	d944      	bls.n	8005c20 <__hexnan+0xf2>
 8005b96:	2300      	movs	r3, #0
 8005b98:	f1a4 0904 	sub.w	r9, r4, #4
 8005b9c:	f844 3c04 	str.w	r3, [r4, #-4]
 8005ba0:	f8cd b004 	str.w	fp, [sp, #4]
 8005ba4:	464c      	mov	r4, r9
 8005ba6:	461d      	mov	r5, r3
 8005ba8:	9903      	ldr	r1, [sp, #12]
 8005baa:	e7d7      	b.n	8005b5c <__hexnan+0x2e>
 8005bac:	2a29      	cmp	r2, #41	; 0x29
 8005bae:	d14a      	bne.n	8005c46 <__hexnan+0x118>
 8005bb0:	3102      	adds	r1, #2
 8005bb2:	f8ca 1000 	str.w	r1, [sl]
 8005bb6:	f1bb 0f00 	cmp.w	fp, #0
 8005bba:	d044      	beq.n	8005c46 <__hexnan+0x118>
 8005bbc:	454c      	cmp	r4, r9
 8005bbe:	d206      	bcs.n	8005bce <__hexnan+0xa0>
 8005bc0:	2d07      	cmp	r5, #7
 8005bc2:	dc04      	bgt.n	8005bce <__hexnan+0xa0>
 8005bc4:	462a      	mov	r2, r5
 8005bc6:	4649      	mov	r1, r9
 8005bc8:	4620      	mov	r0, r4
 8005bca:	f7ff ff8b 	bl	8005ae4 <L_shift>
 8005bce:	4544      	cmp	r4, r8
 8005bd0:	d928      	bls.n	8005c24 <__hexnan+0xf6>
 8005bd2:	4643      	mov	r3, r8
 8005bd4:	f854 2b04 	ldr.w	r2, [r4], #4
 8005bd8:	f843 2b04 	str.w	r2, [r3], #4
 8005bdc:	42a6      	cmp	r6, r4
 8005bde:	d2f9      	bcs.n	8005bd4 <__hexnan+0xa6>
 8005be0:	2200      	movs	r2, #0
 8005be2:	f843 2b04 	str.w	r2, [r3], #4
 8005be6:	429e      	cmp	r6, r3
 8005be8:	d2fb      	bcs.n	8005be2 <__hexnan+0xb4>
 8005bea:	6833      	ldr	r3, [r6, #0]
 8005bec:	b91b      	cbnz	r3, 8005bf6 <__hexnan+0xc8>
 8005bee:	4546      	cmp	r6, r8
 8005bf0:	d127      	bne.n	8005c42 <__hexnan+0x114>
 8005bf2:	2301      	movs	r3, #1
 8005bf4:	6033      	str	r3, [r6, #0]
 8005bf6:	2005      	movs	r0, #5
 8005bf8:	e026      	b.n	8005c48 <__hexnan+0x11a>
 8005bfa:	3501      	adds	r5, #1
 8005bfc:	2d08      	cmp	r5, #8
 8005bfe:	f10b 0b01 	add.w	fp, fp, #1
 8005c02:	dd06      	ble.n	8005c12 <__hexnan+0xe4>
 8005c04:	4544      	cmp	r4, r8
 8005c06:	d9cf      	bls.n	8005ba8 <__hexnan+0x7a>
 8005c08:	2300      	movs	r3, #0
 8005c0a:	f844 3c04 	str.w	r3, [r4, #-4]
 8005c0e:	2501      	movs	r5, #1
 8005c10:	3c04      	subs	r4, #4
 8005c12:	6822      	ldr	r2, [r4, #0]
 8005c14:	f000 000f 	and.w	r0, r0, #15
 8005c18:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8005c1c:	6020      	str	r0, [r4, #0]
 8005c1e:	e7c3      	b.n	8005ba8 <__hexnan+0x7a>
 8005c20:	2508      	movs	r5, #8
 8005c22:	e7c1      	b.n	8005ba8 <__hexnan+0x7a>
 8005c24:	9b02      	ldr	r3, [sp, #8]
 8005c26:	2b00      	cmp	r3, #0
 8005c28:	d0df      	beq.n	8005bea <__hexnan+0xbc>
 8005c2a:	f04f 32ff 	mov.w	r2, #4294967295
 8005c2e:	f1c3 0320 	rsb	r3, r3, #32
 8005c32:	fa22 f303 	lsr.w	r3, r2, r3
 8005c36:	f857 2c04 	ldr.w	r2, [r7, #-4]
 8005c3a:	401a      	ands	r2, r3
 8005c3c:	f847 2c04 	str.w	r2, [r7, #-4]
 8005c40:	e7d3      	b.n	8005bea <__hexnan+0xbc>
 8005c42:	3e04      	subs	r6, #4
 8005c44:	e7d1      	b.n	8005bea <__hexnan+0xbc>
 8005c46:	2004      	movs	r0, #4
 8005c48:	b007      	add	sp, #28
 8005c4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005c4e <__locale_ctype_ptr_l>:
 8005c4e:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 8005c52:	4770      	bx	lr

08005c54 <__localeconv_l>:
 8005c54:	30f0      	adds	r0, #240	; 0xf0
 8005c56:	4770      	bx	lr

08005c58 <_localeconv_r>:
 8005c58:	4b04      	ldr	r3, [pc, #16]	; (8005c6c <_localeconv_r+0x14>)
 8005c5a:	681b      	ldr	r3, [r3, #0]
 8005c5c:	6a18      	ldr	r0, [r3, #32]
 8005c5e:	4b04      	ldr	r3, [pc, #16]	; (8005c70 <_localeconv_r+0x18>)
 8005c60:	2800      	cmp	r0, #0
 8005c62:	bf08      	it	eq
 8005c64:	4618      	moveq	r0, r3
 8005c66:	30f0      	adds	r0, #240	; 0xf0
 8005c68:	4770      	bx	lr
 8005c6a:	bf00      	nop
 8005c6c:	20000238 	.word	0x20000238
 8005c70:	2000029c 	.word	0x2000029c

08005c74 <__swhatbuf_r>:
 8005c74:	b570      	push	{r4, r5, r6, lr}
 8005c76:	460e      	mov	r6, r1
 8005c78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c7c:	2900      	cmp	r1, #0
 8005c7e:	b090      	sub	sp, #64	; 0x40
 8005c80:	4614      	mov	r4, r2
 8005c82:	461d      	mov	r5, r3
 8005c84:	da07      	bge.n	8005c96 <__swhatbuf_r+0x22>
 8005c86:	2300      	movs	r3, #0
 8005c88:	602b      	str	r3, [r5, #0]
 8005c8a:	89b3      	ldrh	r3, [r6, #12]
 8005c8c:	061a      	lsls	r2, r3, #24
 8005c8e:	d410      	bmi.n	8005cb2 <__swhatbuf_r+0x3e>
 8005c90:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005c94:	e00e      	b.n	8005cb4 <__swhatbuf_r+0x40>
 8005c96:	aa01      	add	r2, sp, #4
 8005c98:	f001 f832 	bl	8006d00 <_fstat_r>
 8005c9c:	2800      	cmp	r0, #0
 8005c9e:	dbf2      	blt.n	8005c86 <__swhatbuf_r+0x12>
 8005ca0:	9a02      	ldr	r2, [sp, #8]
 8005ca2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8005ca6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8005caa:	425a      	negs	r2, r3
 8005cac:	415a      	adcs	r2, r3
 8005cae:	602a      	str	r2, [r5, #0]
 8005cb0:	e7ee      	b.n	8005c90 <__swhatbuf_r+0x1c>
 8005cb2:	2340      	movs	r3, #64	; 0x40
 8005cb4:	2000      	movs	r0, #0
 8005cb6:	6023      	str	r3, [r4, #0]
 8005cb8:	b010      	add	sp, #64	; 0x40
 8005cba:	bd70      	pop	{r4, r5, r6, pc}

08005cbc <__smakebuf_r>:
 8005cbc:	898b      	ldrh	r3, [r1, #12]
 8005cbe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005cc0:	079d      	lsls	r5, r3, #30
 8005cc2:	4606      	mov	r6, r0
 8005cc4:	460c      	mov	r4, r1
 8005cc6:	d507      	bpl.n	8005cd8 <__smakebuf_r+0x1c>
 8005cc8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8005ccc:	6023      	str	r3, [r4, #0]
 8005cce:	6123      	str	r3, [r4, #16]
 8005cd0:	2301      	movs	r3, #1
 8005cd2:	6163      	str	r3, [r4, #20]
 8005cd4:	b002      	add	sp, #8
 8005cd6:	bd70      	pop	{r4, r5, r6, pc}
 8005cd8:	ab01      	add	r3, sp, #4
 8005cda:	466a      	mov	r2, sp
 8005cdc:	f7ff ffca 	bl	8005c74 <__swhatbuf_r>
 8005ce0:	9900      	ldr	r1, [sp, #0]
 8005ce2:	4605      	mov	r5, r0
 8005ce4:	4630      	mov	r0, r6
 8005ce6:	f7fc fe63 	bl	80029b0 <_malloc_r>
 8005cea:	b948      	cbnz	r0, 8005d00 <__smakebuf_r+0x44>
 8005cec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005cf0:	059a      	lsls	r2, r3, #22
 8005cf2:	d4ef      	bmi.n	8005cd4 <__smakebuf_r+0x18>
 8005cf4:	f023 0303 	bic.w	r3, r3, #3
 8005cf8:	f043 0302 	orr.w	r3, r3, #2
 8005cfc:	81a3      	strh	r3, [r4, #12]
 8005cfe:	e7e3      	b.n	8005cc8 <__smakebuf_r+0xc>
 8005d00:	4b0d      	ldr	r3, [pc, #52]	; (8005d38 <__smakebuf_r+0x7c>)
 8005d02:	62b3      	str	r3, [r6, #40]	; 0x28
 8005d04:	89a3      	ldrh	r3, [r4, #12]
 8005d06:	6020      	str	r0, [r4, #0]
 8005d08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005d0c:	81a3      	strh	r3, [r4, #12]
 8005d0e:	9b00      	ldr	r3, [sp, #0]
 8005d10:	6163      	str	r3, [r4, #20]
 8005d12:	9b01      	ldr	r3, [sp, #4]
 8005d14:	6120      	str	r0, [r4, #16]
 8005d16:	b15b      	cbz	r3, 8005d30 <__smakebuf_r+0x74>
 8005d18:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005d1c:	4630      	mov	r0, r6
 8005d1e:	f001 f801 	bl	8006d24 <_isatty_r>
 8005d22:	b128      	cbz	r0, 8005d30 <__smakebuf_r+0x74>
 8005d24:	89a3      	ldrh	r3, [r4, #12]
 8005d26:	f023 0303 	bic.w	r3, r3, #3
 8005d2a:	f043 0301 	orr.w	r3, r3, #1
 8005d2e:	81a3      	strh	r3, [r4, #12]
 8005d30:	89a3      	ldrh	r3, [r4, #12]
 8005d32:	431d      	orrs	r5, r3
 8005d34:	81a5      	strh	r5, [r4, #12]
 8005d36:	e7cd      	b.n	8005cd4 <__smakebuf_r+0x18>
 8005d38:	08005481 	.word	0x08005481

08005d3c <__ascii_mbtowc>:
 8005d3c:	b082      	sub	sp, #8
 8005d3e:	b901      	cbnz	r1, 8005d42 <__ascii_mbtowc+0x6>
 8005d40:	a901      	add	r1, sp, #4
 8005d42:	b142      	cbz	r2, 8005d56 <__ascii_mbtowc+0x1a>
 8005d44:	b14b      	cbz	r3, 8005d5a <__ascii_mbtowc+0x1e>
 8005d46:	7813      	ldrb	r3, [r2, #0]
 8005d48:	600b      	str	r3, [r1, #0]
 8005d4a:	7812      	ldrb	r2, [r2, #0]
 8005d4c:	1c10      	adds	r0, r2, #0
 8005d4e:	bf18      	it	ne
 8005d50:	2001      	movne	r0, #1
 8005d52:	b002      	add	sp, #8
 8005d54:	4770      	bx	lr
 8005d56:	4610      	mov	r0, r2
 8005d58:	e7fb      	b.n	8005d52 <__ascii_mbtowc+0x16>
 8005d5a:	f06f 0001 	mvn.w	r0, #1
 8005d5e:	e7f8      	b.n	8005d52 <__ascii_mbtowc+0x16>

08005d60 <memcpy>:
 8005d60:	b510      	push	{r4, lr}
 8005d62:	1e43      	subs	r3, r0, #1
 8005d64:	440a      	add	r2, r1
 8005d66:	4291      	cmp	r1, r2
 8005d68:	d100      	bne.n	8005d6c <memcpy+0xc>
 8005d6a:	bd10      	pop	{r4, pc}
 8005d6c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005d70:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005d74:	e7f7      	b.n	8005d66 <memcpy+0x6>

08005d76 <__malloc_lock>:
 8005d76:	4770      	bx	lr

08005d78 <__malloc_unlock>:
 8005d78:	4770      	bx	lr

08005d7a <_Balloc>:
 8005d7a:	b570      	push	{r4, r5, r6, lr}
 8005d7c:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8005d7e:	4604      	mov	r4, r0
 8005d80:	460e      	mov	r6, r1
 8005d82:	b93d      	cbnz	r5, 8005d94 <_Balloc+0x1a>
 8005d84:	2010      	movs	r0, #16
 8005d86:	f7fc fda7 	bl	80028d8 <malloc>
 8005d8a:	6260      	str	r0, [r4, #36]	; 0x24
 8005d8c:	6045      	str	r5, [r0, #4]
 8005d8e:	6085      	str	r5, [r0, #8]
 8005d90:	6005      	str	r5, [r0, #0]
 8005d92:	60c5      	str	r5, [r0, #12]
 8005d94:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8005d96:	68eb      	ldr	r3, [r5, #12]
 8005d98:	b183      	cbz	r3, 8005dbc <_Balloc+0x42>
 8005d9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005d9c:	68db      	ldr	r3, [r3, #12]
 8005d9e:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8005da2:	b9b8      	cbnz	r0, 8005dd4 <_Balloc+0x5a>
 8005da4:	2101      	movs	r1, #1
 8005da6:	fa01 f506 	lsl.w	r5, r1, r6
 8005daa:	1d6a      	adds	r2, r5, #5
 8005dac:	0092      	lsls	r2, r2, #2
 8005dae:	4620      	mov	r0, r4
 8005db0:	f7fc fda2 	bl	80028f8 <_calloc_r>
 8005db4:	b160      	cbz	r0, 8005dd0 <_Balloc+0x56>
 8005db6:	6046      	str	r6, [r0, #4]
 8005db8:	6085      	str	r5, [r0, #8]
 8005dba:	e00e      	b.n	8005dda <_Balloc+0x60>
 8005dbc:	2221      	movs	r2, #33	; 0x21
 8005dbe:	2104      	movs	r1, #4
 8005dc0:	4620      	mov	r0, r4
 8005dc2:	f7fc fd99 	bl	80028f8 <_calloc_r>
 8005dc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005dc8:	60e8      	str	r0, [r5, #12]
 8005dca:	68db      	ldr	r3, [r3, #12]
 8005dcc:	2b00      	cmp	r3, #0
 8005dce:	d1e4      	bne.n	8005d9a <_Balloc+0x20>
 8005dd0:	2000      	movs	r0, #0
 8005dd2:	bd70      	pop	{r4, r5, r6, pc}
 8005dd4:	6802      	ldr	r2, [r0, #0]
 8005dd6:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8005dda:	2300      	movs	r3, #0
 8005ddc:	6103      	str	r3, [r0, #16]
 8005dde:	60c3      	str	r3, [r0, #12]
 8005de0:	bd70      	pop	{r4, r5, r6, pc}

08005de2 <_Bfree>:
 8005de2:	b570      	push	{r4, r5, r6, lr}
 8005de4:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8005de6:	4606      	mov	r6, r0
 8005de8:	460d      	mov	r5, r1
 8005dea:	b93c      	cbnz	r4, 8005dfc <_Bfree+0x1a>
 8005dec:	2010      	movs	r0, #16
 8005dee:	f7fc fd73 	bl	80028d8 <malloc>
 8005df2:	6270      	str	r0, [r6, #36]	; 0x24
 8005df4:	6044      	str	r4, [r0, #4]
 8005df6:	6084      	str	r4, [r0, #8]
 8005df8:	6004      	str	r4, [r0, #0]
 8005dfa:	60c4      	str	r4, [r0, #12]
 8005dfc:	b13d      	cbz	r5, 8005e0e <_Bfree+0x2c>
 8005dfe:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005e00:	686a      	ldr	r2, [r5, #4]
 8005e02:	68db      	ldr	r3, [r3, #12]
 8005e04:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8005e08:	6029      	str	r1, [r5, #0]
 8005e0a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8005e0e:	bd70      	pop	{r4, r5, r6, pc}

08005e10 <__multadd>:
 8005e10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005e14:	690d      	ldr	r5, [r1, #16]
 8005e16:	461f      	mov	r7, r3
 8005e18:	4606      	mov	r6, r0
 8005e1a:	460c      	mov	r4, r1
 8005e1c:	f101 0e14 	add.w	lr, r1, #20
 8005e20:	2300      	movs	r3, #0
 8005e22:	f8de 0000 	ldr.w	r0, [lr]
 8005e26:	b281      	uxth	r1, r0
 8005e28:	fb02 7101 	mla	r1, r2, r1, r7
 8005e2c:	0c0f      	lsrs	r7, r1, #16
 8005e2e:	0c00      	lsrs	r0, r0, #16
 8005e30:	fb02 7000 	mla	r0, r2, r0, r7
 8005e34:	b289      	uxth	r1, r1
 8005e36:	3301      	adds	r3, #1
 8005e38:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8005e3c:	429d      	cmp	r5, r3
 8005e3e:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8005e42:	f84e 1b04 	str.w	r1, [lr], #4
 8005e46:	dcec      	bgt.n	8005e22 <__multadd+0x12>
 8005e48:	b1d7      	cbz	r7, 8005e80 <__multadd+0x70>
 8005e4a:	68a3      	ldr	r3, [r4, #8]
 8005e4c:	429d      	cmp	r5, r3
 8005e4e:	db12      	blt.n	8005e76 <__multadd+0x66>
 8005e50:	6861      	ldr	r1, [r4, #4]
 8005e52:	4630      	mov	r0, r6
 8005e54:	3101      	adds	r1, #1
 8005e56:	f7ff ff90 	bl	8005d7a <_Balloc>
 8005e5a:	6922      	ldr	r2, [r4, #16]
 8005e5c:	3202      	adds	r2, #2
 8005e5e:	f104 010c 	add.w	r1, r4, #12
 8005e62:	4680      	mov	r8, r0
 8005e64:	0092      	lsls	r2, r2, #2
 8005e66:	300c      	adds	r0, #12
 8005e68:	f7ff ff7a 	bl	8005d60 <memcpy>
 8005e6c:	4621      	mov	r1, r4
 8005e6e:	4630      	mov	r0, r6
 8005e70:	f7ff ffb7 	bl	8005de2 <_Bfree>
 8005e74:	4644      	mov	r4, r8
 8005e76:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8005e7a:	3501      	adds	r5, #1
 8005e7c:	615f      	str	r7, [r3, #20]
 8005e7e:	6125      	str	r5, [r4, #16]
 8005e80:	4620      	mov	r0, r4
 8005e82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005e86 <__s2b>:
 8005e86:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005e8a:	460c      	mov	r4, r1
 8005e8c:	4615      	mov	r5, r2
 8005e8e:	461f      	mov	r7, r3
 8005e90:	2209      	movs	r2, #9
 8005e92:	3308      	adds	r3, #8
 8005e94:	4606      	mov	r6, r0
 8005e96:	fb93 f3f2 	sdiv	r3, r3, r2
 8005e9a:	2100      	movs	r1, #0
 8005e9c:	2201      	movs	r2, #1
 8005e9e:	429a      	cmp	r2, r3
 8005ea0:	db20      	blt.n	8005ee4 <__s2b+0x5e>
 8005ea2:	4630      	mov	r0, r6
 8005ea4:	f7ff ff69 	bl	8005d7a <_Balloc>
 8005ea8:	9b08      	ldr	r3, [sp, #32]
 8005eaa:	6143      	str	r3, [r0, #20]
 8005eac:	2d09      	cmp	r5, #9
 8005eae:	f04f 0301 	mov.w	r3, #1
 8005eb2:	6103      	str	r3, [r0, #16]
 8005eb4:	dd19      	ble.n	8005eea <__s2b+0x64>
 8005eb6:	f104 0909 	add.w	r9, r4, #9
 8005eba:	46c8      	mov	r8, r9
 8005ebc:	442c      	add	r4, r5
 8005ebe:	f818 3b01 	ldrb.w	r3, [r8], #1
 8005ec2:	4601      	mov	r1, r0
 8005ec4:	3b30      	subs	r3, #48	; 0x30
 8005ec6:	220a      	movs	r2, #10
 8005ec8:	4630      	mov	r0, r6
 8005eca:	f7ff ffa1 	bl	8005e10 <__multadd>
 8005ece:	45a0      	cmp	r8, r4
 8005ed0:	d1f5      	bne.n	8005ebe <__s2b+0x38>
 8005ed2:	f1a5 0408 	sub.w	r4, r5, #8
 8005ed6:	444c      	add	r4, r9
 8005ed8:	1b2d      	subs	r5, r5, r4
 8005eda:	1963      	adds	r3, r4, r5
 8005edc:	42bb      	cmp	r3, r7
 8005ede:	db07      	blt.n	8005ef0 <__s2b+0x6a>
 8005ee0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005ee4:	0052      	lsls	r2, r2, #1
 8005ee6:	3101      	adds	r1, #1
 8005ee8:	e7d9      	b.n	8005e9e <__s2b+0x18>
 8005eea:	340a      	adds	r4, #10
 8005eec:	2509      	movs	r5, #9
 8005eee:	e7f3      	b.n	8005ed8 <__s2b+0x52>
 8005ef0:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005ef4:	4601      	mov	r1, r0
 8005ef6:	3b30      	subs	r3, #48	; 0x30
 8005ef8:	220a      	movs	r2, #10
 8005efa:	4630      	mov	r0, r6
 8005efc:	f7ff ff88 	bl	8005e10 <__multadd>
 8005f00:	e7eb      	b.n	8005eda <__s2b+0x54>

08005f02 <__hi0bits>:
 8005f02:	0c02      	lsrs	r2, r0, #16
 8005f04:	0412      	lsls	r2, r2, #16
 8005f06:	4603      	mov	r3, r0
 8005f08:	b9b2      	cbnz	r2, 8005f38 <__hi0bits+0x36>
 8005f0a:	0403      	lsls	r3, r0, #16
 8005f0c:	2010      	movs	r0, #16
 8005f0e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8005f12:	bf04      	itt	eq
 8005f14:	021b      	lsleq	r3, r3, #8
 8005f16:	3008      	addeq	r0, #8
 8005f18:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8005f1c:	bf04      	itt	eq
 8005f1e:	011b      	lsleq	r3, r3, #4
 8005f20:	3004      	addeq	r0, #4
 8005f22:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8005f26:	bf04      	itt	eq
 8005f28:	009b      	lsleq	r3, r3, #2
 8005f2a:	3002      	addeq	r0, #2
 8005f2c:	2b00      	cmp	r3, #0
 8005f2e:	db06      	blt.n	8005f3e <__hi0bits+0x3c>
 8005f30:	005b      	lsls	r3, r3, #1
 8005f32:	d503      	bpl.n	8005f3c <__hi0bits+0x3a>
 8005f34:	3001      	adds	r0, #1
 8005f36:	4770      	bx	lr
 8005f38:	2000      	movs	r0, #0
 8005f3a:	e7e8      	b.n	8005f0e <__hi0bits+0xc>
 8005f3c:	2020      	movs	r0, #32
 8005f3e:	4770      	bx	lr

08005f40 <__lo0bits>:
 8005f40:	6803      	ldr	r3, [r0, #0]
 8005f42:	f013 0207 	ands.w	r2, r3, #7
 8005f46:	4601      	mov	r1, r0
 8005f48:	d00b      	beq.n	8005f62 <__lo0bits+0x22>
 8005f4a:	07da      	lsls	r2, r3, #31
 8005f4c:	d423      	bmi.n	8005f96 <__lo0bits+0x56>
 8005f4e:	0798      	lsls	r0, r3, #30
 8005f50:	bf49      	itett	mi
 8005f52:	085b      	lsrmi	r3, r3, #1
 8005f54:	089b      	lsrpl	r3, r3, #2
 8005f56:	2001      	movmi	r0, #1
 8005f58:	600b      	strmi	r3, [r1, #0]
 8005f5a:	bf5c      	itt	pl
 8005f5c:	600b      	strpl	r3, [r1, #0]
 8005f5e:	2002      	movpl	r0, #2
 8005f60:	4770      	bx	lr
 8005f62:	b298      	uxth	r0, r3
 8005f64:	b9a8      	cbnz	r0, 8005f92 <__lo0bits+0x52>
 8005f66:	0c1b      	lsrs	r3, r3, #16
 8005f68:	2010      	movs	r0, #16
 8005f6a:	f013 0fff 	tst.w	r3, #255	; 0xff
 8005f6e:	bf04      	itt	eq
 8005f70:	0a1b      	lsreq	r3, r3, #8
 8005f72:	3008      	addeq	r0, #8
 8005f74:	071a      	lsls	r2, r3, #28
 8005f76:	bf04      	itt	eq
 8005f78:	091b      	lsreq	r3, r3, #4
 8005f7a:	3004      	addeq	r0, #4
 8005f7c:	079a      	lsls	r2, r3, #30
 8005f7e:	bf04      	itt	eq
 8005f80:	089b      	lsreq	r3, r3, #2
 8005f82:	3002      	addeq	r0, #2
 8005f84:	07da      	lsls	r2, r3, #31
 8005f86:	d402      	bmi.n	8005f8e <__lo0bits+0x4e>
 8005f88:	085b      	lsrs	r3, r3, #1
 8005f8a:	d006      	beq.n	8005f9a <__lo0bits+0x5a>
 8005f8c:	3001      	adds	r0, #1
 8005f8e:	600b      	str	r3, [r1, #0]
 8005f90:	4770      	bx	lr
 8005f92:	4610      	mov	r0, r2
 8005f94:	e7e9      	b.n	8005f6a <__lo0bits+0x2a>
 8005f96:	2000      	movs	r0, #0
 8005f98:	4770      	bx	lr
 8005f9a:	2020      	movs	r0, #32
 8005f9c:	4770      	bx	lr

08005f9e <__i2b>:
 8005f9e:	b510      	push	{r4, lr}
 8005fa0:	460c      	mov	r4, r1
 8005fa2:	2101      	movs	r1, #1
 8005fa4:	f7ff fee9 	bl	8005d7a <_Balloc>
 8005fa8:	2201      	movs	r2, #1
 8005faa:	6144      	str	r4, [r0, #20]
 8005fac:	6102      	str	r2, [r0, #16]
 8005fae:	bd10      	pop	{r4, pc}

08005fb0 <__multiply>:
 8005fb0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005fb4:	4614      	mov	r4, r2
 8005fb6:	690a      	ldr	r2, [r1, #16]
 8005fb8:	6923      	ldr	r3, [r4, #16]
 8005fba:	429a      	cmp	r2, r3
 8005fbc:	bfb8      	it	lt
 8005fbe:	460b      	movlt	r3, r1
 8005fc0:	4689      	mov	r9, r1
 8005fc2:	bfbc      	itt	lt
 8005fc4:	46a1      	movlt	r9, r4
 8005fc6:	461c      	movlt	r4, r3
 8005fc8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8005fcc:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8005fd0:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8005fd4:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8005fd8:	eb07 060a 	add.w	r6, r7, sl
 8005fdc:	429e      	cmp	r6, r3
 8005fde:	bfc8      	it	gt
 8005fe0:	3101      	addgt	r1, #1
 8005fe2:	f7ff feca 	bl	8005d7a <_Balloc>
 8005fe6:	f100 0514 	add.w	r5, r0, #20
 8005fea:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8005fee:	462b      	mov	r3, r5
 8005ff0:	2200      	movs	r2, #0
 8005ff2:	4543      	cmp	r3, r8
 8005ff4:	d316      	bcc.n	8006024 <__multiply+0x74>
 8005ff6:	f104 0214 	add.w	r2, r4, #20
 8005ffa:	f109 0114 	add.w	r1, r9, #20
 8005ffe:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 8006002:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8006006:	9301      	str	r3, [sp, #4]
 8006008:	9c01      	ldr	r4, [sp, #4]
 800600a:	4294      	cmp	r4, r2
 800600c:	4613      	mov	r3, r2
 800600e:	d80c      	bhi.n	800602a <__multiply+0x7a>
 8006010:	2e00      	cmp	r6, #0
 8006012:	dd03      	ble.n	800601c <__multiply+0x6c>
 8006014:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006018:	2b00      	cmp	r3, #0
 800601a:	d054      	beq.n	80060c6 <__multiply+0x116>
 800601c:	6106      	str	r6, [r0, #16]
 800601e:	b003      	add	sp, #12
 8006020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006024:	f843 2b04 	str.w	r2, [r3], #4
 8006028:	e7e3      	b.n	8005ff2 <__multiply+0x42>
 800602a:	f8b3 a000 	ldrh.w	sl, [r3]
 800602e:	3204      	adds	r2, #4
 8006030:	f1ba 0f00 	cmp.w	sl, #0
 8006034:	d020      	beq.n	8006078 <__multiply+0xc8>
 8006036:	46ae      	mov	lr, r5
 8006038:	4689      	mov	r9, r1
 800603a:	f04f 0c00 	mov.w	ip, #0
 800603e:	f859 4b04 	ldr.w	r4, [r9], #4
 8006042:	f8be b000 	ldrh.w	fp, [lr]
 8006046:	b2a3      	uxth	r3, r4
 8006048:	fb0a b303 	mla	r3, sl, r3, fp
 800604c:	ea4f 4b14 	mov.w	fp, r4, lsr #16
 8006050:	f8de 4000 	ldr.w	r4, [lr]
 8006054:	4463      	add	r3, ip
 8006056:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 800605a:	fb0a c40b 	mla	r4, sl, fp, ip
 800605e:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8006062:	b29b      	uxth	r3, r3
 8006064:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8006068:	454f      	cmp	r7, r9
 800606a:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 800606e:	f84e 3b04 	str.w	r3, [lr], #4
 8006072:	d8e4      	bhi.n	800603e <__multiply+0x8e>
 8006074:	f8ce c000 	str.w	ip, [lr]
 8006078:	f832 9c02 	ldrh.w	r9, [r2, #-2]
 800607c:	f1b9 0f00 	cmp.w	r9, #0
 8006080:	d01f      	beq.n	80060c2 <__multiply+0x112>
 8006082:	682b      	ldr	r3, [r5, #0]
 8006084:	46ae      	mov	lr, r5
 8006086:	468c      	mov	ip, r1
 8006088:	f04f 0a00 	mov.w	sl, #0
 800608c:	f8bc 4000 	ldrh.w	r4, [ip]
 8006090:	f8be b002 	ldrh.w	fp, [lr, #2]
 8006094:	fb09 b404 	mla	r4, r9, r4, fp
 8006098:	44a2      	add	sl, r4
 800609a:	b29b      	uxth	r3, r3
 800609c:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
 80060a0:	f84e 3b04 	str.w	r3, [lr], #4
 80060a4:	f85c 3b04 	ldr.w	r3, [ip], #4
 80060a8:	f8be 4000 	ldrh.w	r4, [lr]
 80060ac:	0c1b      	lsrs	r3, r3, #16
 80060ae:	fb09 4303 	mla	r3, r9, r3, r4
 80060b2:	eb03 431a 	add.w	r3, r3, sl, lsr #16
 80060b6:	4567      	cmp	r7, ip
 80060b8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80060bc:	d8e6      	bhi.n	800608c <__multiply+0xdc>
 80060be:	f8ce 3000 	str.w	r3, [lr]
 80060c2:	3504      	adds	r5, #4
 80060c4:	e7a0      	b.n	8006008 <__multiply+0x58>
 80060c6:	3e01      	subs	r6, #1
 80060c8:	e7a2      	b.n	8006010 <__multiply+0x60>
	...

080060cc <__pow5mult>:
 80060cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80060d0:	4615      	mov	r5, r2
 80060d2:	f012 0203 	ands.w	r2, r2, #3
 80060d6:	4606      	mov	r6, r0
 80060d8:	460f      	mov	r7, r1
 80060da:	d007      	beq.n	80060ec <__pow5mult+0x20>
 80060dc:	3a01      	subs	r2, #1
 80060de:	4c21      	ldr	r4, [pc, #132]	; (8006164 <__pow5mult+0x98>)
 80060e0:	2300      	movs	r3, #0
 80060e2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80060e6:	f7ff fe93 	bl	8005e10 <__multadd>
 80060ea:	4607      	mov	r7, r0
 80060ec:	10ad      	asrs	r5, r5, #2
 80060ee:	d035      	beq.n	800615c <__pow5mult+0x90>
 80060f0:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80060f2:	b93c      	cbnz	r4, 8006104 <__pow5mult+0x38>
 80060f4:	2010      	movs	r0, #16
 80060f6:	f7fc fbef 	bl	80028d8 <malloc>
 80060fa:	6270      	str	r0, [r6, #36]	; 0x24
 80060fc:	6044      	str	r4, [r0, #4]
 80060fe:	6084      	str	r4, [r0, #8]
 8006100:	6004      	str	r4, [r0, #0]
 8006102:	60c4      	str	r4, [r0, #12]
 8006104:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8006108:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800610c:	b94c      	cbnz	r4, 8006122 <__pow5mult+0x56>
 800610e:	f240 2171 	movw	r1, #625	; 0x271
 8006112:	4630      	mov	r0, r6
 8006114:	f7ff ff43 	bl	8005f9e <__i2b>
 8006118:	2300      	movs	r3, #0
 800611a:	f8c8 0008 	str.w	r0, [r8, #8]
 800611e:	4604      	mov	r4, r0
 8006120:	6003      	str	r3, [r0, #0]
 8006122:	f04f 0800 	mov.w	r8, #0
 8006126:	07eb      	lsls	r3, r5, #31
 8006128:	d50a      	bpl.n	8006140 <__pow5mult+0x74>
 800612a:	4639      	mov	r1, r7
 800612c:	4622      	mov	r2, r4
 800612e:	4630      	mov	r0, r6
 8006130:	f7ff ff3e 	bl	8005fb0 <__multiply>
 8006134:	4639      	mov	r1, r7
 8006136:	4681      	mov	r9, r0
 8006138:	4630      	mov	r0, r6
 800613a:	f7ff fe52 	bl	8005de2 <_Bfree>
 800613e:	464f      	mov	r7, r9
 8006140:	106d      	asrs	r5, r5, #1
 8006142:	d00b      	beq.n	800615c <__pow5mult+0x90>
 8006144:	6820      	ldr	r0, [r4, #0]
 8006146:	b938      	cbnz	r0, 8006158 <__pow5mult+0x8c>
 8006148:	4622      	mov	r2, r4
 800614a:	4621      	mov	r1, r4
 800614c:	4630      	mov	r0, r6
 800614e:	f7ff ff2f 	bl	8005fb0 <__multiply>
 8006152:	6020      	str	r0, [r4, #0]
 8006154:	f8c0 8000 	str.w	r8, [r0]
 8006158:	4604      	mov	r4, r0
 800615a:	e7e4      	b.n	8006126 <__pow5mult+0x5a>
 800615c:	4638      	mov	r0, r7
 800615e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006162:	bf00      	nop
 8006164:	08007190 	.word	0x08007190

08006168 <__lshift>:
 8006168:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800616c:	460c      	mov	r4, r1
 800616e:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8006172:	6923      	ldr	r3, [r4, #16]
 8006174:	6849      	ldr	r1, [r1, #4]
 8006176:	eb0a 0903 	add.w	r9, sl, r3
 800617a:	68a3      	ldr	r3, [r4, #8]
 800617c:	4607      	mov	r7, r0
 800617e:	4616      	mov	r6, r2
 8006180:	f109 0501 	add.w	r5, r9, #1
 8006184:	42ab      	cmp	r3, r5
 8006186:	db31      	blt.n	80061ec <__lshift+0x84>
 8006188:	4638      	mov	r0, r7
 800618a:	f7ff fdf6 	bl	8005d7a <_Balloc>
 800618e:	2200      	movs	r2, #0
 8006190:	4680      	mov	r8, r0
 8006192:	f100 0314 	add.w	r3, r0, #20
 8006196:	4611      	mov	r1, r2
 8006198:	4552      	cmp	r2, sl
 800619a:	db2a      	blt.n	80061f2 <__lshift+0x8a>
 800619c:	6920      	ldr	r0, [r4, #16]
 800619e:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80061a2:	f104 0114 	add.w	r1, r4, #20
 80061a6:	f016 021f 	ands.w	r2, r6, #31
 80061aa:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 80061ae:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 80061b2:	d022      	beq.n	80061fa <__lshift+0x92>
 80061b4:	f1c2 0c20 	rsb	ip, r2, #32
 80061b8:	2000      	movs	r0, #0
 80061ba:	680e      	ldr	r6, [r1, #0]
 80061bc:	4096      	lsls	r6, r2
 80061be:	4330      	orrs	r0, r6
 80061c0:	f843 0b04 	str.w	r0, [r3], #4
 80061c4:	f851 0b04 	ldr.w	r0, [r1], #4
 80061c8:	458e      	cmp	lr, r1
 80061ca:	fa20 f00c 	lsr.w	r0, r0, ip
 80061ce:	d8f4      	bhi.n	80061ba <__lshift+0x52>
 80061d0:	6018      	str	r0, [r3, #0]
 80061d2:	b108      	cbz	r0, 80061d8 <__lshift+0x70>
 80061d4:	f109 0502 	add.w	r5, r9, #2
 80061d8:	3d01      	subs	r5, #1
 80061da:	4638      	mov	r0, r7
 80061dc:	f8c8 5010 	str.w	r5, [r8, #16]
 80061e0:	4621      	mov	r1, r4
 80061e2:	f7ff fdfe 	bl	8005de2 <_Bfree>
 80061e6:	4640      	mov	r0, r8
 80061e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80061ec:	3101      	adds	r1, #1
 80061ee:	005b      	lsls	r3, r3, #1
 80061f0:	e7c8      	b.n	8006184 <__lshift+0x1c>
 80061f2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80061f6:	3201      	adds	r2, #1
 80061f8:	e7ce      	b.n	8006198 <__lshift+0x30>
 80061fa:	3b04      	subs	r3, #4
 80061fc:	f851 2b04 	ldr.w	r2, [r1], #4
 8006200:	f843 2f04 	str.w	r2, [r3, #4]!
 8006204:	458e      	cmp	lr, r1
 8006206:	d8f9      	bhi.n	80061fc <__lshift+0x94>
 8006208:	e7e6      	b.n	80061d8 <__lshift+0x70>

0800620a <__mcmp>:
 800620a:	6903      	ldr	r3, [r0, #16]
 800620c:	690a      	ldr	r2, [r1, #16]
 800620e:	1a9b      	subs	r3, r3, r2
 8006210:	b530      	push	{r4, r5, lr}
 8006212:	d10c      	bne.n	800622e <__mcmp+0x24>
 8006214:	0092      	lsls	r2, r2, #2
 8006216:	3014      	adds	r0, #20
 8006218:	3114      	adds	r1, #20
 800621a:	1884      	adds	r4, r0, r2
 800621c:	4411      	add	r1, r2
 800621e:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8006222:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8006226:	4295      	cmp	r5, r2
 8006228:	d003      	beq.n	8006232 <__mcmp+0x28>
 800622a:	d305      	bcc.n	8006238 <__mcmp+0x2e>
 800622c:	2301      	movs	r3, #1
 800622e:	4618      	mov	r0, r3
 8006230:	bd30      	pop	{r4, r5, pc}
 8006232:	42a0      	cmp	r0, r4
 8006234:	d3f3      	bcc.n	800621e <__mcmp+0x14>
 8006236:	e7fa      	b.n	800622e <__mcmp+0x24>
 8006238:	f04f 33ff 	mov.w	r3, #4294967295
 800623c:	e7f7      	b.n	800622e <__mcmp+0x24>

0800623e <__mdiff>:
 800623e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006242:	460d      	mov	r5, r1
 8006244:	4607      	mov	r7, r0
 8006246:	4611      	mov	r1, r2
 8006248:	4628      	mov	r0, r5
 800624a:	4614      	mov	r4, r2
 800624c:	f7ff ffdd 	bl	800620a <__mcmp>
 8006250:	1e06      	subs	r6, r0, #0
 8006252:	d108      	bne.n	8006266 <__mdiff+0x28>
 8006254:	4631      	mov	r1, r6
 8006256:	4638      	mov	r0, r7
 8006258:	f7ff fd8f 	bl	8005d7a <_Balloc>
 800625c:	2301      	movs	r3, #1
 800625e:	6103      	str	r3, [r0, #16]
 8006260:	6146      	str	r6, [r0, #20]
 8006262:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006266:	bfa4      	itt	ge
 8006268:	4623      	movge	r3, r4
 800626a:	462c      	movge	r4, r5
 800626c:	4638      	mov	r0, r7
 800626e:	6861      	ldr	r1, [r4, #4]
 8006270:	bfa6      	itte	ge
 8006272:	461d      	movge	r5, r3
 8006274:	2600      	movge	r6, #0
 8006276:	2601      	movlt	r6, #1
 8006278:	f7ff fd7f 	bl	8005d7a <_Balloc>
 800627c:	692b      	ldr	r3, [r5, #16]
 800627e:	60c6      	str	r6, [r0, #12]
 8006280:	6926      	ldr	r6, [r4, #16]
 8006282:	f105 0914 	add.w	r9, r5, #20
 8006286:	f104 0214 	add.w	r2, r4, #20
 800628a:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 800628e:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8006292:	f100 0514 	add.w	r5, r0, #20
 8006296:	f04f 0c00 	mov.w	ip, #0
 800629a:	f852 ab04 	ldr.w	sl, [r2], #4
 800629e:	f859 4b04 	ldr.w	r4, [r9], #4
 80062a2:	fa1c f18a 	uxtah	r1, ip, sl
 80062a6:	b2a3      	uxth	r3, r4
 80062a8:	1ac9      	subs	r1, r1, r3
 80062aa:	0c23      	lsrs	r3, r4, #16
 80062ac:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 80062b0:	eb03 4321 	add.w	r3, r3, r1, asr #16
 80062b4:	b289      	uxth	r1, r1
 80062b6:	ea4f 4c23 	mov.w	ip, r3, asr #16
 80062ba:	45c8      	cmp	r8, r9
 80062bc:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 80062c0:	4696      	mov	lr, r2
 80062c2:	f845 3b04 	str.w	r3, [r5], #4
 80062c6:	d8e8      	bhi.n	800629a <__mdiff+0x5c>
 80062c8:	45be      	cmp	lr, r7
 80062ca:	d305      	bcc.n	80062d8 <__mdiff+0x9a>
 80062cc:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 80062d0:	b18b      	cbz	r3, 80062f6 <__mdiff+0xb8>
 80062d2:	6106      	str	r6, [r0, #16]
 80062d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80062d8:	f85e 1b04 	ldr.w	r1, [lr], #4
 80062dc:	fa1c f381 	uxtah	r3, ip, r1
 80062e0:	141a      	asrs	r2, r3, #16
 80062e2:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80062e6:	b29b      	uxth	r3, r3
 80062e8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80062ec:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80062f0:	f845 3b04 	str.w	r3, [r5], #4
 80062f4:	e7e8      	b.n	80062c8 <__mdiff+0x8a>
 80062f6:	3e01      	subs	r6, #1
 80062f8:	e7e8      	b.n	80062cc <__mdiff+0x8e>
	...

080062fc <__ulp>:
 80062fc:	4b12      	ldr	r3, [pc, #72]	; (8006348 <__ulp+0x4c>)
 80062fe:	ee10 2a90 	vmov	r2, s1
 8006302:	401a      	ands	r2, r3
 8006304:	f1a2 7350 	sub.w	r3, r2, #54525952	; 0x3400000
 8006308:	2b00      	cmp	r3, #0
 800630a:	dd04      	ble.n	8006316 <__ulp+0x1a>
 800630c:	2000      	movs	r0, #0
 800630e:	4619      	mov	r1, r3
 8006310:	ec41 0b10 	vmov	d0, r0, r1
 8006314:	4770      	bx	lr
 8006316:	425b      	negs	r3, r3
 8006318:	151b      	asrs	r3, r3, #20
 800631a:	2b13      	cmp	r3, #19
 800631c:	f04f 0000 	mov.w	r0, #0
 8006320:	f04f 0100 	mov.w	r1, #0
 8006324:	dc04      	bgt.n	8006330 <__ulp+0x34>
 8006326:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 800632a:	fa42 f103 	asr.w	r1, r2, r3
 800632e:	e7ef      	b.n	8006310 <__ulp+0x14>
 8006330:	3b14      	subs	r3, #20
 8006332:	2b1e      	cmp	r3, #30
 8006334:	f04f 0201 	mov.w	r2, #1
 8006338:	bfda      	itte	le
 800633a:	f1c3 031f 	rsble	r3, r3, #31
 800633e:	fa02 f303 	lslle.w	r3, r2, r3
 8006342:	4613      	movgt	r3, r2
 8006344:	4618      	mov	r0, r3
 8006346:	e7e3      	b.n	8006310 <__ulp+0x14>
 8006348:	7ff00000 	.word	0x7ff00000

0800634c <__b2d>:
 800634c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800634e:	6905      	ldr	r5, [r0, #16]
 8006350:	f100 0714 	add.w	r7, r0, #20
 8006354:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8006358:	1f2e      	subs	r6, r5, #4
 800635a:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800635e:	4620      	mov	r0, r4
 8006360:	f7ff fdcf 	bl	8005f02 <__hi0bits>
 8006364:	f1c0 0320 	rsb	r3, r0, #32
 8006368:	280a      	cmp	r0, #10
 800636a:	600b      	str	r3, [r1, #0]
 800636c:	f8df e074 	ldr.w	lr, [pc, #116]	; 80063e4 <__b2d+0x98>
 8006370:	dc14      	bgt.n	800639c <__b2d+0x50>
 8006372:	f1c0 0c0b 	rsb	ip, r0, #11
 8006376:	fa24 f10c 	lsr.w	r1, r4, ip
 800637a:	42b7      	cmp	r7, r6
 800637c:	ea41 030e 	orr.w	r3, r1, lr
 8006380:	bf34      	ite	cc
 8006382:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8006386:	2100      	movcs	r1, #0
 8006388:	3015      	adds	r0, #21
 800638a:	fa04 f000 	lsl.w	r0, r4, r0
 800638e:	fa21 f10c 	lsr.w	r1, r1, ip
 8006392:	ea40 0201 	orr.w	r2, r0, r1
 8006396:	ec43 2b10 	vmov	d0, r2, r3
 800639a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800639c:	42b7      	cmp	r7, r6
 800639e:	bf3a      	itte	cc
 80063a0:	f1a5 0608 	subcc.w	r6, r5, #8
 80063a4:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 80063a8:	2100      	movcs	r1, #0
 80063aa:	380b      	subs	r0, #11
 80063ac:	d015      	beq.n	80063da <__b2d+0x8e>
 80063ae:	4084      	lsls	r4, r0
 80063b0:	f1c0 0520 	rsb	r5, r0, #32
 80063b4:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
 80063b8:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
 80063bc:	42be      	cmp	r6, r7
 80063be:	fa21 fe05 	lsr.w	lr, r1, r5
 80063c2:	ea44 030e 	orr.w	r3, r4, lr
 80063c6:	bf8c      	ite	hi
 80063c8:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 80063cc:	2400      	movls	r4, #0
 80063ce:	fa01 f000 	lsl.w	r0, r1, r0
 80063d2:	40ec      	lsrs	r4, r5
 80063d4:	ea40 0204 	orr.w	r2, r0, r4
 80063d8:	e7dd      	b.n	8006396 <__b2d+0x4a>
 80063da:	ea44 030e 	orr.w	r3, r4, lr
 80063de:	460a      	mov	r2, r1
 80063e0:	e7d9      	b.n	8006396 <__b2d+0x4a>
 80063e2:	bf00      	nop
 80063e4:	3ff00000 	.word	0x3ff00000

080063e8 <__d2b>:
 80063e8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80063ec:	460e      	mov	r6, r1
 80063ee:	2101      	movs	r1, #1
 80063f0:	ec59 8b10 	vmov	r8, r9, d0
 80063f4:	4615      	mov	r5, r2
 80063f6:	f7ff fcc0 	bl	8005d7a <_Balloc>
 80063fa:	f3c9 540a 	ubfx	r4, r9, #20, #11
 80063fe:	4607      	mov	r7, r0
 8006400:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8006404:	bb34      	cbnz	r4, 8006454 <__d2b+0x6c>
 8006406:	9301      	str	r3, [sp, #4]
 8006408:	f1b8 0f00 	cmp.w	r8, #0
 800640c:	d027      	beq.n	800645e <__d2b+0x76>
 800640e:	a802      	add	r0, sp, #8
 8006410:	f840 8d08 	str.w	r8, [r0, #-8]!
 8006414:	f7ff fd94 	bl	8005f40 <__lo0bits>
 8006418:	9900      	ldr	r1, [sp, #0]
 800641a:	b1f0      	cbz	r0, 800645a <__d2b+0x72>
 800641c:	9a01      	ldr	r2, [sp, #4]
 800641e:	f1c0 0320 	rsb	r3, r0, #32
 8006422:	fa02 f303 	lsl.w	r3, r2, r3
 8006426:	430b      	orrs	r3, r1
 8006428:	40c2      	lsrs	r2, r0
 800642a:	617b      	str	r3, [r7, #20]
 800642c:	9201      	str	r2, [sp, #4]
 800642e:	9b01      	ldr	r3, [sp, #4]
 8006430:	61bb      	str	r3, [r7, #24]
 8006432:	2b00      	cmp	r3, #0
 8006434:	bf14      	ite	ne
 8006436:	2102      	movne	r1, #2
 8006438:	2101      	moveq	r1, #1
 800643a:	6139      	str	r1, [r7, #16]
 800643c:	b1c4      	cbz	r4, 8006470 <__d2b+0x88>
 800643e:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8006442:	4404      	add	r4, r0
 8006444:	6034      	str	r4, [r6, #0]
 8006446:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800644a:	6028      	str	r0, [r5, #0]
 800644c:	4638      	mov	r0, r7
 800644e:	b003      	add	sp, #12
 8006450:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006454:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006458:	e7d5      	b.n	8006406 <__d2b+0x1e>
 800645a:	6179      	str	r1, [r7, #20]
 800645c:	e7e7      	b.n	800642e <__d2b+0x46>
 800645e:	a801      	add	r0, sp, #4
 8006460:	f7ff fd6e 	bl	8005f40 <__lo0bits>
 8006464:	9b01      	ldr	r3, [sp, #4]
 8006466:	617b      	str	r3, [r7, #20]
 8006468:	2101      	movs	r1, #1
 800646a:	6139      	str	r1, [r7, #16]
 800646c:	3020      	adds	r0, #32
 800646e:	e7e5      	b.n	800643c <__d2b+0x54>
 8006470:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8006474:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8006478:	6030      	str	r0, [r6, #0]
 800647a:	6918      	ldr	r0, [r3, #16]
 800647c:	f7ff fd41 	bl	8005f02 <__hi0bits>
 8006480:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8006484:	e7e1      	b.n	800644a <__d2b+0x62>

08006486 <__ratio>:
 8006486:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800648a:	4688      	mov	r8, r1
 800648c:	4669      	mov	r1, sp
 800648e:	4681      	mov	r9, r0
 8006490:	f7ff ff5c 	bl	800634c <__b2d>
 8006494:	a901      	add	r1, sp, #4
 8006496:	4640      	mov	r0, r8
 8006498:	ec55 4b10 	vmov	r4, r5, d0
 800649c:	f7ff ff56 	bl	800634c <__b2d>
 80064a0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80064a4:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80064a8:	1a9a      	subs	r2, r3, r2
 80064aa:	e89d 000a 	ldmia.w	sp, {r1, r3}
 80064ae:	1acb      	subs	r3, r1, r3
 80064b0:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 80064b4:	ec57 6b10 	vmov	r6, r7, d0
 80064b8:	2b00      	cmp	r3, #0
 80064ba:	bfd6      	itet	le
 80064bc:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80064c0:	eb05 5503 	addgt.w	r5, r5, r3, lsl #20
 80064c4:	eb07 5703 	addle.w	r7, r7, r3, lsl #20
 80064c8:	4632      	mov	r2, r6
 80064ca:	463b      	mov	r3, r7
 80064cc:	4620      	mov	r0, r4
 80064ce:	4629      	mov	r1, r5
 80064d0:	f7fa f996 	bl	8000800 <__aeabi_ddiv>
 80064d4:	ec41 0b10 	vmov	d0, r0, r1
 80064d8:	b003      	add	sp, #12
 80064da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080064de <__copybits>:
 80064de:	3901      	subs	r1, #1
 80064e0:	b510      	push	{r4, lr}
 80064e2:	1149      	asrs	r1, r1, #5
 80064e4:	6914      	ldr	r4, [r2, #16]
 80064e6:	3101      	adds	r1, #1
 80064e8:	f102 0314 	add.w	r3, r2, #20
 80064ec:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80064f0:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80064f4:	42a3      	cmp	r3, r4
 80064f6:	4602      	mov	r2, r0
 80064f8:	d303      	bcc.n	8006502 <__copybits+0x24>
 80064fa:	2300      	movs	r3, #0
 80064fc:	428a      	cmp	r2, r1
 80064fe:	d305      	bcc.n	800650c <__copybits+0x2e>
 8006500:	bd10      	pop	{r4, pc}
 8006502:	f853 2b04 	ldr.w	r2, [r3], #4
 8006506:	f840 2b04 	str.w	r2, [r0], #4
 800650a:	e7f3      	b.n	80064f4 <__copybits+0x16>
 800650c:	f842 3b04 	str.w	r3, [r2], #4
 8006510:	e7f4      	b.n	80064fc <__copybits+0x1e>

08006512 <__any_on>:
 8006512:	f100 0214 	add.w	r2, r0, #20
 8006516:	6900      	ldr	r0, [r0, #16]
 8006518:	114b      	asrs	r3, r1, #5
 800651a:	4298      	cmp	r0, r3
 800651c:	b510      	push	{r4, lr}
 800651e:	db11      	blt.n	8006544 <__any_on+0x32>
 8006520:	dd0a      	ble.n	8006538 <__any_on+0x26>
 8006522:	f011 011f 	ands.w	r1, r1, #31
 8006526:	d007      	beq.n	8006538 <__any_on+0x26>
 8006528:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800652c:	fa24 f001 	lsr.w	r0, r4, r1
 8006530:	fa00 f101 	lsl.w	r1, r0, r1
 8006534:	428c      	cmp	r4, r1
 8006536:	d10b      	bne.n	8006550 <__any_on+0x3e>
 8006538:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800653c:	4293      	cmp	r3, r2
 800653e:	d803      	bhi.n	8006548 <__any_on+0x36>
 8006540:	2000      	movs	r0, #0
 8006542:	bd10      	pop	{r4, pc}
 8006544:	4603      	mov	r3, r0
 8006546:	e7f7      	b.n	8006538 <__any_on+0x26>
 8006548:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800654c:	2900      	cmp	r1, #0
 800654e:	d0f5      	beq.n	800653c <__any_on+0x2a>
 8006550:	2001      	movs	r0, #1
 8006552:	bd10      	pop	{r4, pc}

08006554 <__ssputs_r>:
 8006554:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006558:	688e      	ldr	r6, [r1, #8]
 800655a:	429e      	cmp	r6, r3
 800655c:	4682      	mov	sl, r0
 800655e:	460c      	mov	r4, r1
 8006560:	4691      	mov	r9, r2
 8006562:	4698      	mov	r8, r3
 8006564:	d835      	bhi.n	80065d2 <__ssputs_r+0x7e>
 8006566:	898a      	ldrh	r2, [r1, #12]
 8006568:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800656c:	d031      	beq.n	80065d2 <__ssputs_r+0x7e>
 800656e:	6825      	ldr	r5, [r4, #0]
 8006570:	6909      	ldr	r1, [r1, #16]
 8006572:	1a6f      	subs	r7, r5, r1
 8006574:	6965      	ldr	r5, [r4, #20]
 8006576:	2302      	movs	r3, #2
 8006578:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800657c:	fb95 f5f3 	sdiv	r5, r5, r3
 8006580:	f108 0301 	add.w	r3, r8, #1
 8006584:	443b      	add	r3, r7
 8006586:	429d      	cmp	r5, r3
 8006588:	bf38      	it	cc
 800658a:	461d      	movcc	r5, r3
 800658c:	0553      	lsls	r3, r2, #21
 800658e:	d531      	bpl.n	80065f4 <__ssputs_r+0xa0>
 8006590:	4629      	mov	r1, r5
 8006592:	f7fc fa0d 	bl	80029b0 <_malloc_r>
 8006596:	4606      	mov	r6, r0
 8006598:	b950      	cbnz	r0, 80065b0 <__ssputs_r+0x5c>
 800659a:	230c      	movs	r3, #12
 800659c:	f8ca 3000 	str.w	r3, [sl]
 80065a0:	89a3      	ldrh	r3, [r4, #12]
 80065a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80065a6:	81a3      	strh	r3, [r4, #12]
 80065a8:	f04f 30ff 	mov.w	r0, #4294967295
 80065ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80065b0:	463a      	mov	r2, r7
 80065b2:	6921      	ldr	r1, [r4, #16]
 80065b4:	f7ff fbd4 	bl	8005d60 <memcpy>
 80065b8:	89a3      	ldrh	r3, [r4, #12]
 80065ba:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80065be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80065c2:	81a3      	strh	r3, [r4, #12]
 80065c4:	6126      	str	r6, [r4, #16]
 80065c6:	6165      	str	r5, [r4, #20]
 80065c8:	443e      	add	r6, r7
 80065ca:	1bed      	subs	r5, r5, r7
 80065cc:	6026      	str	r6, [r4, #0]
 80065ce:	60a5      	str	r5, [r4, #8]
 80065d0:	4646      	mov	r6, r8
 80065d2:	4546      	cmp	r6, r8
 80065d4:	bf28      	it	cs
 80065d6:	4646      	movcs	r6, r8
 80065d8:	4632      	mov	r2, r6
 80065da:	4649      	mov	r1, r9
 80065dc:	6820      	ldr	r0, [r4, #0]
 80065de:	f000 fbc3 	bl	8006d68 <memmove>
 80065e2:	68a3      	ldr	r3, [r4, #8]
 80065e4:	1b9b      	subs	r3, r3, r6
 80065e6:	60a3      	str	r3, [r4, #8]
 80065e8:	6823      	ldr	r3, [r4, #0]
 80065ea:	441e      	add	r6, r3
 80065ec:	6026      	str	r6, [r4, #0]
 80065ee:	2000      	movs	r0, #0
 80065f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80065f4:	462a      	mov	r2, r5
 80065f6:	f000 fbd1 	bl	8006d9c <_realloc_r>
 80065fa:	4606      	mov	r6, r0
 80065fc:	2800      	cmp	r0, #0
 80065fe:	d1e1      	bne.n	80065c4 <__ssputs_r+0x70>
 8006600:	6921      	ldr	r1, [r4, #16]
 8006602:	4650      	mov	r0, sl
 8006604:	f7fc f986 	bl	8002914 <_free_r>
 8006608:	e7c7      	b.n	800659a <__ssputs_r+0x46>
	...

0800660c <_svfiprintf_r>:
 800660c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006610:	b09d      	sub	sp, #116	; 0x74
 8006612:	4680      	mov	r8, r0
 8006614:	9303      	str	r3, [sp, #12]
 8006616:	898b      	ldrh	r3, [r1, #12]
 8006618:	061c      	lsls	r4, r3, #24
 800661a:	460d      	mov	r5, r1
 800661c:	4616      	mov	r6, r2
 800661e:	d50f      	bpl.n	8006640 <_svfiprintf_r+0x34>
 8006620:	690b      	ldr	r3, [r1, #16]
 8006622:	b96b      	cbnz	r3, 8006640 <_svfiprintf_r+0x34>
 8006624:	2140      	movs	r1, #64	; 0x40
 8006626:	f7fc f9c3 	bl	80029b0 <_malloc_r>
 800662a:	6028      	str	r0, [r5, #0]
 800662c:	6128      	str	r0, [r5, #16]
 800662e:	b928      	cbnz	r0, 800663c <_svfiprintf_r+0x30>
 8006630:	230c      	movs	r3, #12
 8006632:	f8c8 3000 	str.w	r3, [r8]
 8006636:	f04f 30ff 	mov.w	r0, #4294967295
 800663a:	e0c5      	b.n	80067c8 <_svfiprintf_r+0x1bc>
 800663c:	2340      	movs	r3, #64	; 0x40
 800663e:	616b      	str	r3, [r5, #20]
 8006640:	2300      	movs	r3, #0
 8006642:	9309      	str	r3, [sp, #36]	; 0x24
 8006644:	2320      	movs	r3, #32
 8006646:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800664a:	2330      	movs	r3, #48	; 0x30
 800664c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006650:	f04f 0b01 	mov.w	fp, #1
 8006654:	4637      	mov	r7, r6
 8006656:	463c      	mov	r4, r7
 8006658:	f814 3b01 	ldrb.w	r3, [r4], #1
 800665c:	2b00      	cmp	r3, #0
 800665e:	d13c      	bne.n	80066da <_svfiprintf_r+0xce>
 8006660:	ebb7 0a06 	subs.w	sl, r7, r6
 8006664:	d00b      	beq.n	800667e <_svfiprintf_r+0x72>
 8006666:	4653      	mov	r3, sl
 8006668:	4632      	mov	r2, r6
 800666a:	4629      	mov	r1, r5
 800666c:	4640      	mov	r0, r8
 800666e:	f7ff ff71 	bl	8006554 <__ssputs_r>
 8006672:	3001      	adds	r0, #1
 8006674:	f000 80a3 	beq.w	80067be <_svfiprintf_r+0x1b2>
 8006678:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800667a:	4453      	add	r3, sl
 800667c:	9309      	str	r3, [sp, #36]	; 0x24
 800667e:	783b      	ldrb	r3, [r7, #0]
 8006680:	2b00      	cmp	r3, #0
 8006682:	f000 809c 	beq.w	80067be <_svfiprintf_r+0x1b2>
 8006686:	2300      	movs	r3, #0
 8006688:	f04f 32ff 	mov.w	r2, #4294967295
 800668c:	9304      	str	r3, [sp, #16]
 800668e:	9307      	str	r3, [sp, #28]
 8006690:	9205      	str	r2, [sp, #20]
 8006692:	9306      	str	r3, [sp, #24]
 8006694:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006698:	931a      	str	r3, [sp, #104]	; 0x68
 800669a:	2205      	movs	r2, #5
 800669c:	7821      	ldrb	r1, [r4, #0]
 800669e:	4850      	ldr	r0, [pc, #320]	; (80067e0 <_svfiprintf_r+0x1d4>)
 80066a0:	f7fa f9be 	bl	8000a20 <memchr>
 80066a4:	1c67      	adds	r7, r4, #1
 80066a6:	9b04      	ldr	r3, [sp, #16]
 80066a8:	b9d8      	cbnz	r0, 80066e2 <_svfiprintf_r+0xd6>
 80066aa:	06d9      	lsls	r1, r3, #27
 80066ac:	bf44      	itt	mi
 80066ae:	2220      	movmi	r2, #32
 80066b0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80066b4:	071a      	lsls	r2, r3, #28
 80066b6:	bf44      	itt	mi
 80066b8:	222b      	movmi	r2, #43	; 0x2b
 80066ba:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80066be:	7822      	ldrb	r2, [r4, #0]
 80066c0:	2a2a      	cmp	r2, #42	; 0x2a
 80066c2:	d016      	beq.n	80066f2 <_svfiprintf_r+0xe6>
 80066c4:	9a07      	ldr	r2, [sp, #28]
 80066c6:	2100      	movs	r1, #0
 80066c8:	200a      	movs	r0, #10
 80066ca:	4627      	mov	r7, r4
 80066cc:	3401      	adds	r4, #1
 80066ce:	783b      	ldrb	r3, [r7, #0]
 80066d0:	3b30      	subs	r3, #48	; 0x30
 80066d2:	2b09      	cmp	r3, #9
 80066d4:	d951      	bls.n	800677a <_svfiprintf_r+0x16e>
 80066d6:	b1c9      	cbz	r1, 800670c <_svfiprintf_r+0x100>
 80066d8:	e011      	b.n	80066fe <_svfiprintf_r+0xf2>
 80066da:	2b25      	cmp	r3, #37	; 0x25
 80066dc:	d0c0      	beq.n	8006660 <_svfiprintf_r+0x54>
 80066de:	4627      	mov	r7, r4
 80066e0:	e7b9      	b.n	8006656 <_svfiprintf_r+0x4a>
 80066e2:	4a3f      	ldr	r2, [pc, #252]	; (80067e0 <_svfiprintf_r+0x1d4>)
 80066e4:	1a80      	subs	r0, r0, r2
 80066e6:	fa0b f000 	lsl.w	r0, fp, r0
 80066ea:	4318      	orrs	r0, r3
 80066ec:	9004      	str	r0, [sp, #16]
 80066ee:	463c      	mov	r4, r7
 80066f0:	e7d3      	b.n	800669a <_svfiprintf_r+0x8e>
 80066f2:	9a03      	ldr	r2, [sp, #12]
 80066f4:	1d11      	adds	r1, r2, #4
 80066f6:	6812      	ldr	r2, [r2, #0]
 80066f8:	9103      	str	r1, [sp, #12]
 80066fa:	2a00      	cmp	r2, #0
 80066fc:	db01      	blt.n	8006702 <_svfiprintf_r+0xf6>
 80066fe:	9207      	str	r2, [sp, #28]
 8006700:	e004      	b.n	800670c <_svfiprintf_r+0x100>
 8006702:	4252      	negs	r2, r2
 8006704:	f043 0302 	orr.w	r3, r3, #2
 8006708:	9207      	str	r2, [sp, #28]
 800670a:	9304      	str	r3, [sp, #16]
 800670c:	783b      	ldrb	r3, [r7, #0]
 800670e:	2b2e      	cmp	r3, #46	; 0x2e
 8006710:	d10e      	bne.n	8006730 <_svfiprintf_r+0x124>
 8006712:	787b      	ldrb	r3, [r7, #1]
 8006714:	2b2a      	cmp	r3, #42	; 0x2a
 8006716:	f107 0101 	add.w	r1, r7, #1
 800671a:	d132      	bne.n	8006782 <_svfiprintf_r+0x176>
 800671c:	9b03      	ldr	r3, [sp, #12]
 800671e:	1d1a      	adds	r2, r3, #4
 8006720:	681b      	ldr	r3, [r3, #0]
 8006722:	9203      	str	r2, [sp, #12]
 8006724:	2b00      	cmp	r3, #0
 8006726:	bfb8      	it	lt
 8006728:	f04f 33ff 	movlt.w	r3, #4294967295
 800672c:	3702      	adds	r7, #2
 800672e:	9305      	str	r3, [sp, #20]
 8006730:	4c2c      	ldr	r4, [pc, #176]	; (80067e4 <_svfiprintf_r+0x1d8>)
 8006732:	7839      	ldrb	r1, [r7, #0]
 8006734:	2203      	movs	r2, #3
 8006736:	4620      	mov	r0, r4
 8006738:	f7fa f972 	bl	8000a20 <memchr>
 800673c:	b138      	cbz	r0, 800674e <_svfiprintf_r+0x142>
 800673e:	2340      	movs	r3, #64	; 0x40
 8006740:	1b00      	subs	r0, r0, r4
 8006742:	fa03 f000 	lsl.w	r0, r3, r0
 8006746:	9b04      	ldr	r3, [sp, #16]
 8006748:	4303      	orrs	r3, r0
 800674a:	9304      	str	r3, [sp, #16]
 800674c:	3701      	adds	r7, #1
 800674e:	7839      	ldrb	r1, [r7, #0]
 8006750:	4825      	ldr	r0, [pc, #148]	; (80067e8 <_svfiprintf_r+0x1dc>)
 8006752:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006756:	2206      	movs	r2, #6
 8006758:	1c7e      	adds	r6, r7, #1
 800675a:	f7fa f961 	bl	8000a20 <memchr>
 800675e:	2800      	cmp	r0, #0
 8006760:	d035      	beq.n	80067ce <_svfiprintf_r+0x1c2>
 8006762:	4b22      	ldr	r3, [pc, #136]	; (80067ec <_svfiprintf_r+0x1e0>)
 8006764:	b9fb      	cbnz	r3, 80067a6 <_svfiprintf_r+0x19a>
 8006766:	9b03      	ldr	r3, [sp, #12]
 8006768:	3307      	adds	r3, #7
 800676a:	f023 0307 	bic.w	r3, r3, #7
 800676e:	3308      	adds	r3, #8
 8006770:	9303      	str	r3, [sp, #12]
 8006772:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006774:	444b      	add	r3, r9
 8006776:	9309      	str	r3, [sp, #36]	; 0x24
 8006778:	e76c      	b.n	8006654 <_svfiprintf_r+0x48>
 800677a:	fb00 3202 	mla	r2, r0, r2, r3
 800677e:	2101      	movs	r1, #1
 8006780:	e7a3      	b.n	80066ca <_svfiprintf_r+0xbe>
 8006782:	2300      	movs	r3, #0
 8006784:	9305      	str	r3, [sp, #20]
 8006786:	4618      	mov	r0, r3
 8006788:	240a      	movs	r4, #10
 800678a:	460f      	mov	r7, r1
 800678c:	3101      	adds	r1, #1
 800678e:	783a      	ldrb	r2, [r7, #0]
 8006790:	3a30      	subs	r2, #48	; 0x30
 8006792:	2a09      	cmp	r2, #9
 8006794:	d903      	bls.n	800679e <_svfiprintf_r+0x192>
 8006796:	2b00      	cmp	r3, #0
 8006798:	d0ca      	beq.n	8006730 <_svfiprintf_r+0x124>
 800679a:	9005      	str	r0, [sp, #20]
 800679c:	e7c8      	b.n	8006730 <_svfiprintf_r+0x124>
 800679e:	fb04 2000 	mla	r0, r4, r0, r2
 80067a2:	2301      	movs	r3, #1
 80067a4:	e7f1      	b.n	800678a <_svfiprintf_r+0x17e>
 80067a6:	ab03      	add	r3, sp, #12
 80067a8:	9300      	str	r3, [sp, #0]
 80067aa:	462a      	mov	r2, r5
 80067ac:	4b10      	ldr	r3, [pc, #64]	; (80067f0 <_svfiprintf_r+0x1e4>)
 80067ae:	a904      	add	r1, sp, #16
 80067b0:	4640      	mov	r0, r8
 80067b2:	f7fc f9f1 	bl	8002b98 <_printf_float>
 80067b6:	f1b0 3fff 	cmp.w	r0, #4294967295
 80067ba:	4681      	mov	r9, r0
 80067bc:	d1d9      	bne.n	8006772 <_svfiprintf_r+0x166>
 80067be:	89ab      	ldrh	r3, [r5, #12]
 80067c0:	065b      	lsls	r3, r3, #25
 80067c2:	f53f af38 	bmi.w	8006636 <_svfiprintf_r+0x2a>
 80067c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80067c8:	b01d      	add	sp, #116	; 0x74
 80067ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067ce:	ab03      	add	r3, sp, #12
 80067d0:	9300      	str	r3, [sp, #0]
 80067d2:	462a      	mov	r2, r5
 80067d4:	4b06      	ldr	r3, [pc, #24]	; (80067f0 <_svfiprintf_r+0x1e4>)
 80067d6:	a904      	add	r1, sp, #16
 80067d8:	4640      	mov	r0, r8
 80067da:	f7fc fc93 	bl	8003104 <_printf_i>
 80067de:	e7ea      	b.n	80067b6 <_svfiprintf_r+0x1aa>
 80067e0:	0800719c 	.word	0x0800719c
 80067e4:	080071a2 	.word	0x080071a2
 80067e8:	080071a6 	.word	0x080071a6
 80067ec:	08002b99 	.word	0x08002b99
 80067f0:	08006555 	.word	0x08006555

080067f4 <__sfputc_r>:
 80067f4:	6893      	ldr	r3, [r2, #8]
 80067f6:	3b01      	subs	r3, #1
 80067f8:	2b00      	cmp	r3, #0
 80067fa:	b410      	push	{r4}
 80067fc:	6093      	str	r3, [r2, #8]
 80067fe:	da09      	bge.n	8006814 <__sfputc_r+0x20>
 8006800:	6994      	ldr	r4, [r2, #24]
 8006802:	42a3      	cmp	r3, r4
 8006804:	db02      	blt.n	800680c <__sfputc_r+0x18>
 8006806:	b2cb      	uxtb	r3, r1
 8006808:	2b0a      	cmp	r3, #10
 800680a:	d103      	bne.n	8006814 <__sfputc_r+0x20>
 800680c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006810:	f000 b986 	b.w	8006b20 <__swbuf_r>
 8006814:	6813      	ldr	r3, [r2, #0]
 8006816:	1c58      	adds	r0, r3, #1
 8006818:	6010      	str	r0, [r2, #0]
 800681a:	7019      	strb	r1, [r3, #0]
 800681c:	b2c8      	uxtb	r0, r1
 800681e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006822:	4770      	bx	lr

08006824 <__sfputs_r>:
 8006824:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006826:	4606      	mov	r6, r0
 8006828:	460f      	mov	r7, r1
 800682a:	4614      	mov	r4, r2
 800682c:	18d5      	adds	r5, r2, r3
 800682e:	42ac      	cmp	r4, r5
 8006830:	d101      	bne.n	8006836 <__sfputs_r+0x12>
 8006832:	2000      	movs	r0, #0
 8006834:	e007      	b.n	8006846 <__sfputs_r+0x22>
 8006836:	463a      	mov	r2, r7
 8006838:	f814 1b01 	ldrb.w	r1, [r4], #1
 800683c:	4630      	mov	r0, r6
 800683e:	f7ff ffd9 	bl	80067f4 <__sfputc_r>
 8006842:	1c43      	adds	r3, r0, #1
 8006844:	d1f3      	bne.n	800682e <__sfputs_r+0xa>
 8006846:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006848 <_vfiprintf_r>:
 8006848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800684c:	b09d      	sub	sp, #116	; 0x74
 800684e:	460c      	mov	r4, r1
 8006850:	4617      	mov	r7, r2
 8006852:	9303      	str	r3, [sp, #12]
 8006854:	4606      	mov	r6, r0
 8006856:	b118      	cbz	r0, 8006860 <_vfiprintf_r+0x18>
 8006858:	6983      	ldr	r3, [r0, #24]
 800685a:	b90b      	cbnz	r3, 8006860 <_vfiprintf_r+0x18>
 800685c:	f7fe fe50 	bl	8005500 <__sinit>
 8006860:	4b7c      	ldr	r3, [pc, #496]	; (8006a54 <_vfiprintf_r+0x20c>)
 8006862:	429c      	cmp	r4, r3
 8006864:	d157      	bne.n	8006916 <_vfiprintf_r+0xce>
 8006866:	6874      	ldr	r4, [r6, #4]
 8006868:	89a3      	ldrh	r3, [r4, #12]
 800686a:	0718      	lsls	r0, r3, #28
 800686c:	d55d      	bpl.n	800692a <_vfiprintf_r+0xe2>
 800686e:	6923      	ldr	r3, [r4, #16]
 8006870:	2b00      	cmp	r3, #0
 8006872:	d05a      	beq.n	800692a <_vfiprintf_r+0xe2>
 8006874:	2300      	movs	r3, #0
 8006876:	9309      	str	r3, [sp, #36]	; 0x24
 8006878:	2320      	movs	r3, #32
 800687a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800687e:	2330      	movs	r3, #48	; 0x30
 8006880:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006884:	f04f 0b01 	mov.w	fp, #1
 8006888:	46b8      	mov	r8, r7
 800688a:	4645      	mov	r5, r8
 800688c:	f815 3b01 	ldrb.w	r3, [r5], #1
 8006890:	2b00      	cmp	r3, #0
 8006892:	d155      	bne.n	8006940 <_vfiprintf_r+0xf8>
 8006894:	ebb8 0a07 	subs.w	sl, r8, r7
 8006898:	d00b      	beq.n	80068b2 <_vfiprintf_r+0x6a>
 800689a:	4653      	mov	r3, sl
 800689c:	463a      	mov	r2, r7
 800689e:	4621      	mov	r1, r4
 80068a0:	4630      	mov	r0, r6
 80068a2:	f7ff ffbf 	bl	8006824 <__sfputs_r>
 80068a6:	3001      	adds	r0, #1
 80068a8:	f000 80c4 	beq.w	8006a34 <_vfiprintf_r+0x1ec>
 80068ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80068ae:	4453      	add	r3, sl
 80068b0:	9309      	str	r3, [sp, #36]	; 0x24
 80068b2:	f898 3000 	ldrb.w	r3, [r8]
 80068b6:	2b00      	cmp	r3, #0
 80068b8:	f000 80bc 	beq.w	8006a34 <_vfiprintf_r+0x1ec>
 80068bc:	2300      	movs	r3, #0
 80068be:	f04f 32ff 	mov.w	r2, #4294967295
 80068c2:	9304      	str	r3, [sp, #16]
 80068c4:	9307      	str	r3, [sp, #28]
 80068c6:	9205      	str	r2, [sp, #20]
 80068c8:	9306      	str	r3, [sp, #24]
 80068ca:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80068ce:	931a      	str	r3, [sp, #104]	; 0x68
 80068d0:	2205      	movs	r2, #5
 80068d2:	7829      	ldrb	r1, [r5, #0]
 80068d4:	4860      	ldr	r0, [pc, #384]	; (8006a58 <_vfiprintf_r+0x210>)
 80068d6:	f7fa f8a3 	bl	8000a20 <memchr>
 80068da:	f105 0801 	add.w	r8, r5, #1
 80068de:	9b04      	ldr	r3, [sp, #16]
 80068e0:	2800      	cmp	r0, #0
 80068e2:	d131      	bne.n	8006948 <_vfiprintf_r+0x100>
 80068e4:	06d9      	lsls	r1, r3, #27
 80068e6:	bf44      	itt	mi
 80068e8:	2220      	movmi	r2, #32
 80068ea:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80068ee:	071a      	lsls	r2, r3, #28
 80068f0:	bf44      	itt	mi
 80068f2:	222b      	movmi	r2, #43	; 0x2b
 80068f4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80068f8:	782a      	ldrb	r2, [r5, #0]
 80068fa:	2a2a      	cmp	r2, #42	; 0x2a
 80068fc:	d02c      	beq.n	8006958 <_vfiprintf_r+0x110>
 80068fe:	9a07      	ldr	r2, [sp, #28]
 8006900:	2100      	movs	r1, #0
 8006902:	200a      	movs	r0, #10
 8006904:	46a8      	mov	r8, r5
 8006906:	3501      	adds	r5, #1
 8006908:	f898 3000 	ldrb.w	r3, [r8]
 800690c:	3b30      	subs	r3, #48	; 0x30
 800690e:	2b09      	cmp	r3, #9
 8006910:	d96d      	bls.n	80069ee <_vfiprintf_r+0x1a6>
 8006912:	b371      	cbz	r1, 8006972 <_vfiprintf_r+0x12a>
 8006914:	e026      	b.n	8006964 <_vfiprintf_r+0x11c>
 8006916:	4b51      	ldr	r3, [pc, #324]	; (8006a5c <_vfiprintf_r+0x214>)
 8006918:	429c      	cmp	r4, r3
 800691a:	d101      	bne.n	8006920 <_vfiprintf_r+0xd8>
 800691c:	68b4      	ldr	r4, [r6, #8]
 800691e:	e7a3      	b.n	8006868 <_vfiprintf_r+0x20>
 8006920:	4b4f      	ldr	r3, [pc, #316]	; (8006a60 <_vfiprintf_r+0x218>)
 8006922:	429c      	cmp	r4, r3
 8006924:	bf08      	it	eq
 8006926:	68f4      	ldreq	r4, [r6, #12]
 8006928:	e79e      	b.n	8006868 <_vfiprintf_r+0x20>
 800692a:	4621      	mov	r1, r4
 800692c:	4630      	mov	r0, r6
 800692e:	f000 f969 	bl	8006c04 <__swsetup_r>
 8006932:	2800      	cmp	r0, #0
 8006934:	d09e      	beq.n	8006874 <_vfiprintf_r+0x2c>
 8006936:	f04f 30ff 	mov.w	r0, #4294967295
 800693a:	b01d      	add	sp, #116	; 0x74
 800693c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006940:	2b25      	cmp	r3, #37	; 0x25
 8006942:	d0a7      	beq.n	8006894 <_vfiprintf_r+0x4c>
 8006944:	46a8      	mov	r8, r5
 8006946:	e7a0      	b.n	800688a <_vfiprintf_r+0x42>
 8006948:	4a43      	ldr	r2, [pc, #268]	; (8006a58 <_vfiprintf_r+0x210>)
 800694a:	1a80      	subs	r0, r0, r2
 800694c:	fa0b f000 	lsl.w	r0, fp, r0
 8006950:	4318      	orrs	r0, r3
 8006952:	9004      	str	r0, [sp, #16]
 8006954:	4645      	mov	r5, r8
 8006956:	e7bb      	b.n	80068d0 <_vfiprintf_r+0x88>
 8006958:	9a03      	ldr	r2, [sp, #12]
 800695a:	1d11      	adds	r1, r2, #4
 800695c:	6812      	ldr	r2, [r2, #0]
 800695e:	9103      	str	r1, [sp, #12]
 8006960:	2a00      	cmp	r2, #0
 8006962:	db01      	blt.n	8006968 <_vfiprintf_r+0x120>
 8006964:	9207      	str	r2, [sp, #28]
 8006966:	e004      	b.n	8006972 <_vfiprintf_r+0x12a>
 8006968:	4252      	negs	r2, r2
 800696a:	f043 0302 	orr.w	r3, r3, #2
 800696e:	9207      	str	r2, [sp, #28]
 8006970:	9304      	str	r3, [sp, #16]
 8006972:	f898 3000 	ldrb.w	r3, [r8]
 8006976:	2b2e      	cmp	r3, #46	; 0x2e
 8006978:	d110      	bne.n	800699c <_vfiprintf_r+0x154>
 800697a:	f898 3001 	ldrb.w	r3, [r8, #1]
 800697e:	2b2a      	cmp	r3, #42	; 0x2a
 8006980:	f108 0101 	add.w	r1, r8, #1
 8006984:	d137      	bne.n	80069f6 <_vfiprintf_r+0x1ae>
 8006986:	9b03      	ldr	r3, [sp, #12]
 8006988:	1d1a      	adds	r2, r3, #4
 800698a:	681b      	ldr	r3, [r3, #0]
 800698c:	9203      	str	r2, [sp, #12]
 800698e:	2b00      	cmp	r3, #0
 8006990:	bfb8      	it	lt
 8006992:	f04f 33ff 	movlt.w	r3, #4294967295
 8006996:	f108 0802 	add.w	r8, r8, #2
 800699a:	9305      	str	r3, [sp, #20]
 800699c:	4d31      	ldr	r5, [pc, #196]	; (8006a64 <_vfiprintf_r+0x21c>)
 800699e:	f898 1000 	ldrb.w	r1, [r8]
 80069a2:	2203      	movs	r2, #3
 80069a4:	4628      	mov	r0, r5
 80069a6:	f7fa f83b 	bl	8000a20 <memchr>
 80069aa:	b140      	cbz	r0, 80069be <_vfiprintf_r+0x176>
 80069ac:	2340      	movs	r3, #64	; 0x40
 80069ae:	1b40      	subs	r0, r0, r5
 80069b0:	fa03 f000 	lsl.w	r0, r3, r0
 80069b4:	9b04      	ldr	r3, [sp, #16]
 80069b6:	4303      	orrs	r3, r0
 80069b8:	9304      	str	r3, [sp, #16]
 80069ba:	f108 0801 	add.w	r8, r8, #1
 80069be:	f898 1000 	ldrb.w	r1, [r8]
 80069c2:	4829      	ldr	r0, [pc, #164]	; (8006a68 <_vfiprintf_r+0x220>)
 80069c4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80069c8:	2206      	movs	r2, #6
 80069ca:	f108 0701 	add.w	r7, r8, #1
 80069ce:	f7fa f827 	bl	8000a20 <memchr>
 80069d2:	2800      	cmp	r0, #0
 80069d4:	d034      	beq.n	8006a40 <_vfiprintf_r+0x1f8>
 80069d6:	4b25      	ldr	r3, [pc, #148]	; (8006a6c <_vfiprintf_r+0x224>)
 80069d8:	bb03      	cbnz	r3, 8006a1c <_vfiprintf_r+0x1d4>
 80069da:	9b03      	ldr	r3, [sp, #12]
 80069dc:	3307      	adds	r3, #7
 80069de:	f023 0307 	bic.w	r3, r3, #7
 80069e2:	3308      	adds	r3, #8
 80069e4:	9303      	str	r3, [sp, #12]
 80069e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80069e8:	444b      	add	r3, r9
 80069ea:	9309      	str	r3, [sp, #36]	; 0x24
 80069ec:	e74c      	b.n	8006888 <_vfiprintf_r+0x40>
 80069ee:	fb00 3202 	mla	r2, r0, r2, r3
 80069f2:	2101      	movs	r1, #1
 80069f4:	e786      	b.n	8006904 <_vfiprintf_r+0xbc>
 80069f6:	2300      	movs	r3, #0
 80069f8:	9305      	str	r3, [sp, #20]
 80069fa:	4618      	mov	r0, r3
 80069fc:	250a      	movs	r5, #10
 80069fe:	4688      	mov	r8, r1
 8006a00:	3101      	adds	r1, #1
 8006a02:	f898 2000 	ldrb.w	r2, [r8]
 8006a06:	3a30      	subs	r2, #48	; 0x30
 8006a08:	2a09      	cmp	r2, #9
 8006a0a:	d903      	bls.n	8006a14 <_vfiprintf_r+0x1cc>
 8006a0c:	2b00      	cmp	r3, #0
 8006a0e:	d0c5      	beq.n	800699c <_vfiprintf_r+0x154>
 8006a10:	9005      	str	r0, [sp, #20]
 8006a12:	e7c3      	b.n	800699c <_vfiprintf_r+0x154>
 8006a14:	fb05 2000 	mla	r0, r5, r0, r2
 8006a18:	2301      	movs	r3, #1
 8006a1a:	e7f0      	b.n	80069fe <_vfiprintf_r+0x1b6>
 8006a1c:	ab03      	add	r3, sp, #12
 8006a1e:	9300      	str	r3, [sp, #0]
 8006a20:	4622      	mov	r2, r4
 8006a22:	4b13      	ldr	r3, [pc, #76]	; (8006a70 <_vfiprintf_r+0x228>)
 8006a24:	a904      	add	r1, sp, #16
 8006a26:	4630      	mov	r0, r6
 8006a28:	f7fc f8b6 	bl	8002b98 <_printf_float>
 8006a2c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8006a30:	4681      	mov	r9, r0
 8006a32:	d1d8      	bne.n	80069e6 <_vfiprintf_r+0x19e>
 8006a34:	89a3      	ldrh	r3, [r4, #12]
 8006a36:	065b      	lsls	r3, r3, #25
 8006a38:	f53f af7d 	bmi.w	8006936 <_vfiprintf_r+0xee>
 8006a3c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006a3e:	e77c      	b.n	800693a <_vfiprintf_r+0xf2>
 8006a40:	ab03      	add	r3, sp, #12
 8006a42:	9300      	str	r3, [sp, #0]
 8006a44:	4622      	mov	r2, r4
 8006a46:	4b0a      	ldr	r3, [pc, #40]	; (8006a70 <_vfiprintf_r+0x228>)
 8006a48:	a904      	add	r1, sp, #16
 8006a4a:	4630      	mov	r0, r6
 8006a4c:	f7fc fb5a 	bl	8003104 <_printf_i>
 8006a50:	e7ec      	b.n	8006a2c <_vfiprintf_r+0x1e4>
 8006a52:	bf00      	nop
 8006a54:	08007050 	.word	0x08007050
 8006a58:	0800719c 	.word	0x0800719c
 8006a5c:	08007070 	.word	0x08007070
 8006a60:	08007030 	.word	0x08007030
 8006a64:	080071a2 	.word	0x080071a2
 8006a68:	080071a6 	.word	0x080071a6
 8006a6c:	08002b99 	.word	0x08002b99
 8006a70:	08006825 	.word	0x08006825

08006a74 <__sread>:
 8006a74:	b510      	push	{r4, lr}
 8006a76:	460c      	mov	r4, r1
 8006a78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006a7c:	f000 f9b4 	bl	8006de8 <_read_r>
 8006a80:	2800      	cmp	r0, #0
 8006a82:	bfab      	itete	ge
 8006a84:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8006a86:	89a3      	ldrhlt	r3, [r4, #12]
 8006a88:	181b      	addge	r3, r3, r0
 8006a8a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006a8e:	bfac      	ite	ge
 8006a90:	6563      	strge	r3, [r4, #84]	; 0x54
 8006a92:	81a3      	strhlt	r3, [r4, #12]
 8006a94:	bd10      	pop	{r4, pc}

08006a96 <__swrite>:
 8006a96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006a9a:	461f      	mov	r7, r3
 8006a9c:	898b      	ldrh	r3, [r1, #12]
 8006a9e:	05db      	lsls	r3, r3, #23
 8006aa0:	4605      	mov	r5, r0
 8006aa2:	460c      	mov	r4, r1
 8006aa4:	4616      	mov	r6, r2
 8006aa6:	d505      	bpl.n	8006ab4 <__swrite+0x1e>
 8006aa8:	2302      	movs	r3, #2
 8006aaa:	2200      	movs	r2, #0
 8006aac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006ab0:	f000 f948 	bl	8006d44 <_lseek_r>
 8006ab4:	89a3      	ldrh	r3, [r4, #12]
 8006ab6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006aba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006abe:	81a3      	strh	r3, [r4, #12]
 8006ac0:	4632      	mov	r2, r6
 8006ac2:	463b      	mov	r3, r7
 8006ac4:	4628      	mov	r0, r5
 8006ac6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006aca:	f000 b889 	b.w	8006be0 <_write_r>

08006ace <__sseek>:
 8006ace:	b510      	push	{r4, lr}
 8006ad0:	460c      	mov	r4, r1
 8006ad2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006ad6:	f000 f935 	bl	8006d44 <_lseek_r>
 8006ada:	1c43      	adds	r3, r0, #1
 8006adc:	89a3      	ldrh	r3, [r4, #12]
 8006ade:	bf15      	itete	ne
 8006ae0:	6560      	strne	r0, [r4, #84]	; 0x54
 8006ae2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8006ae6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006aea:	81a3      	strheq	r3, [r4, #12]
 8006aec:	bf18      	it	ne
 8006aee:	81a3      	strhne	r3, [r4, #12]
 8006af0:	bd10      	pop	{r4, pc}

08006af2 <__sclose>:
 8006af2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006af6:	f000 b8f3 	b.w	8006ce0 <_close_r>

08006afa <strncmp>:
 8006afa:	b510      	push	{r4, lr}
 8006afc:	b16a      	cbz	r2, 8006b1a <strncmp+0x20>
 8006afe:	3901      	subs	r1, #1
 8006b00:	1884      	adds	r4, r0, r2
 8006b02:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006b06:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8006b0a:	4293      	cmp	r3, r2
 8006b0c:	d103      	bne.n	8006b16 <strncmp+0x1c>
 8006b0e:	42a0      	cmp	r0, r4
 8006b10:	d001      	beq.n	8006b16 <strncmp+0x1c>
 8006b12:	2b00      	cmp	r3, #0
 8006b14:	d1f5      	bne.n	8006b02 <strncmp+0x8>
 8006b16:	1a98      	subs	r0, r3, r2
 8006b18:	bd10      	pop	{r4, pc}
 8006b1a:	4610      	mov	r0, r2
 8006b1c:	bd10      	pop	{r4, pc}
	...

08006b20 <__swbuf_r>:
 8006b20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b22:	460e      	mov	r6, r1
 8006b24:	4614      	mov	r4, r2
 8006b26:	4605      	mov	r5, r0
 8006b28:	b118      	cbz	r0, 8006b32 <__swbuf_r+0x12>
 8006b2a:	6983      	ldr	r3, [r0, #24]
 8006b2c:	b90b      	cbnz	r3, 8006b32 <__swbuf_r+0x12>
 8006b2e:	f7fe fce7 	bl	8005500 <__sinit>
 8006b32:	4b21      	ldr	r3, [pc, #132]	; (8006bb8 <__swbuf_r+0x98>)
 8006b34:	429c      	cmp	r4, r3
 8006b36:	d12a      	bne.n	8006b8e <__swbuf_r+0x6e>
 8006b38:	686c      	ldr	r4, [r5, #4]
 8006b3a:	69a3      	ldr	r3, [r4, #24]
 8006b3c:	60a3      	str	r3, [r4, #8]
 8006b3e:	89a3      	ldrh	r3, [r4, #12]
 8006b40:	071a      	lsls	r2, r3, #28
 8006b42:	d52e      	bpl.n	8006ba2 <__swbuf_r+0x82>
 8006b44:	6923      	ldr	r3, [r4, #16]
 8006b46:	b363      	cbz	r3, 8006ba2 <__swbuf_r+0x82>
 8006b48:	6923      	ldr	r3, [r4, #16]
 8006b4a:	6820      	ldr	r0, [r4, #0]
 8006b4c:	1ac0      	subs	r0, r0, r3
 8006b4e:	6963      	ldr	r3, [r4, #20]
 8006b50:	b2f6      	uxtb	r6, r6
 8006b52:	4298      	cmp	r0, r3
 8006b54:	4637      	mov	r7, r6
 8006b56:	db04      	blt.n	8006b62 <__swbuf_r+0x42>
 8006b58:	4621      	mov	r1, r4
 8006b5a:	4628      	mov	r0, r5
 8006b5c:	f7fe fc66 	bl	800542c <_fflush_r>
 8006b60:	bb28      	cbnz	r0, 8006bae <__swbuf_r+0x8e>
 8006b62:	68a3      	ldr	r3, [r4, #8]
 8006b64:	3b01      	subs	r3, #1
 8006b66:	60a3      	str	r3, [r4, #8]
 8006b68:	6823      	ldr	r3, [r4, #0]
 8006b6a:	1c5a      	adds	r2, r3, #1
 8006b6c:	6022      	str	r2, [r4, #0]
 8006b6e:	701e      	strb	r6, [r3, #0]
 8006b70:	6963      	ldr	r3, [r4, #20]
 8006b72:	3001      	adds	r0, #1
 8006b74:	4298      	cmp	r0, r3
 8006b76:	d004      	beq.n	8006b82 <__swbuf_r+0x62>
 8006b78:	89a3      	ldrh	r3, [r4, #12]
 8006b7a:	07db      	lsls	r3, r3, #31
 8006b7c:	d519      	bpl.n	8006bb2 <__swbuf_r+0x92>
 8006b7e:	2e0a      	cmp	r6, #10
 8006b80:	d117      	bne.n	8006bb2 <__swbuf_r+0x92>
 8006b82:	4621      	mov	r1, r4
 8006b84:	4628      	mov	r0, r5
 8006b86:	f7fe fc51 	bl	800542c <_fflush_r>
 8006b8a:	b190      	cbz	r0, 8006bb2 <__swbuf_r+0x92>
 8006b8c:	e00f      	b.n	8006bae <__swbuf_r+0x8e>
 8006b8e:	4b0b      	ldr	r3, [pc, #44]	; (8006bbc <__swbuf_r+0x9c>)
 8006b90:	429c      	cmp	r4, r3
 8006b92:	d101      	bne.n	8006b98 <__swbuf_r+0x78>
 8006b94:	68ac      	ldr	r4, [r5, #8]
 8006b96:	e7d0      	b.n	8006b3a <__swbuf_r+0x1a>
 8006b98:	4b09      	ldr	r3, [pc, #36]	; (8006bc0 <__swbuf_r+0xa0>)
 8006b9a:	429c      	cmp	r4, r3
 8006b9c:	bf08      	it	eq
 8006b9e:	68ec      	ldreq	r4, [r5, #12]
 8006ba0:	e7cb      	b.n	8006b3a <__swbuf_r+0x1a>
 8006ba2:	4621      	mov	r1, r4
 8006ba4:	4628      	mov	r0, r5
 8006ba6:	f000 f82d 	bl	8006c04 <__swsetup_r>
 8006baa:	2800      	cmp	r0, #0
 8006bac:	d0cc      	beq.n	8006b48 <__swbuf_r+0x28>
 8006bae:	f04f 37ff 	mov.w	r7, #4294967295
 8006bb2:	4638      	mov	r0, r7
 8006bb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006bb6:	bf00      	nop
 8006bb8:	08007050 	.word	0x08007050
 8006bbc:	08007070 	.word	0x08007070
 8006bc0:	08007030 	.word	0x08007030

08006bc4 <__ascii_wctomb>:
 8006bc4:	b149      	cbz	r1, 8006bda <__ascii_wctomb+0x16>
 8006bc6:	2aff      	cmp	r2, #255	; 0xff
 8006bc8:	bf85      	ittet	hi
 8006bca:	238a      	movhi	r3, #138	; 0x8a
 8006bcc:	6003      	strhi	r3, [r0, #0]
 8006bce:	700a      	strbls	r2, [r1, #0]
 8006bd0:	f04f 30ff 	movhi.w	r0, #4294967295
 8006bd4:	bf98      	it	ls
 8006bd6:	2001      	movls	r0, #1
 8006bd8:	4770      	bx	lr
 8006bda:	4608      	mov	r0, r1
 8006bdc:	4770      	bx	lr
	...

08006be0 <_write_r>:
 8006be0:	b538      	push	{r3, r4, r5, lr}
 8006be2:	4c07      	ldr	r4, [pc, #28]	; (8006c00 <_write_r+0x20>)
 8006be4:	4605      	mov	r5, r0
 8006be6:	4608      	mov	r0, r1
 8006be8:	4611      	mov	r1, r2
 8006bea:	2200      	movs	r2, #0
 8006bec:	6022      	str	r2, [r4, #0]
 8006bee:	461a      	mov	r2, r3
 8006bf0:	f7fb fca5 	bl	800253e <_write>
 8006bf4:	1c43      	adds	r3, r0, #1
 8006bf6:	d102      	bne.n	8006bfe <_write_r+0x1e>
 8006bf8:	6823      	ldr	r3, [r4, #0]
 8006bfa:	b103      	cbz	r3, 8006bfe <_write_r+0x1e>
 8006bfc:	602b      	str	r3, [r5, #0]
 8006bfe:	bd38      	pop	{r3, r4, r5, pc}
 8006c00:	20000450 	.word	0x20000450

08006c04 <__swsetup_r>:
 8006c04:	4b32      	ldr	r3, [pc, #200]	; (8006cd0 <__swsetup_r+0xcc>)
 8006c06:	b570      	push	{r4, r5, r6, lr}
 8006c08:	681d      	ldr	r5, [r3, #0]
 8006c0a:	4606      	mov	r6, r0
 8006c0c:	460c      	mov	r4, r1
 8006c0e:	b125      	cbz	r5, 8006c1a <__swsetup_r+0x16>
 8006c10:	69ab      	ldr	r3, [r5, #24]
 8006c12:	b913      	cbnz	r3, 8006c1a <__swsetup_r+0x16>
 8006c14:	4628      	mov	r0, r5
 8006c16:	f7fe fc73 	bl	8005500 <__sinit>
 8006c1a:	4b2e      	ldr	r3, [pc, #184]	; (8006cd4 <__swsetup_r+0xd0>)
 8006c1c:	429c      	cmp	r4, r3
 8006c1e:	d10f      	bne.n	8006c40 <__swsetup_r+0x3c>
 8006c20:	686c      	ldr	r4, [r5, #4]
 8006c22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006c26:	b29a      	uxth	r2, r3
 8006c28:	0715      	lsls	r5, r2, #28
 8006c2a:	d42c      	bmi.n	8006c86 <__swsetup_r+0x82>
 8006c2c:	06d0      	lsls	r0, r2, #27
 8006c2e:	d411      	bmi.n	8006c54 <__swsetup_r+0x50>
 8006c30:	2209      	movs	r2, #9
 8006c32:	6032      	str	r2, [r6, #0]
 8006c34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006c38:	81a3      	strh	r3, [r4, #12]
 8006c3a:	f04f 30ff 	mov.w	r0, #4294967295
 8006c3e:	bd70      	pop	{r4, r5, r6, pc}
 8006c40:	4b25      	ldr	r3, [pc, #148]	; (8006cd8 <__swsetup_r+0xd4>)
 8006c42:	429c      	cmp	r4, r3
 8006c44:	d101      	bne.n	8006c4a <__swsetup_r+0x46>
 8006c46:	68ac      	ldr	r4, [r5, #8]
 8006c48:	e7eb      	b.n	8006c22 <__swsetup_r+0x1e>
 8006c4a:	4b24      	ldr	r3, [pc, #144]	; (8006cdc <__swsetup_r+0xd8>)
 8006c4c:	429c      	cmp	r4, r3
 8006c4e:	bf08      	it	eq
 8006c50:	68ec      	ldreq	r4, [r5, #12]
 8006c52:	e7e6      	b.n	8006c22 <__swsetup_r+0x1e>
 8006c54:	0751      	lsls	r1, r2, #29
 8006c56:	d512      	bpl.n	8006c7e <__swsetup_r+0x7a>
 8006c58:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006c5a:	b141      	cbz	r1, 8006c6e <__swsetup_r+0x6a>
 8006c5c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006c60:	4299      	cmp	r1, r3
 8006c62:	d002      	beq.n	8006c6a <__swsetup_r+0x66>
 8006c64:	4630      	mov	r0, r6
 8006c66:	f7fb fe55 	bl	8002914 <_free_r>
 8006c6a:	2300      	movs	r3, #0
 8006c6c:	6363      	str	r3, [r4, #52]	; 0x34
 8006c6e:	89a3      	ldrh	r3, [r4, #12]
 8006c70:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8006c74:	81a3      	strh	r3, [r4, #12]
 8006c76:	2300      	movs	r3, #0
 8006c78:	6063      	str	r3, [r4, #4]
 8006c7a:	6923      	ldr	r3, [r4, #16]
 8006c7c:	6023      	str	r3, [r4, #0]
 8006c7e:	89a3      	ldrh	r3, [r4, #12]
 8006c80:	f043 0308 	orr.w	r3, r3, #8
 8006c84:	81a3      	strh	r3, [r4, #12]
 8006c86:	6923      	ldr	r3, [r4, #16]
 8006c88:	b94b      	cbnz	r3, 8006c9e <__swsetup_r+0x9a>
 8006c8a:	89a3      	ldrh	r3, [r4, #12]
 8006c8c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8006c90:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006c94:	d003      	beq.n	8006c9e <__swsetup_r+0x9a>
 8006c96:	4621      	mov	r1, r4
 8006c98:	4630      	mov	r0, r6
 8006c9a:	f7ff f80f 	bl	8005cbc <__smakebuf_r>
 8006c9e:	89a2      	ldrh	r2, [r4, #12]
 8006ca0:	f012 0301 	ands.w	r3, r2, #1
 8006ca4:	d00c      	beq.n	8006cc0 <__swsetup_r+0xbc>
 8006ca6:	2300      	movs	r3, #0
 8006ca8:	60a3      	str	r3, [r4, #8]
 8006caa:	6963      	ldr	r3, [r4, #20]
 8006cac:	425b      	negs	r3, r3
 8006cae:	61a3      	str	r3, [r4, #24]
 8006cb0:	6923      	ldr	r3, [r4, #16]
 8006cb2:	b953      	cbnz	r3, 8006cca <__swsetup_r+0xc6>
 8006cb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006cb8:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8006cbc:	d1ba      	bne.n	8006c34 <__swsetup_r+0x30>
 8006cbe:	bd70      	pop	{r4, r5, r6, pc}
 8006cc0:	0792      	lsls	r2, r2, #30
 8006cc2:	bf58      	it	pl
 8006cc4:	6963      	ldrpl	r3, [r4, #20]
 8006cc6:	60a3      	str	r3, [r4, #8]
 8006cc8:	e7f2      	b.n	8006cb0 <__swsetup_r+0xac>
 8006cca:	2000      	movs	r0, #0
 8006ccc:	e7f7      	b.n	8006cbe <__swsetup_r+0xba>
 8006cce:	bf00      	nop
 8006cd0:	20000238 	.word	0x20000238
 8006cd4:	08007050 	.word	0x08007050
 8006cd8:	08007070 	.word	0x08007070
 8006cdc:	08007030 	.word	0x08007030

08006ce0 <_close_r>:
 8006ce0:	b538      	push	{r3, r4, r5, lr}
 8006ce2:	4c06      	ldr	r4, [pc, #24]	; (8006cfc <_close_r+0x1c>)
 8006ce4:	2300      	movs	r3, #0
 8006ce6:	4605      	mov	r5, r0
 8006ce8:	4608      	mov	r0, r1
 8006cea:	6023      	str	r3, [r4, #0]
 8006cec:	f7fb fc43 	bl	8002576 <_close>
 8006cf0:	1c43      	adds	r3, r0, #1
 8006cf2:	d102      	bne.n	8006cfa <_close_r+0x1a>
 8006cf4:	6823      	ldr	r3, [r4, #0]
 8006cf6:	b103      	cbz	r3, 8006cfa <_close_r+0x1a>
 8006cf8:	602b      	str	r3, [r5, #0]
 8006cfa:	bd38      	pop	{r3, r4, r5, pc}
 8006cfc:	20000450 	.word	0x20000450

08006d00 <_fstat_r>:
 8006d00:	b538      	push	{r3, r4, r5, lr}
 8006d02:	4c07      	ldr	r4, [pc, #28]	; (8006d20 <_fstat_r+0x20>)
 8006d04:	2300      	movs	r3, #0
 8006d06:	4605      	mov	r5, r0
 8006d08:	4608      	mov	r0, r1
 8006d0a:	4611      	mov	r1, r2
 8006d0c:	6023      	str	r3, [r4, #0]
 8006d0e:	f7fb fc3e 	bl	800258e <_fstat>
 8006d12:	1c43      	adds	r3, r0, #1
 8006d14:	d102      	bne.n	8006d1c <_fstat_r+0x1c>
 8006d16:	6823      	ldr	r3, [r4, #0]
 8006d18:	b103      	cbz	r3, 8006d1c <_fstat_r+0x1c>
 8006d1a:	602b      	str	r3, [r5, #0]
 8006d1c:	bd38      	pop	{r3, r4, r5, pc}
 8006d1e:	bf00      	nop
 8006d20:	20000450 	.word	0x20000450

08006d24 <_isatty_r>:
 8006d24:	b538      	push	{r3, r4, r5, lr}
 8006d26:	4c06      	ldr	r4, [pc, #24]	; (8006d40 <_isatty_r+0x1c>)
 8006d28:	2300      	movs	r3, #0
 8006d2a:	4605      	mov	r5, r0
 8006d2c:	4608      	mov	r0, r1
 8006d2e:	6023      	str	r3, [r4, #0]
 8006d30:	f7fb fc3d 	bl	80025ae <_isatty>
 8006d34:	1c43      	adds	r3, r0, #1
 8006d36:	d102      	bne.n	8006d3e <_isatty_r+0x1a>
 8006d38:	6823      	ldr	r3, [r4, #0]
 8006d3a:	b103      	cbz	r3, 8006d3e <_isatty_r+0x1a>
 8006d3c:	602b      	str	r3, [r5, #0]
 8006d3e:	bd38      	pop	{r3, r4, r5, pc}
 8006d40:	20000450 	.word	0x20000450

08006d44 <_lseek_r>:
 8006d44:	b538      	push	{r3, r4, r5, lr}
 8006d46:	4c07      	ldr	r4, [pc, #28]	; (8006d64 <_lseek_r+0x20>)
 8006d48:	4605      	mov	r5, r0
 8006d4a:	4608      	mov	r0, r1
 8006d4c:	4611      	mov	r1, r2
 8006d4e:	2200      	movs	r2, #0
 8006d50:	6022      	str	r2, [r4, #0]
 8006d52:	461a      	mov	r2, r3
 8006d54:	f7fb fc36 	bl	80025c4 <_lseek>
 8006d58:	1c43      	adds	r3, r0, #1
 8006d5a:	d102      	bne.n	8006d62 <_lseek_r+0x1e>
 8006d5c:	6823      	ldr	r3, [r4, #0]
 8006d5e:	b103      	cbz	r3, 8006d62 <_lseek_r+0x1e>
 8006d60:	602b      	str	r3, [r5, #0]
 8006d62:	bd38      	pop	{r3, r4, r5, pc}
 8006d64:	20000450 	.word	0x20000450

08006d68 <memmove>:
 8006d68:	4288      	cmp	r0, r1
 8006d6a:	b510      	push	{r4, lr}
 8006d6c:	eb01 0302 	add.w	r3, r1, r2
 8006d70:	d803      	bhi.n	8006d7a <memmove+0x12>
 8006d72:	1e42      	subs	r2, r0, #1
 8006d74:	4299      	cmp	r1, r3
 8006d76:	d10c      	bne.n	8006d92 <memmove+0x2a>
 8006d78:	bd10      	pop	{r4, pc}
 8006d7a:	4298      	cmp	r0, r3
 8006d7c:	d2f9      	bcs.n	8006d72 <memmove+0xa>
 8006d7e:	1881      	adds	r1, r0, r2
 8006d80:	1ad2      	subs	r2, r2, r3
 8006d82:	42d3      	cmn	r3, r2
 8006d84:	d100      	bne.n	8006d88 <memmove+0x20>
 8006d86:	bd10      	pop	{r4, pc}
 8006d88:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006d8c:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8006d90:	e7f7      	b.n	8006d82 <memmove+0x1a>
 8006d92:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006d96:	f802 4f01 	strb.w	r4, [r2, #1]!
 8006d9a:	e7eb      	b.n	8006d74 <memmove+0xc>

08006d9c <_realloc_r>:
 8006d9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d9e:	4607      	mov	r7, r0
 8006da0:	4614      	mov	r4, r2
 8006da2:	460e      	mov	r6, r1
 8006da4:	b921      	cbnz	r1, 8006db0 <_realloc_r+0x14>
 8006da6:	4611      	mov	r1, r2
 8006da8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006dac:	f7fb be00 	b.w	80029b0 <_malloc_r>
 8006db0:	b922      	cbnz	r2, 8006dbc <_realloc_r+0x20>
 8006db2:	f7fb fdaf 	bl	8002914 <_free_r>
 8006db6:	4625      	mov	r5, r4
 8006db8:	4628      	mov	r0, r5
 8006dba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006dbc:	f000 f826 	bl	8006e0c <_malloc_usable_size_r>
 8006dc0:	4284      	cmp	r4, r0
 8006dc2:	d90f      	bls.n	8006de4 <_realloc_r+0x48>
 8006dc4:	4621      	mov	r1, r4
 8006dc6:	4638      	mov	r0, r7
 8006dc8:	f7fb fdf2 	bl	80029b0 <_malloc_r>
 8006dcc:	4605      	mov	r5, r0
 8006dce:	2800      	cmp	r0, #0
 8006dd0:	d0f2      	beq.n	8006db8 <_realloc_r+0x1c>
 8006dd2:	4631      	mov	r1, r6
 8006dd4:	4622      	mov	r2, r4
 8006dd6:	f7fe ffc3 	bl	8005d60 <memcpy>
 8006dda:	4631      	mov	r1, r6
 8006ddc:	4638      	mov	r0, r7
 8006dde:	f7fb fd99 	bl	8002914 <_free_r>
 8006de2:	e7e9      	b.n	8006db8 <_realloc_r+0x1c>
 8006de4:	4635      	mov	r5, r6
 8006de6:	e7e7      	b.n	8006db8 <_realloc_r+0x1c>

08006de8 <_read_r>:
 8006de8:	b538      	push	{r3, r4, r5, lr}
 8006dea:	4c07      	ldr	r4, [pc, #28]	; (8006e08 <_read_r+0x20>)
 8006dec:	4605      	mov	r5, r0
 8006dee:	4608      	mov	r0, r1
 8006df0:	4611      	mov	r1, r2
 8006df2:	2200      	movs	r2, #0
 8006df4:	6022      	str	r2, [r4, #0]
 8006df6:	461a      	mov	r2, r3
 8006df8:	f7fb fb78 	bl	80024ec <_read>
 8006dfc:	1c43      	adds	r3, r0, #1
 8006dfe:	d102      	bne.n	8006e06 <_read_r+0x1e>
 8006e00:	6823      	ldr	r3, [r4, #0]
 8006e02:	b103      	cbz	r3, 8006e06 <_read_r+0x1e>
 8006e04:	602b      	str	r3, [r5, #0]
 8006e06:	bd38      	pop	{r3, r4, r5, pc}
 8006e08:	20000450 	.word	0x20000450

08006e0c <_malloc_usable_size_r>:
 8006e0c:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8006e10:	2800      	cmp	r0, #0
 8006e12:	f1a0 0004 	sub.w	r0, r0, #4
 8006e16:	bfbc      	itt	lt
 8006e18:	580b      	ldrlt	r3, [r1, r0]
 8006e1a:	18c0      	addlt	r0, r0, r3
 8006e1c:	4770      	bx	lr
	...

08006e20 <_init>:
 8006e20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006e22:	bf00      	nop
 8006e24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006e26:	bc08      	pop	{r3}
 8006e28:	469e      	mov	lr, r3
 8006e2a:	4770      	bx	lr

08006e2c <_fini>:
 8006e2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006e2e:	bf00      	nop
 8006e30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006e32:	bc08      	pop	{r3}
 8006e34:	469e      	mov	lr, r3
 8006e36:	4770      	bx	lr
